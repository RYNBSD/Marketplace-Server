{
  "version": 3,
  "sources": ["../ts/app.ts", "../ts/src/util/access.ts", "../ts/src/schema/db.ts", "../ts/src/schema/id.ts", "../ts/src/schema/session.ts", "../ts/src/schema/validators.ts", "../ts/src/schema/req/api/auth.ts", "../ts/src/schema/req/api/store.ts", "../ts/src/schema/req/api/user/index.ts", "../ts/src/schema/req/api/user/orders.ts", "../ts/src/schema/req/api/dashboard/store/index.ts", "../ts/src/schema/req/api/dashboard/store/categories.ts", "../ts/src/schema/req/api/dashboard/store/products.ts", "../ts/src/schema/req/api/dashboard/admin/index.ts", "../ts/src/schema/req/api/dashboard/index.ts", "../ts/src/schema/req/api/index.ts", "../ts/src/schema/req/security/access.ts", "../ts/src/schema/req/security/validate/user.ts", "../ts/src/schema/req/security/validate/store.ts", "../ts/src/schema/req/security/validate/access.ts", "../ts/src/schema/req/security/validate/index.ts", "../ts/src/schema/req/security/index.ts", "../ts/src/schema/req/index.ts", "../ts/src/schema/index.ts", "../ts/src/error/index.ts", "../ts/src/lib/file/converter.ts", "../ts/src/lib/file/uploader.ts", "../ts/src/lib/file/index.ts", "../ts/src/lib/mail.ts", "../ts/src/lib/index.ts", "../ts/src/model/db.ts", "../ts/src/model/fn.ts", "../ts/src/model/query/user.ts", "../ts/src/model/query/category.ts", "../ts/src/model/query/index.ts", "../ts/src/model/index.ts", "../ts/src/util/bcrypt.ts", "../ts/src/util/csrf.ts", "../ts/src/util/jwt.ts", "../ts/src/util/fn.ts", "../ts/src/util/index.ts", "../ts/src/config/upload.ts", "../ts/src/config/tmp.ts", "../ts/src/config/app.ts", "../ts/src/config/swagger.ts", "../ts/src/config/options.ts", "../ts/src/config/index.ts", "../ts/src/router/index.ts", "../ts/src/router/api/index.ts", "../ts/src/router/api/auth.ts", "../ts/src/middleware/api/user.ts", "../ts/src/middleware/api/store.ts", "../ts/src/middleware/api/admin.ts", "../ts/src/middleware/api/index.ts", "../ts/src/middleware/security/index.ts", "../ts/src/middleware/fn.ts", "../ts/src/middleware/index.ts", "../ts/src/controller/api/auth.ts", "../ts/src/passport/fn.ts", "../ts/src/passport/index.ts", "../ts/src/passport/local.ts", "../ts/src/passport/bearer.ts", "../ts/src/controller/api/user/index.ts", "../ts/src/controller/api/user/orders.ts", "../ts/src/service/store.ts", "../ts/src/service/product.ts", "../ts/src/service/category.ts", "../ts/src/service/order/index.ts", "../ts/src/service/order/user.ts", "../ts/src/service/admin/stats.ts", "../ts/src/service/admin/index.ts", "../ts/src/service/index.ts", "../ts/src/controller/api/stores.ts", "../ts/src/controller/api/dashboard/store/index.ts", "../ts/src/controller/api/dashboard/store/categories.ts", "../ts/src/controller/api/dashboard/store/products.ts", "../ts/src/controller/api/dashboard/admin/stats.ts", "../ts/src/controller/api/dashboard/admin/index.ts", "../ts/src/controller/api/dashboard/index.ts", "../ts/src/controller/api/index.ts", "../ts/src/controller/security/access.ts", "../ts/src/controller/security/validate/user.ts", "../ts/src/controller/security/validate/store.ts", "../ts/src/controller/security/validate/access.ts", "../ts/src/controller/security/validate/index.ts", "../ts/src/controller/security/index.ts", "../ts/src/controller/index.ts", "../ts/src/router/api/user/index.ts", "../ts/src/router/api/user/orders.ts", "../ts/src/router/api/stores.ts", "../ts/src/router/api/dashboard/index.ts", "../ts/src/router/api/dashboard/store/index.ts", "../ts/src/router/api/dashboard/store/stats.ts", "../ts/src/router/api/dashboard/store/categories.ts", "../ts/src/router/api/dashboard/store/products.ts", "../ts/src/router/api/dashboard/admin/index.ts", "../ts/src/router/api/dashboard/admin/stats.ts", "../ts/src/router/security/index.ts", "../ts/src/router/security/access.ts", "../ts/src/router/security/validate/index.ts", "../ts/src/router/security/validate/user.ts", "../ts/src/router/security/validate/store.ts", "../ts/src/router/security/validate/access.ts"],
  "sourcesContent": ["import type { NextFunction, Request, Response } from \"express\";\nimport type { RateLimitRequestHandler } from \"express-rate-limit\";\nimport type { TResponse } from \"./src/types/index.js\";\nimport express from \"express\";\nimport compression from \"compression\";\nimport hpp from \"hpp\";\nimport session from \"express-session\";\nimport morgan from \"morgan\";\nimport helmet from \"helmet\";\nimport timeout from \"connect-timeout\";\nimport methodOverride from \"method-override\";\n// import { simpleCsrf } from \"express-simple-csrf\";\nimport cookieParser from \"cookie-parser\";\nimport cors from \"cors\";\nimport responseTime from \"response-time\";\nimport requestIp from \"request-ip\";\nimport { StatusCodes } from \"http-status-codes\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport cookieEncrypt from \"cookie-encrypter\";\nimport path from \"path\";\nimport { ENV, KEYS, VALUES } from \"./src/constant/index.js\";\nimport { util } from \"./src/util/index.js\";\nimport { schema } from \"./src/schema/index.js\";\nimport { model } from \"./src/model/index.js\";\nimport { config } from \"./src/config/index.js\";\nimport { BaseError } from \"./src/error/index.js\";\nimport { router } from \"./src/router/index.js\";\nimport { passport } from \"./src/passport/index.js\";\n\n/**\n * Security:\n *  - XSS\n *  - DDOS\n *  - SQL injection\n *  - CSRF\n *  - HPP\n *  - Error Handling\n *  - Linting\n *  - Run Time Type Safety\n *  - Cookie\n *  - Session\n *\n * Performance:\n *\n *\n */\nconst app = express();\napp.set(\"env\", ENV.NODE.ENV);\napp.disable(\"x-powered-by\");\n// app.disable(\"trust proxy\");\napp.disable(\"view cache\");\napp.enable(\"trust proxy\");\napp.enable(\"json escape\");\napp.enable(\"etag\");\n\nconst { TIME, PACKAGE } = VALUES;\nconst { COOKIE, HTTP } = KEYS;\n\nif (!IS_PRODUCTION) {\n  const errorhandler = (await import(\"errorhandler\")).default;\n  app.use(errorhandler({ log: true }));\n}\n\nconst {\n  tmp,\n  app: { initLimiter, initSession },\n  swagger,\n  options: configOptions,\n} = config;\n\nawait tmp.initTmpDir();\nconst docs = swagger.init();\n\napp.use(timeout(TIME.MINUTE * 5)); // 5 minutes\napp.use(\n  responseTime(async (req: Request, res: Response, time: number) => {\n    const { RESPONSE_TIME } = HTTP.HEADERS;\n    res.setHeader(RESPONSE_TIME, time);\n    if (IS_PRODUCTION) return;\n\n    const { method, originalUrl: path } = req;\n    const { statusCode } = res;\n    const { ResponseTime } = model.db;\n    const { nowInSecond } = util.fn;\n\n    await ResponseTime.create(\n      {\n        date: nowInSecond(),\n        time,\n        method,\n        path,\n        statusCode,\n      },\n      { fields: [\"date\", \"time\", \"method\", \"path\", \"statusCode\"] },\n    );\n  }),\n);\n\napp.use(\n  cors({\n    credentials: true,\n    // exposedHeaders: [HTTP.HEADERS.ACCESS_TOKEN, \"Set-Cookie\"],\n    origin: (origin, callback) => callback(null, origin),\n  }),\n);\napp.use(initLimiter() as RateLimitRequestHandler);\napp.use(\n  compression({\n    level: 9,\n    filter(req, res) {\n      const { getHeader } = util.fn;\n      const { NO_COMPRESSION } = HTTP.HEADERS;\n      const noCompressionHeader = getHeader(req.headers, NO_COMPRESSION);\n\n      const { toBoolean } = schema.validators;\n      const noCompression = toBoolean.parse(noCompressionHeader);\n      return noCompression ? false : compression.filter(req, res);\n    },\n  }),\n);\napp.use(methodOverride(HTTP.HEADERS.METHOD_OVERRIDE));\napp.use(morgan(IS_PRODUCTION ? \"combined\" : \"dev\"));\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json({ limit: \"10mb\" }));\napp.use(cookieParser(ENV.COOKIE.PARSER));\napp.use(cookieEncrypt(ENV.COOKIE.SECRET));\napp.use(helmet());\napp.use(hpp());\napp.use(\n  session({\n    store: initSession(),\n    name: COOKIE.SESSION,\n    secret: ENV.SESSION.SECRET,\n    resave: false,\n    saveUninitialized: true,\n    proxy: true,\n    cookie: configOptions.cookieOptions,\n  }),\n);\n// app.use(\n//   simpleCsrf({\n//     ignoreMethods: [\"GET\", \"HEAD\", \"OPTIONS\", \"DELETE\", \"PATCH\"],\n//     cookieOptions: configOptions.cookieOptions,\n//     debug: !IS_PRODUCTION,\n//   }),\n// );\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(requestIp.mw());\n\napp.use(`/v${PACKAGE.VERSION}`, router);\napp.use(express.static(path.join(__root, KEYS.GLOBAL.PUBLIC), { etag: true }));\napp.use(\"/docs\", docs.serve, docs.ui);\napp.all(\"*\", async (_req, res: Response<TResponse[\"Body\"][\"Fail\"]>) =>\n  res.status(StatusCodes.NOT_FOUND).json({ success: false }),\n);\napp.use(async (error: unknown, _req: Request, res: Response<TResponse[\"Body\"][\"Fail\"]>, _next: NextFunction) => {\n  await BaseError.handleError(error);\n  res.status(StatusCodes.INTERNAL_SERVER_ERROR).json({\n    success: false,\n    message: \"Server error\",\n  });\n});\n\nprocess.on(\"unhandledRejection\", (error) => {\n  throw error;\n});\n\nprocess.on(\"uncaughtException\", async (error) => {\n  await Promise.all([BaseError.handleError(error), sequelize.close()]);\n  process.exit(1);\n});\n\nexport default app;\n", "import { randomBytes, createCipheriv, createDecipheriv } from \"node:crypto\";\nimport { schema } from \"../schema/index.js\";\nimport { APIError } from \"../error/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\n\nconst { isUUID } = schema.validators;\nconst KEY_LENGTH = 32;\nconst IV_LENGTH = 16;\nconst ALGORITHM = \"aes-256-cbc\";\n\n//? Create Access Token for some parts and verify the token\nexport const access = {\n  token(id: string) {\n    if (!isUUID.parse(id))\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Invalid id type (uuid) to create Access Token\");\n\n    const encryptData = `${id}`;\n    const key = randomBytes(KEY_LENGTH);\n    const iv = randomBytes(IV_LENGTH);\n\n    const cipher = createCipheriv(ALGORITHM, key, iv);\n    const token = cipher.update(encryptData, \"utf8\", \"base64\") + cipher.final(\"base64\");\n\n    const stringIv = iv.toString(\"hex\");\n    const stringKey = key.toString(\"hex\");\n\n    return {\n      token,\n      iv: stringIv.substring(3),\n      key: stringKey.substring(3),\n      code: stringKey.substring(0, 3) + stringIv.substring(0, 3),\n    };\n  },\n  verify(token: string, key: string, iv: string, code: string) {\n    const encrypted = Buffer.from(token, \"base64\");\n\n    const codeKey = code.substring(0, 3);\n    const codeIv = code.substring(3);\n\n    const bufferKey = Buffer.from(codeKey + key, \"hex\");\n    const bufferIv = Buffer.from(codeIv + iv, \"hex\");\n\n    if (bufferIv.length !== IV_LENGTH || bufferKey.length !== KEY_LENGTH) return { valid: false, id: \"\" };\n\n    const decipher = createDecipheriv(ALGORITHM, bufferKey, bufferIv);\n    const decrypted = Buffer.concat([decipher.update(encrypted), decipher.final()]);\n\n    const id = decrypted.toString();\n    if (id === undefined) return { valid: false, id: \"\" };\n\n    return isUUID.parse(id) ? { valid: true, id } : { valid: false, id: \"\" };\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { ENUM, KEYS } from \"../constant/index.js\";\n\n// /(XS|S|M|L|XL)|(^[2-9](XL|XS))/i\n\nconst IdInt = z.object({ id: z.number() });\nconst IdUUID = z.object({ id: z.string().uuid() }).strict();\nconst UserId = z.object({ userId: z.string().uuid() }).strict();\nconst NullUserId = z.object({ userId: z.string().uuid().nullable() }).strict();\nconst StoreId = z.object({ storeId: z.string().uuid() }).strict();\nconst CategoryId = z.object({ categoryId: z.string().uuid() }).strict();\nconst ProductId = z.object({ productId: z.string().uuid() }).strict();\nconst TagId = z.object({ tagId: z.string().uuid() }).strict();\n\nconst Ip = z.object({ ip: z.string().nullable() }).strict();\n\nexport const User = z\n  .object({\n    username: z.string(),\n    email: z.string(),\n    emailVerified: z.date().nullable(),\n    password: z.string(),\n    image: z.string(),\n  })\n  .merge(IdUUID)\n  .strict();\n\nexport const UserSetting = z\n  .object({\n    theme: z.enum(ENUM.THEMES),\n    locale: z.enum(ENUM.LOCALE),\n    forceTheme: z.boolean(),\n    disableAnimations: z.boolean(),\n  })\n  .merge(UserId)\n  .strict();\n\nexport const Store = z\n  .object({\n    name: z.string(),\n    image: z.string(),\n  })\n  .merge(IdUUID)\n  .merge(UserId)\n  .strict();\n\nexport const StoreSetting = z\n  .object({\n    // theme: z.enum(ENUM.THEMES),\n  })\n  .merge(StoreId)\n  .strict();\n\nexport const StoreLink = z\n  .object({\n    platform: z.enum(ENUM.PLATFORMS),\n    link: z.string().url(),\n  })\n  .merge(IdUUID)\n  .merge(StoreId)\n  .strict();\n\nexport const StoreViewer = z.object({}).merge(IdInt).merge(StoreId).merge(NullUserId).merge(Ip).strict();\n\nexport const Category = z\n  .object({\n    name: z.string(),\n    nameAr: z.string(),\n    image: z.string(),\n  })\n  .merge(IdUUID)\n  .merge(StoreId)\n  .strict();\n\nexport const CategoryViewer = z.object({}).merge(IdInt).merge(CategoryId).merge(NullUserId).merge(Ip).strict();\n\nexport const Product = z\n  .object({\n    title: z.string(),\n    titleAr: z.string(),\n    description: z.string().nullable(),\n    descriptionAr: z.string().nullable(),\n    quality: z.enum(ENUM.QUALITY),\n    stock: z.number(),\n    model: z.string().nullable(),\n    price: z.number(),\n    discount: z.number(),\n  })\n  .merge(IdUUID)\n  .merge(CategoryId)\n  .strict();\n\nexport const ProductInfo = z\n  .object({\n    info: z.string(),\n    infoAr: z.string(),\n  })\n  .merge(IdInt)\n  .merge(ProductId)\n  .strict();\n\nexport const ProductImage = z\n  .object({\n    image: z.string(),\n  })\n  .merge(IdInt)\n  .merge(ProductId)\n  .strict();\n\nexport const ProductRating = z\n  .object({\n    rate: z.enum(ENUM.RATING_STARS),\n    comment: z.string(),\n  })\n  .merge(UserId)\n  .merge(ProductId)\n  .strict();\n\nexport const ProductSize = z\n  .object({\n    size: z.string(),\n  })\n  .merge(IdInt)\n  .merge(ProductId)\n  .strict();\n\nexport const ProductColor = z\n  .object({\n    color: z.string(),\n  })\n  .merge(IdInt)\n  .merge(ProductId)\n  .strict();\n\nexport const ProductViewer = z.object({}).merge(IdInt).merge(ProductId).merge(NullUserId).merge(Ip).strict();\n\nexport const Tag = z\n  .object({\n    tag: z.string(),\n  })\n  .merge(IdUUID)\n  .merge(StoreId)\n  .strict();\n\nexport const ProductTag = z.object({}).merge(ProductId).merge(TagId).strict();\n\nexport const Order = z\n  .object({\n    quantity: z.number(),\n    totalPrice: z.number(),\n    status: z.enum(ENUM.ORDER_STATUS),\n    processedAt: z.date().nullable(),\n    doneAt: z.date().nullable(),\n    canceledAt: z.date().nullable(),\n  })\n  .merge(IdInt)\n  .merge(UserId)\n  .merge(ProductId)\n  .strict();\n\nexport const ResponseTime = z\n  .object({\n    date: z.number(),\n    time: z.number(),\n    method: z.string(),\n    path: z.string(),\n    statusCode: z.number(),\n  })\n  .merge(IdInt);\n\nexport const ServerError = z\n  .object({\n    message: z.string(),\n    stack: z.string().nullable(),\n    statusCode: z.number(),\n    isOperational: z.boolean(),\n    handler: z.enum(KEYS.ERROR.HANDLERS),\n  })\n  .merge(IdInt);\n", "import { z } from \"zod\";\nimport { KEYS, VALUES } from \"../constant/index.js\";\n\nconst {\n  REQUEST: { PARAMS },\n} = KEYS;\nconst { MIN } = VALUES.LENGTH;\n\nexport const StoreId = z.object({\n  [PARAMS.ID.STORE]: z.string().trim().min(MIN.REQUIRED).uuid(),\n});\n\nexport const CategoryId = z.object({\n  [PARAMS.ID.CATEGORY]: z.string().trim().min(MIN.REQUIRED).uuid(),\n});\n\nexport const ProductId = z.object({\n  [PARAMS.ID.PRODUCT]: z.string().trim().min(MIN.REQUIRED).uuid(),\n});\n\nexport const OrderId = z.object({\n  [PARAMS.ID.ORDER]: z.coerce.number().min(0),\n});\n", "import { z } from \"zod\";\n\nexport const Csrf = z\n  .object({\n    secret: z.string().trim().min(1),\n  })\n  .strict()\n  .optional();\n\nexport const Passport = z\n  .object({\n    user: z.string().trim().min(1).uuid(),\n  })\n  .strict()\n  .optional();\n\nexport const Access = z\n  .object({\n    key: z.string().trim().min(1),\n    iv: z.string().trim().min(1),\n  })\n  .strict()\n  .optional();\n\nexport const Session = z.object({ csrf: Csrf, passport: Passport, access: Access }).strict();\n", "import { z } from \"zod\";\nimport { VALUES } from \"../constant/index.js\";\n\nconst { MIN } = VALUES.LENGTH;\n\nexport default {\n  isUUID: z.string().trim().min(MIN.REQUIRED).uuid(),\n  isNullish: z.unknown().nullish(),\n\n  toBoolean: z.coerce.boolean(),\n  toString: z.coerce.string(),\n  toBigint: z.coerce.bigint(),\n  toNumber: z.coerce.number(),\n  toDate: z.coerce.date(),\n} as const;\n", "import { z } from \"zod\";\nimport { ENUM, VALUES } from \"../../../constant/index.js\";\n\nconst { MAX, MIN, PASSWORD } = VALUES.LENGTH;\n\nexport default {\n  SignUp: {\n    Body: z.object({\n      username: z.string().trim().min(MIN.REQUIRED).max(MAX.USER.USERNAME),\n      email: z.string().trim().min(MIN.REQUIRED).email().max(MAX.USER.EMAIL),\n      password: z.string().trim().min(PASSWORD),\n      theme: z.enum(ENUM.THEMES),\n      locale: z.enum(ENUM.LOCALE),\n    }),\n  },\n  VerifyEmail: {\n    Query: z.object({\n      token: z.string().trim().min(MIN.REQUIRED).uuid(),\n    }),\n  },\n  ForgotPassword: {\n    Body: z.object({\n      password: z.string().trim().min(PASSWORD),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../constant/index.js\";\nimport { StoreId } from \"../../id.js\";\n\nconst { MIN, LIMIT } = VALUES.LENGTH;\n\nexport default {\n  Search: {\n    Query: z.object({\n      s: z.string().trim().min(MIN.REQUIRED),\n      limit: z.coerce.number().min(MIN.REQUIRED).default(LIMIT),\n    }),\n  },\n  Stores: {\n    Query: z.object({\n      lastStoreId: z.string().trim().min(MIN.REQUIRED).uuid().optional(),\n      limit: z.coerce.number().min(MIN.REQUIRED).default(LIMIT),\n    }),\n  },\n  // Categories: {\n  //   Query: StoreId.optional().default({ storeId: \"\" }),\n  // },\n  // Products: {\n  //   Query: z.object({}).merge(StoreId).merge(CategoryId).optional().default({ storeId: \"\", categoryId: \"\" }),\n  // },\n  Home: {\n    Params: StoreId,\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { ENUM, VALUES } from \"../../../../constant/index.js\";\nimport orders from \"./orders.js\";\n\nconst { MIN, MAX } = VALUES.LENGTH;\n\nexport default {\n  Setting: {\n    Body: z.object({\n      theme: z.enum(ENUM.THEMES),\n      locale: z.enum(ENUM.LOCALE),\n      forceTheme: z.coerce.boolean(),\n      disableAnimations: z.coerce.boolean(),\n    }),\n  },\n  BecomeSeller: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.STORE.NAME),\n      // theme: z.enum(ENUM.THEMES),\n    }),\n  },\n  Update: {\n    Body: z.object({\n      username: z.string().trim().min(MIN.REQUIRED).max(MAX.USER.USERNAME),\n    }),\n  },\n  orders,\n} as const;\n", "import { z } from \"zod\";\nimport { ProductId } from \"../../../id.js\";\n\nexport default {\n  Create: {\n    Body: z.object({\n      orders: z.array(\n        z\n          .object({\n            quantity: z.coerce.number().min(0),\n            totalPrice: z.coerce.number().min(0),\n          })\n          .merge(ProductId),\n      ),\n    }),\n  },\n  Update: {\n    Query: z.object({\n      quantity: z.coerce.number().min(1),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport categories from \"./categories.js\";\nimport products from \"./products.js\";\nimport { VALUES } from \"../../../../../constant/index.js\";\n\nconst { MIN, MAX } = VALUES.LENGTH;\n\nexport default {\n  Update: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.STORE.NAME),\n    }),\n  },\n  categories,\n  products,\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../../../constant/index.js\";\n\nconst { MIN, MAX, LIMIT } = VALUES.LENGTH;\n\nexport default {\n  All: {\n    Query: z.object({\n      page: z.coerce.number().min(1),\n      limit: z.coerce.number().min(1).default(LIMIT),\n    }),\n  },\n  Create: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n      nameAr: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n    }),\n  },\n  Update: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n      nameAr: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { ENUM, VALUES } from \"../../../../../constant/index.js\";\n\nconst { QUALITY } = ENUM;\nconst { MIN, MAX } = VALUES.LENGTH;\n\nexport default {\n  Create: {\n    Body: z.object({\n      title: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n      titleAr: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n      description: z.string().trim().max(MAX.PRODUCT.DESCRIPTION),\n      descriptionAr: z.string().trim().max(MAX.PRODUCT.DESCRIPTION),\n      quality: z.enum(QUALITY),\n      stock: z.coerce.number().min(MIN.REQUIRED),\n      price: z.coerce.number().min(MIN.REQUIRED),\n      discount: z.coerce.number().min(0).max(100),\n      categoryId: z.string().trim().min(MIN.REQUIRED).uuid(),\n      infos: z.string().trim(),\n      sizes: z.string().trim(),\n      tags: z.string().trim(),\n      colors: z.string().trim(),\n    }),\n  },\n  Update: {\n    Body: z.object({\n      title: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n      titleAr: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n      description: z.string().trim().max(MAX.PRODUCT.DESCRIPTION),\n      descriptionAr: z.string().trim().max(MAX.PRODUCT.DESCRIPTION),\n      quality: z.enum(QUALITY),\n      stock: z.coerce.number().min(0),\n      price: z.coerce.number().min(MIN.REQUIRED),\n      discount: z.coerce.number().min(0).max(100),\n      categoryId: z.string().trim().min(MIN.REQUIRED).uuid(),\n      deletedImages: z.string().trim(),\n      infos: z.string().trim(),\n      sizes: z.string().trim(),\n      tags: z.string().trim(),\n      colors: z.string().trim(),\n    }),\n  },\n} as const;\n", "export default {} as const;\n", "import store from \"./store/index.js\";\nimport admin from \"./admin/index.js\";\n\nexport default {\n  store,\n  admin,\n} as const;\n", "import auth from \"./auth.js\";\nimport store from \"./store.js\";\nimport user from \"./user/index.js\";\nimport dashboard from \"./dashboard/index.js\";\n\nexport default {\n  auth,\n  user,\n  store,\n  dashboard,\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../constant/index.js\";\n\nconst { PASSWORD, MIN } = VALUES.LENGTH;\n\nexport default {\n  Email: {\n    Middleware: {\n      Body: z.object({\n        code: z.string().length(6),\n        password: z.string().trim().min(PASSWORD),\n        confirmPassword: z.string().trim().min(PASSWORD),\n      }),\n    },\n    Body: z.object({\n      email: z.string().trim().min(MIN.REQUIRED).email(),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../../constant/index.js\";\n\nconst { MIN } = VALUES.LENGTH;\n\nexport default {\n  Email: {\n    Body: z.object({\n      email: z.string().trim().min(MIN.REQUIRED).email(),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../../constant/index.js\";\n\nconst { MIN, MAX } = VALUES.LENGTH;\n\nexport default {\n  Name: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.STORE.NAME),\n    }),\n  },\n  Category: {\n    Body: z.object({\n      name: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n      nameAr: z.string().trim().min(MIN.REQUIRED).max(MAX.CATEGORY.NAME),\n    }),\n  },\n  Product: {\n    Body: z.object({\n      title: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n      titleAr: z.string().trim().min(MIN.REQUIRED).max(MAX.PRODUCT.TITLE),\n    }),\n  },\n} as const;\n", "import { z } from \"zod\";\nimport { VALUES } from \"../../../../constant/index.js\";\n\nconst { MIN } = VALUES.LENGTH;\n\nexport default {\n  Token: {\n    Body: z.object({\n      code: z.string().trim().min(MIN.REQUIRED),\n    }),\n  },\n} as const;\n", "import user from \"./user.js\";\nimport store from \"./store.js\";\nimport access from \"./access.js\";\n\nexport default { access, user, store } as const;\n", "import access from \"./access.js\";\nimport validate from \"./validate/index.js\";\n\nexport default { access, validate } as const;\n", "import api from \"./api/index.js\";\nimport security from \"./security/index.js\";\n\nexport default {\n  api,\n  security,\n} as const;\n", "import * as db from \"./db.js\";\nimport * as id from \"./id.js\";\nimport * as session from \"./session.js\";\nimport validators from \"./validators.js\";\nimport req from \"./req/index.js\";\n\nexport const schema = { db, id, session, req, validators } as const;\n", "import { ENV, type KEYS } from \"../constant/index.js\";\nimport { getReasonPhrase, StatusCodes, ReasonPhrases } from \"http-status-codes\";\nimport { lib } from \"../lib/index.js\";\nimport { model } from \"../model/index.js\";\nimport { schema } from \"../schema/index.js\";\n\nconst { toString } = schema.validators;\n\nexport class BaseError extends Error {\n  public readonly isOperational: boolean;\n  public readonly handler: HandlerTypes;\n  public readonly statusText: ReasonPhrases;\n  public readonly statusCode: StatusCodes;\n  public readonly rollback: Rollback;\n\n  constructor(\n    statusCode: StatusCodes,\n    message: string,\n    handler: HandlerTypes,\n    isOperational: boolean,\n    rollback: Rollback,\n  ) {\n    super(message);\n    this.statusCode = statusCode;\n    this.statusText = getReasonPhrase(this.statusCode) as ReasonPhrases;\n    this.handler = handler;\n    this.isOperational = isOperational;\n    this.rollback = rollback;\n    Object.setPrototypeOf(this, new.target.prototype);\n    Error.captureStackTrace(this);\n  }\n\n  public static async handleError(error: unknown) {\n    if (!IS_PRODUCTION) {\n      console.error(error);\n      return;\n    }\n\n    type NewErrorType = {\n      message: string;\n      stack: string;\n      statusCode: StatusCodes;\n      isOperational: boolean;\n      handler: HandlerTypes;\n      rollback: Rollback;\n    };\n\n    const err = error instanceof Error ? error : new Error(toString.parse(error));\n\n    const newError: NewErrorType = {\n      message: err.message,\n      stack: (err.stack ?? \"\").replaceAll(\"\\n\", \"<br/>\"),\n      statusCode: StatusCodes.INTERNAL_SERVER_ERROR,\n      isOperational: false,\n      handler: \"server\",\n      rollback: null,\n    };\n    if (err instanceof BaseError) {\n      newError.statusCode = err.statusCode;\n      newError.handler = err.handler;\n      newError.isOperational = err.isOperational;\n      newError.rollback = err.rollback;\n    }\n\n    try {\n      const {\n        Mail,\n        file: { FileUploader },\n      } = lib;\n      const { ServerError } = model.db;\n\n      const files = newError.rollback?.files ?? [];\n\n      await Promise.all([\n        new Mail(\n          ENV.MAIL.USER,\n          `New error - ${newError.isOperational ? \"Catch\" : \"Urgent\"} - Status: ${newError.statusCode}`,\n          Mail.errorTemplate(newError),\n        ).send(),\n        FileUploader.remove(...files),\n        ServerError.create(newError, {\n          fields: [\"message\", \"stack\", \"statusCode\", \"isOperational\", \"handler\"],\n        }),\n      ]);\n    } catch (error) {\n      if (!IS_PRODUCTION) console.error(error);\n      process.exit(1);\n    }\n  }\n\n  public static checkOperational(error: Error): boolean {\n    return error instanceof BaseError ? error.isOperational : false;\n  }\n}\n\nexport class APIError {\n  static controller(statusCode: StatusCodes, message: string = \"\", rollback: Rollback = null) {\n    return new BaseError(statusCode, message, \"controller\", true, rollback);\n  }\n\n  static middleware(statusCode: StatusCodes, message: string = \"\", rollback: Rollback = null) {\n    return new BaseError(statusCode, message, \"middleware\", true, rollback);\n  }\n\n  static socket(statusCode: StatusCodes, message: string = \"\", rollback: Rollback = null) {\n    return new BaseError(statusCode, message, \"socket\", true, rollback);\n  }\n\n  static passport(statusCode: StatusCodes, message: string = \"\", rollback: Rollback = null) {\n    return new BaseError(statusCode, message, \"passport\", true, rollback);\n  }\n\n  static server(statusCode: StatusCodes, message: string = \"\", rollback: Rollback = null) {\n    return new BaseError(statusCode, message, \"server\", false, rollback);\n  }\n}\n\ntype HandlerTypes = (typeof KEYS.ERROR.HANDLERS)[number];\n\ntype Rollback = RollbackFields | null;\n\ntype RollbackFields = {\n  files: string[];\n};\n", "import type { ConvertedFile, SupportedFileTypes } from \"../../types/index.js\";\nimport { readFile, writeFile } from \"fs/promises\";\nimport path from \"node:path\";\nimport ffmpeg, { type FfprobeData } from \"fluent-ffmpeg\";\nimport sharp from \"sharp\";\nimport fileType, { type FileExtension } from \"file-type\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { APIError } from \"../../error/index.js\";\nimport { schema } from \"../../schema/index.js\";\nimport { EXTENSIONS } from \"../../constant/enum.js\";\n\nconst { toBoolean } = schema.validators;\n\nclass FileTmp {\n  constructor() {}\n\n  protected randomFileName() {\n    return Math.round(Date.now() * Math.random());\n  }\n\n  protected async bufferToFile(file: Buffer, ext: FileExtension) {\n    const randomName = this.randomFileName();\n    const filePath = path.join(tmp.path, `${randomName}.${ext}`);\n    await writeFile(filePath, file);\n    return filePath;\n  }\n\n  protected async fileToBuffer(path: string) {\n    return readFile(path);\n  }\n}\n\nexport default class FileConverter extends FileTmp {\n  private readonly files: Buffer[] = [];\n  private isFfmpegInit = false;\n  private cleanTmp = false;\n\n  constructor(...files: Buffer[]) {\n    super();\n    this.files = files;\n  }\n\n  private async format(file: Buffer) {\n    return (await fileType.fromBuffer(file))?.ext ?? \"\";\n  }\n\n  private async ffprobeMetadata(path: string) {\n    return new Promise<FfprobeData>((resolve, reject) => {\n      ffmpeg.ffprobe(path, (err, metadata) => {\n        if (toBoolean.parse(err)) return reject(err);\n        return resolve(metadata);\n      });\n    });\n  }\n\n  private async toWebp(image: Buffer) {\n    return (\n      sharp(image)\n        .webp({ quality: 100 })\n        // .resize({ width: 1280, height: 720, fit: \"cover\" })\n        .toBuffer()\n    );\n  }\n\n  private async initFfmpeg() {\n    if (this.isFfmpegInit) return;\n\n    const [{ path: ffmpegPath }, { path: ffprobePath }] = await Promise.all([\n      import(\"@ffmpeg-installer/ffmpeg\"),\n      import(\"@ffprobe-installer/ffprobe\"),\n    ]);\n    ffmpeg.setFfmpegPath(ffmpegPath);\n    ffmpeg.setFfprobePath(ffprobePath);\n  }\n\n  private async toMp4(video: Buffer, ext: FileExtension) {\n    this.cleanTmp = true;\n    const input = await this.bufferToFile(video, ext);\n    const output = path.join(tmp.path, `${this.randomFileName()}.mp4`);\n\n    return new Promise<Buffer>((resolve, reject) => {\n      ffmpeg(input)\n        .fps(30)\n        .videoCodec(\"libx264\")\n        .audioCodec(\"aac\")\n        .audioQuality(0) // Set audio quality to 0 for default compression\n        // .addOption(\"-preset\", \"slow\") // Use the 'slow' preset for better compression\n        // .addOption(\"-crf\", \"23\") // Constant Rate Factor (0-51, where lower is better quality. 23 is default.)\n        .format(\"mp4\")\n        .output(output)\n        .on(\"end\", () => {\n          this.fileToBuffer(output).then(resolve).catch(reject);\n        })\n        .on(\"error\", reject)\n        .run();\n    });\n  }\n\n  private async toMp3(audio: Buffer, ext: FileExtension) {\n    this.cleanTmp = true;\n    const input = await this.bufferToFile(audio, ext);\n    const output = path.join(tmp.path, `${this.randomFileName()}.mp3`);\n\n    return new Promise<Buffer>((resolve, reject) => {\n      ffmpeg(input)\n        .audioCodec(\"libmp3lame\") // MP3 audio codec\n        .audioBitrate(\"128k\") // Audio bitrate: 128 kbps\n        .format(\"mp3\")\n        .output(output)\n        .on(\"end\", () => {\n          this.fileToBuffer(output).then(resolve).catch(reject);\n        })\n        .on(\"error\", reject)\n        .run();\n    });\n  }\n\n  private async toGlb(model: Buffer) {\n    return model;\n  }\n\n  private async fileType(buffer: Buffer): Promise<ConvertedFile | null> {\n    const ext = await this.format(buffer);\n    let type: SupportedFileTypes;\n\n    if (EXTENSIONS.IMAGE.includes(ext)) type = \"image\";\n    else if (ext === \"glb\") type = \"model\";\n    else if (EXTENSIONS.VIDEO.includes(ext)) {\n      type = \"video\";\n      const input = await this.bufferToFile(buffer, ext as FileExtension);\n      const metadata = await this.ffprobeMetadata(input);\n      const duration = Math.floor(metadata.format.duration ?? Infinity);\n      if (duration > 60) return null;\n    } else if (EXTENSIONS.AUDIO.includes(ext)) {\n      type = \"audio\";\n      const input = await this.bufferToFile(buffer, ext as FileExtension);\n      const metadata = await this.ffprobeMetadata(input);\n      const duration = Math.floor(metadata.format.duration ?? Infinity);\n      if (duration > 60) return null;\n    } else return null;\n\n    return {\n      buffer,\n      type,\n      originalExt: ext as FileExtension,\n    };\n  }\n\n  private async fileConvert(files: ConvertedFile[]) {\n    const converted = files.map(async (file) => {\n      switch (file.type) {\n        case \"image\":\n          file.buffer = await this.toWebp(file.buffer);\n          break;\n        case \"video\":\n          await this.initFfmpeg();\n          file.buffer = await this.toMp4(file.buffer, file.originalExt);\n          break;\n        case \"audio\":\n          await this.initFfmpeg();\n          file.buffer = await this.toMp3(file.buffer, file.originalExt);\n          break;\n        case \"model\":\n          file.buffer = await this.toGlb(file.buffer);\n          break;\n        default:\n          throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"File converter unhandled convert case\");\n      }\n      return file;\n    });\n    return Promise.all(converted);\n  }\n\n  async convert() {\n    const typePromises = this.files.map((file) => this.fileType(file));\n    const types = await Promise.all(typePromises);\n    const filterTypes = types.filter((file) => file !== null) as ConvertedFile[];\n    const converted = await this.fileConvert(filterTypes);\n    if (this.cleanTmp) await tmp.cleanup();\n\n    return converted;\n  }\n}\n", "import type { ConvertedFile, SupportFileExtensions } from \"../../types/index.js\";\nimport { rm, writeFile } from \"node:fs/promises\";\nimport { util } from \"../../util/index.js\";\nimport { randomUUID } from \"node:crypto\";\nimport path from \"node:path\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { APIError } from \"../../error/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\n\nconst { PUBLIC, UPLOAD } = KEYS.GLOBAL;\n\nexport default class FileUploader {\n  private readonly files: ConvertedFile[];\n\n  constructor(...files: ConvertedFile[]) {\n    this.files = files;\n  }\n\n  private generateUniqueFileName(ext: SupportFileExtensions) {\n    const { nowInSecond } = util.fn;\n    return nowInSecond() + \"_\" + randomUUID() + \".\" + ext;\n  }\n\n  private async write(file: ConvertedFile) {\n    let ext: SupportFileExtensions | null = null;\n\n    switch (file.type) {\n      case \"image\":\n        ext = \"webp\";\n        break;\n      case \"video\":\n        ext = \"mp4\";\n        break;\n      case \"audio\":\n        ext = \"mp3\";\n        break;\n      case \"model\":\n        ext = \"glb\";\n        break;\n      default:\n        throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"File uploader unhandled write case (ext)\");\n    }\n\n    const uri = path.join(UPLOAD, file.type, this.generateUniqueFileName(ext));\n    const fullPath = path.join(__root, PUBLIC, uri);\n    await writeFile(fullPath, file.buffer);\n    return \"/\" + uri;\n  }\n\n  async upload() {\n    return Promise.all(this.files.map((file) => this.write(file)));\n  }\n\n  static async remove(...uris: string[]) {\n    await Promise.all(\n      uris.map((uri) =>\n        rm(path.join(__root, PUBLIC, uri), {\n          force: true,\n        }),\n      ),\n    );\n  }\n}\n", "import FileConverter from \"./converter.js\";\nimport FileUploader from \"./uploader.js\";\n\nexport default {\n  FileConverter,\n  FileUploader,\n} as const;\n", "import { createTransport } from \"nodemailer\";\nimport { ENV } from \"../constant/index.js\";\n\nexport default class Mail {\n  private readonly to: string;\n  private readonly subject: string;\n  private readonly html: string;\n\n  private readonly options = {\n    transport: {\n      service: \"gmail\",\n      auth: {\n        user: ENV.MAIL.USER,\n        pass: ENV.MAIL.PASS,\n      },\n    },\n  };\n  private readonly transport: ReturnType<typeof createTransport>;\n\n  constructor(to: string, subject: string, html: string) {\n    this.transport = createTransport(this.options.transport);\n    this.to = to;\n    this.subject = subject;\n    this.html = html;\n  }\n\n  async send() {\n    await this.transport.sendMail({\n      to: this.to,\n      subject: this.subject,\n      html: this.html,\n    });\n    this.transport.close();\n  }\n\n  static errorTemplate(error: object) {\n    return `\n      <pre>\n        ${JSON.stringify(error, null, 4)}\n      </pre>\n    `;\n  }\n}\n", "import file from \"./file/index.js\";\nimport Mail from \"./mail.js\";\n\nexport const lib = {\n  file,\n  Mail,\n};\n", "import type { Tables } from \"../types/index.js\";\nimport { DataTypes } from \"sequelize\";\nimport { ENUM, KEYS, VALUES } from \"../constant/index.js\";\n\nconst { ID, TABLES, MODELS } = KEYS.DB;\nconst { MAX } = VALUES.LENGTH;\n\nexport const User = sequelize.define<Tables[\"User\"]>(\n  MODELS.USER.MODEL,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    username: {\n      type: DataTypes.STRING(MAX.USER.USERNAME),\n      allowNull: false,\n    },\n    email: {\n      type: DataTypes.STRING(MAX.USER.EMAIL),\n      allowNull: false,\n      unique: true,\n    },\n    emailVerified: {\n      type: DataTypes.DATE,\n      allowNull: true,\n    },\n    password: {\n      type: DataTypes.STRING(MAX.USER.PASSWORD),\n      allowNull: false,\n    },\n    image: {\n      type: DataTypes.STRING(MAX.IMAGE),\n      allowNull: false,\n      unique: true,\n    },\n  },\n  {\n    tableName: TABLES.USER.TABLE,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nUser.addHook(\"afterDestroy\", async (user) => {\n  await Promise.all([Store.destroy({ force: false, where: { userId: user.dataValues.id } })]);\n});\n\nexport const UserSetting = sequelize.define<Tables[\"UserSetting\"]>(\n  MODELS.USER.SETTING,\n  {\n    [ID.FOREIGN_KEY.USER]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    theme: {\n      type: DataTypes.ENUM(...ENUM.THEMES),\n      defaultValue: ENUM.THEMES[0],\n      allowNull: false,\n    },\n    locale: {\n      type: DataTypes.ENUM(...ENUM.LOCALE),\n      defaultValue: ENUM.LOCALE[0],\n      allowNull: false,\n    },\n    forceTheme: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false,\n      allowNull: false,\n    },\n    disableAnimations: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: TABLES.USER.SETTING,\n    timestamps: true,\n  },\n);\nUser.hasOne(UserSetting, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.USER.SETTING });\n\nexport const Store = sequelize.define<Tables[\"Store\"]>(\n  MODELS.STORE.MODEL,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    name: {\n      type: DataTypes.STRING(MAX.STORE.NAME),\n      unique: true,\n      allowNull: false,\n    },\n    image: {\n      type: DataTypes.STRING(MAX.IMAGE),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.USER]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      unique: true,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n  },\n  { tableName: TABLES.STORE.TABLE, timestamps: true, paranoid: true },\n);\nUser.hasOne(Store, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.STORE.MODEL });\nStore.addHook(\"afterDestroy\", async (store) => {\n  await Promise.all([\n    StoreLink.destroy({ force: false, where: { storeId: store.dataValues.id } }),\n    Category.destroy({ force: false, where: { storeId: store.dataValues.id } }),\n  ]);\n});\n\nexport const StoreSetting = sequelize.define<Tables[\"StoreSetting\"]>(\n  MODELS.STORE.SETTING,\n  {\n    [ID.FOREIGN_KEY.STORE]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      references: {\n        model: Store,\n        key: \"id\",\n      },\n    },\n    // theme: {\n    //   type: DataTypes.ENUM(...ENUM.THEMES),\n    //   defaultValue: ENUM.THEMES[0],\n    //   allowNull: false,\n    // },\n  },\n  {\n    tableName: TABLES.STORE.SETTING,\n    timestamps: true,\n  },\n);\nStore.hasOne(StoreSetting, { foreignKey: ID.FOREIGN_KEY.STORE, as: MODELS.STORE.SETTING });\n\nexport const StoreLink = sequelize.define<Tables[\"StoreLink\"]>(\n  MODELS.STORE.LINK,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    platform: {\n      type: DataTypes.ENUM(...ENUM.PLATFORMS),\n      allowNull: false,\n    },\n    link: {\n      type: DataTypes.STRING(MAX.STORE.LINK),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.STORE]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Store,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.STORE.LINK,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nStore.hasMany(StoreLink, { foreignKey: ID.FOREIGN_KEY.STORE, as: MODELS.STORE.LINK });\n\nexport const StoreViewer = sequelize.define<Tables[\"StoreViewer\"]>(\n  MODELS.STORE.VIEWER,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n      allowNull: true,\n      primaryKey: true,\n    },\n    ip: {\n      type: DataTypes.STRING(32),\n      allowNull: true,\n    },\n    [ID.FOREIGN_KEY.USER]: {\n      type: DataTypes.UUID,\n      allowNull: true,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.STORE]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Store,\n        key: \"id\",\n      },\n    },\n  },\n  { tableName: TABLES.STORE.VIEWER, createdAt: true, updatedAt: false },\n);\nStore.hasMany(StoreViewer, { foreignKey: ID.FOREIGN_KEY.STORE, as: MODELS.STORE.VIEWER });\nUser.hasMany(StoreViewer, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.STORE.SETTING });\n\nexport const Category = sequelize.define<Tables[\"Category\"]>(\n  MODELS.CATEGORY.MODEL,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    name: {\n      type: DataTypes.STRING(MAX.CATEGORY.NAME),\n      allowNull: false,\n    },\n    nameAr: {\n      type: DataTypes.STRING(MAX.CATEGORY.NAME),\n      allowNull: false,\n    },\n    image: {\n      type: DataTypes.STRING(MAX.IMAGE),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.STORE]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Store,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.CATEGORY.TABLE,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nStore.hasMany(Category, { foreignKey: ID.FOREIGN_KEY.STORE, as: MODELS.CATEGORY.MODEL });\nCategory.addHook(\"afterDestroy\", async (category) => {\n  await Promise.all([Product.destroy({ force: false, where: { categoryId: category.dataValues.id } })]);\n});\n\nexport const CategoryViewer = sequelize.define<Tables[\"CategoryViewer\"]>(\n  MODELS.CATEGORY.VIEWER,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n      allowNull: true,\n      primaryKey: true,\n    },\n    ip: {\n      type: DataTypes.STRING(32),\n      allowNull: true,\n    },\n    [ID.FOREIGN_KEY.USER]: {\n      type: DataTypes.UUID,\n      allowNull: true,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.CATEGORY]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Category,\n        key: \"id\",\n      },\n    },\n  },\n  { tableName: TABLES.CATEGORY.VIEWER, createdAt: true, updatedAt: false },\n);\nCategory.hasMany(CategoryViewer, { foreignKey: ID.FOREIGN_KEY.CATEGORY, as: MODELS.CATEGORY.VIEWER });\nUser.hasMany(CategoryViewer, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.CATEGORY.VIEWER });\n\nexport const Product = sequelize.define<Tables[\"Product\"]>(\n  MODELS.PRODUCT.MODEL,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    title: {\n      type: DataTypes.STRING(MAX.PRODUCT.TITLE),\n      allowNull: false,\n    },\n    titleAr: {\n      type: DataTypes.STRING(MAX.PRODUCT.TITLE),\n      allowNull: false,\n    },\n    description: {\n      type: DataTypes.STRING(MAX.PRODUCT.DESCRIPTION),\n      allowNull: true,\n    },\n    descriptionAr: {\n      type: DataTypes.STRING(MAX.PRODUCT.DESCRIPTION),\n      allowNull: true,\n    },\n    quality: {\n      type: DataTypes.ENUM(...ENUM.QUALITY),\n      allowNull: false,\n    },\n    stock: {\n      type: DataTypes.SMALLINT.UNSIGNED,\n      allowNull: false,\n    },\n    model: {\n      type: DataTypes.STRING(MAX.PRODUCT.MODEL),\n      allowNull: true,\n    },\n    price: {\n      type: DataTypes.DOUBLE.UNSIGNED,\n      allowNull: false,\n    },\n    discount: {\n      type: DataTypes.DOUBLE.UNSIGNED,\n      allowNull: false,\n      defaultValue: 0,\n    },\n    [ID.FOREIGN_KEY.CATEGORY]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Category,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.TABLE,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nProduct.belongsTo(Category, { foreignKey: ID.FOREIGN_KEY.CATEGORY, as: MODELS.CATEGORY.MODEL });\nCategory.hasMany(Product, { foreignKey: ID.FOREIGN_KEY.CATEGORY, as: MODELS.PRODUCT.MODEL });\nProduct.addHook(\"afterDestroy\", async (product) => {\n  await Promise.all([\n    ProductInfo.destroy({ force: false, where: { productId: product.dataValues.id } }),\n    ProductImage.destroy({ force: false, where: { productId: product.dataValues.id } }),\n    ProductColor.destroy({ force: false, where: { productId: product.dataValues.id } }),\n    ProductSize.destroy({ force: false, where: { productId: product.dataValues.id } }),\n    ProductRating.destroy({ force: false, where: { productId: product.dataValues.id } }),\n    ProductTag.destroy({ force: false, where: { productId: product.dataValues.id } }),\n  ]);\n});\n\nexport const ProductInfo = sequelize.define<Tables[\"ProductInfo\"]>(\n  MODELS.PRODUCT.INFO,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    info: {\n      type: DataTypes.STRING(MAX.PRODUCT.INFO),\n      allowNull: false,\n    },\n    infoAr: {\n      type: DataTypes.STRING(MAX.PRODUCT.INFO),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.INFO,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductInfo, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.INFO });\n\nexport const ProductImage = sequelize.define<Tables[\"ProductImage\"]>(\n  MODELS.PRODUCT.IMAGE,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    image: {\n      type: DataTypes.STRING(MAX.IMAGE),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.IMAGE,\n    createdAt: true,\n    updatedAt: false,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductImage, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.IMAGE });\n\nexport const ProductRating = sequelize.define<Tables[\"ProductRating\"]>(\n  MODELS.PRODUCT.RATING,\n  {\n    [ID.FOREIGN_KEY.USER]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n    rate: {\n      type: DataTypes.ENUM(...ENUM.RATING_STARS),\n      allowNull: false,\n    },\n    comment: {\n      type: DataTypes.STRING(MAX.PRODUCT.COMMENT),\n      allowNull: true,\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.RATING,\n    timestamps: true,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductRating, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.RATING });\nUser.hasMany(ProductRating, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.PRODUCT.RATING });\n\nexport const ProductSize = sequelize.define<Tables[\"ProductSize\"]>(\n  MODELS.PRODUCT.SIZE,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    size: {\n      type: DataTypes.STRING(MAX.PRODUCT.SIZE),\n      validate: {\n        is: /\\b((xs|s|m|l|xl)|([2-9](xs|xl)))\\b/i,\n      },\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.SIZE,\n    createdAt: true,\n    updatedAt: false,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductSize, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.SIZE });\n\nexport const ProductColor = sequelize.define<Tables[\"ProductColor\"]>(\n  MODELS.PRODUCT.COLOR,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    color: {\n      type: DataTypes.STRING(MAX.PRODUCT.COLOR),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.COLOR,\n    createdAt: true,\n    updatedAt: false,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductColor, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.COLOR });\n\nexport const ProductViewer = sequelize.define<Tables[\"ProductViewer\"]>(\n  MODELS.PRODUCT.VIEWER,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n      allowNull: false,\n      primaryKey: true,\n    },\n    ip: {\n      type: DataTypes.STRING(32),\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.USER]: {\n      type: DataTypes.UUID,\n      allowNull: true,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  { tableName: TABLES.PRODUCT.VIEWER, createdAt: true, updatedAt: false },\n);\nProduct.hasMany(ProductViewer, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.VIEWER });\nUser.hasMany(ProductViewer, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.VIEWER });\n\nexport const Tag = sequelize.define<Tables[\"Tag\"]>(\n  MODELS.TAG,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n    },\n    tag: {\n      type: DataTypes.STRING(MAX.TAG),\n      unique: true,\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.STORE]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Store,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.TAG,\n    createdAt: true,\n    updatedAt: false,\n  },\n);\nStore.hasMany(Tag, { foreignKey: ID.FOREIGN_KEY.STORE, as: MODELS.TAG });\nTag.addHook(\"afterDestroy\", async (tag) => {\n  await Promise.all([ProductTag.destroy({ force: false, where: { tagId: tag.dataValues.id } })]);\n});\n\nexport const ProductTag = sequelize.define<Tables[\"ProductTag\"]>(\n  MODELS.PRODUCT.TAG,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    [ID.FOREIGN_KEY.TAG]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Tag,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n  },\n  {\n    tableName: TABLES.PRODUCT.TAG,\n    createdAt: true,\n    updatedAt: false,\n    paranoid: true,\n  },\n);\nProduct.hasMany(ProductTag, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.PRODUCT.TAG });\nTag.hasMany(ProductTag, { foreignKey: ID.FOREIGN_KEY.TAG, as: MODELS.PRODUCT.TAG });\n\nexport const Order = sequelize.define<Tables[\"Order\"]>(\n  MODELS.ORDER,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      primaryKey: true,\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n    },\n    quantity: {\n      type: DataTypes.SMALLINT.UNSIGNED,\n      allowNull: false,\n    },\n    totalPrice: {\n      type: DataTypes.DOUBLE.UNSIGNED,\n      allowNull: false,\n    },\n    status: {\n      type: DataTypes.ENUM(...ENUM.ORDER_STATUS),\n      defaultValue: ENUM.ORDER_STATUS[0],\n      allowNull: false,\n    },\n    [ID.FOREIGN_KEY.USER]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: User,\n        key: \"id\",\n      },\n    },\n    [ID.FOREIGN_KEY.PRODUCT]: {\n      type: DataTypes.UUID,\n      allowNull: false,\n      references: {\n        model: Product,\n        key: \"id\",\n      },\n    },\n    processedAt: {\n      type: DataTypes.DATE,\n      allowNull: true,\n    },\n    doneAt: {\n      type: DataTypes.DATE,\n      allowNull: true,\n    },\n    canceledAt: {\n      type: DataTypes.DATE,\n      allowNull: true,\n    },\n  },\n  {\n    tableName: TABLES.ORDER,\n    timestamps: true,\n  },\n);\nProduct.hasMany(Order, { foreignKey: ID.FOREIGN_KEY.PRODUCT, as: MODELS.ORDER });\nUser.hasMany(Order, { foreignKey: ID.FOREIGN_KEY.USER, as: MODELS.ORDER });\n\nexport const ResponseTime = sequelize.define<Tables[\"ResponseTime\"]>(\n  MODELS.RESPONSE_TIME,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    date: {\n      // SELECT EXTRACT(epoch FROM CURRENT_TIMESTAMP);\n      type: DataTypes.INTEGER.UNSIGNED,\n      allowNull: false,\n    },\n    time: {\n      type: DataTypes.FLOAT.UNSIGNED,\n      allowNull: false,\n    },\n    method: {\n      type: DataTypes.STRING(10),\n      allowNull: false,\n    },\n    path: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    statusCode: {\n      type: DataTypes.SMALLINT.UNSIGNED,\n      allowNull: false,\n    },\n  },\n  { tableName: TABLES.RESPONSE_TIME, timestamps: false, paranoid: false },\n);\n\nexport const ServerError = sequelize.define<Tables[\"ServerError\"]>(\n  MODELS.SERVER_ERROR,\n  {\n    [ID.PRIMARY_KEY.ID]: {\n      type: DataTypes.BIGINT.UNSIGNED,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    message: {\n      type: DataTypes.STRING(255),\n      allowNull: false,\n    },\n    stack: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    statusCode: {\n      type: DataTypes.SMALLINT.UNSIGNED,\n      allowNull: false,\n    },\n    isOperational: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n    },\n    handler: {\n      type: DataTypes.ENUM(...KEYS.ERROR.HANDLERS),\n      allowNull: false,\n    },\n  },\n  { tableName: TABLES.SERVER_ERROR, timestamps: true },\n);\n", "import { QueryTypes } from \"sequelize\";\nimport { schema } from \"../schema/index.js\";\n\nconst { isUUID } = schema.validators;\n\nexport async function tableIndex(table: string, id: string) {\n  const parsedId = isUUID.parse(id);\n\n  const index = await sequelize.query<{ row_number: number }>(\n    `\n      SELECT row_number FROM (\n        SELECT ROW_NUMBER() OVER() AS row_number, id FROM \"${table}\"\n      )\n      WHERE id=$id\n      LIMIT 1\n    `,\n    {\n      type: QueryTypes.SELECT,\n      plain: true,\n      raw: true,\n      bind: {\n        id: parsedId,\n      },\n    },\n  );\n\n  return index?.row_number ?? 0;\n}\n", "import { QueryTypes } from \"sequelize\";\nimport { schema } from \"../../schema/index.js\";\nimport { ENUM, VALUES } from \"../../constant/index.js\";\n\nconst { LENGTH } = VALUES;\nconst { ORDER_STATUS } = ENUM;\nconst { isUUID } = schema.validators;\n\nexport async function order(orderId: string) {\n  const parsedId = isUUID.parse(orderId);\n\n  return sequelize.query(``, {\n    type: QueryTypes.SELECT,\n    raw: false,\n    bind: {\n      parsedId,\n    },\n  });\n}\n\ntype OrderFilter = (typeof ORDER_STATUS)[number];\n\nexport async function orders(userId: string, filter: OrderFilter | \"all\" = \"all\", offset = 0) {\n  const parsedId = isUUID.parse(userId);\n\n  return sequelize.query(\n    `\n    SELECT\n      \"Order\".\"quantity\" AS \"order.quantity\",\n      \"Order\".\"totalPrice\" AS \"order.price\",\n      \"Order\".\"status\" AS \"order.status\",\n      \"Product\".\"title\" AS \"product.title\",\n      \"Product\".\"titleAr\" AS \"product.titleAr\",\n      \"Product\".\"price\" AS \"product.price\",\n      \"Product\".\"discount\" AS \"product.discount\",\n      \"Product\".\"description\" AS \"product.description\",\n      \"Product\".\"descriptionAr\" AS \"product.descriptionAr\",\n      \"ProductImage\".\"image\" AS \"product.image\"\n    FROM \"Order\"\n    INNER JOIN \"Product\" ON \"Product\".\"id\" = \"Order\".\"productId\"\n    INNER JOIN \"ProductImage\" ON \"ProductImage\".\"productId\" = \"Product\".\"id\"\n    INNER JOIN \"User\" ON \"User\".\"id\" = \"Order\".\"userId\"\n    WHERE \"User\".\"id\" = $id ${filter !== \"all\" ? 'AND \"Order\".\"status\" = $filter' : \"\"}\n    LIMIT $limit OFFSET $offset\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      bind: {\n        id: parsedId,\n        filter: filter === \"all\" ? \"\" : filter,\n        limit: LENGTH.LIMIT,\n        offset,\n      },\n    },\n  );\n}\n", "import { QueryTypes } from \"sequelize\";\nimport { schema } from \"../../schema/index.js\";\n\nconst { isUUID } = schema.validators;\n\nexport async function withProductsCount(storeId: string, desc = true) {\n  const parsedId = isUUID.parse(storeId);\n\n  return sequelize.query<{\n    id: string;\n    name: string;\n    nameAr: string;\n    image: string;\n    count: number;\n  }>(\n    `\n    SELECT \"Category\".\"id\", \"name\", \"nameAr\", \"image\", COUNT(\"Product\".\"id\") AS \"count\"\n    FROM \"Category\"\n    INNER JOIN \"Product\" ON \"Product\".\"categoryId\" = \"Category\".\"id\"\n    WHERE \"Category\".\"sellerId\" = $storeId\n    GROUP BY \"Category\".\"id\"\n    ORDER BY \"count\" ${desc ? \"DESC\" : \"ASC\"}\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      bind: {\n        sellerId: parsedId,\n      },\n    },\n  );\n}\n", "import * as user from \"./user.js\";\nimport * as category from \"./category.js\";\n\nexport default { user, category } as const;\n", "import * as db from \"./db.js\";\nimport * as fn from \"./fn.js\";\nimport query from \"./query/index.js\";\n\nexport const model = { db, fn, query } as const;\n", "import { hashSync, genSaltSync, compareSync } from \"bcrypt\";\n\nexport const bcrypt = {\n  hash: (str: string) => hashSync(str, genSaltSync(12)),\n  compare: (str: string, hash: string) => compareSync(str, hash),\n} as const;\n", "import Token from \"csrf\";\n\nexport const csrf = {\n  generate() {\n    const token = new Token();\n    const secret = token.secretSync();\n\n    return {\n      token: token.create(secret),\n      secret,\n    };\n  },\n  verify: (secret: string, token: string) => new Token().verify(secret, token),\n} as const;\n", "import jsonwebtoken from \"jsonwebtoken\";\nimport { ENV, VALUES } from \"../constant/index.js\";\n\nexport const jwt = {\n  sign: (data: unknown, expiresIn = VALUES.TIME.MONTH) =>\n    jsonwebtoken.sign({ data: JSON.stringify(data) }, ENV.JWT.SECRET, {\n      expiresIn,\n    }),\n  verify(token: string) {\n    let payload: unknown = null;\n\n    try {\n      payload = jsonwebtoken.verify(token, ENV.JWT.SECRET);\n\n      if (payload === null) throw new Error();\n      if (typeof payload !== \"object\") throw new Error();\n      if (!(\"data\" in payload)) throw new Error();\n      if (typeof payload.data !== \"string\") throw new Error();\n\n      payload = JSON.parse(payload.data);\n    } catch (_) {\n      payload = null;\n    }\n\n    return payload;\n  },\n} as const;\n", "import type { IncomingHttpHeaders } from \"node:http\";\nimport type { Request, Response, NextFunction, RequestHandler } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../types/index.js\";\nimport { MulterError } from \"multer\";\nimport { ZodError } from \"zod\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { VALUES } from \"../constant/index.js\";\nimport { BaseError } from \"../error/index.js\";\n\ntype HandleAsyncFn =\n  | ((req: Request, res: Response<any, any>, next: NextFunction, transaction: Transaction) => Promise<void>)\n  | RequestHandler;\n\nexport function handleAsync(fn: HandleAsyncFn) {\n  return async (req: Request, res: Response<TResponse[\"Body\"][\"Fail\"]>, next: NextFunction) => {\n    const transaction = await sequelize.transaction();\n    try {\n      await fn(req, res, next, transaction);\n      await transaction.commit();\n    } catch (error) {\n      await Promise.all([BaseError.handleError(error), transaction.rollback()]);\n\n      let status: StatusCodes = StatusCodes.BAD_REQUEST;\n      let message = \"\";\n\n      if (error instanceof BaseError) {\n        status = error.statusCode;\n        message = error.message;\n      } else if (error instanceof ZodError) {\n        message = error.flatten().formErrors.join(\";\");\n      } else if (error instanceof MulterError) {\n        status = StatusCodes.FORBIDDEN;\n        message = error.message;\n      } else {\n        return next(error);\n      }\n\n      res.status(status).json({ success: false, message });\n    }\n  };\n}\n\n/**\n * Get current Time in seconds\n * @param [add=0] - In milliseconds\n * */\nexport function nowInSecond(add: number = 0) {\n  return Math.floor((Date.now() + add) / VALUES.TIME.SECOND);\n}\n\nexport function getHeader(headers: IncomingHttpHeaders, key: string) {\n  return headers[key.toLowerCase()] ?? \"\";\n}\n", "import { access } from \"./access.js\";\nimport { bcrypt } from \"./bcrypt.js\";\nimport { csrf } from \"./csrf.js\";\nimport { jwt } from \"./jwt.js\";\nimport * as fn from \"./fn.js\";\n\nexport const util = {\n  access,\n  bcrypt,\n  csrf,\n  jwt,\n  fn,\n} as const;\n", "import multer from \"multer\";\n\nexport const upload = multer({ storage: multer.memoryStorage() });\n\nupload.none();\n", "import tmp from \"tmp-promise\";\n\nexport default {\n  async initTmpDir() {\n    global.tmp = await tmp.dir({ unsafeCleanup: true });\n  },\n} as const;\n", "import SessionStore from \"connect-mongo\";\nimport { rateLimit } from \"express-rate-limit\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport LimiterStore from \"rate-limit-mongo\";\nimport { ENV, KEYS, VALUES } from \"../constant/index.js\";\n\nconst { URI } = ENV;\nconst { COLLECTIONS } = KEYS.CACHE;\nconst { TIME } = VALUES;\n\nexport default {\n  initLimiter() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return rateLimit({\n      store: new LimiterStore({\n        uri: URI.MONGO,\n        collectionName: COLLECTIONS.RATE_LIMIT,\n        user: \"\",\n        password: \"\",\n        expireTimeMs: 15 * 60 * 1000,\n        errorHandler: console.error.bind(null, \"rate-limit-mongo\"),\n      }),\n      limit: 1000,\n      windowMs: TIME.MINUTE,\n    });\n  },\n  initSession() {\n    const store = SessionStore.create({\n      mongoUrl: URI.MONGO,\n      collectionName: COLLECTIONS.SESSION,\n    });\n\n    return store;\n  },\n} as const;\n", "import swaggerUi from \"swagger-ui-express\";\nimport swaggerJsdoc from \"swagger-jsdoc\";\nimport { VALUES } from \"../constant/index.js\";\nimport path from \"node:path\";\n\nconst { PACKAGE } = VALUES;\nconst APIs_PATH = path.join(__root, \"ts/**/*.ts\");\n\nconst options: swaggerJsdoc.Options = {\n  failOnErrors: true,\n  definition: {\n    openapi: \"3.1.0\",\n    info: {\n      title: \"LogRocket Express API with Swagger\",\n      version: PACKAGE.VERSION,\n      description: \"This is a simple CRUD API application made with Express and documented with Swagger\",\n      license: {\n        name: \"MIT\",\n        url: \"https://spdx.org/licenses/MIT.html\",\n      },\n      contact: {\n        name: \"LogRocket\",\n        url: \"https://logrocket.com\",\n        email: \"info@email.com\",\n      },\n    },\n    servers: [\n      {\n        url: `http://localhost:3000/v${PACKAGE.VERSION}`,\n      },\n    ],\n  },\n  apis: [APIs_PATH],\n};\n\nexport default {\n  init() {\n    const json = swaggerJsdoc(options);\n    const ui = swaggerUi.setup(json, { explorer: true });\n    return {\n      json,\n      serve: swaggerUi.serve,\n      ui,\n    };\n  },\n} as const;\n", "import type { CookieOptions } from \"express\";\n\nexport const cookieOptions = {\n  maxAge: 1000 * 60 * 15,\n  sameSite: \"none\",\n  httpOnly: IS_PRODUCTION,\n  secure: IS_PRODUCTION,\n  path: \"/\",\n} satisfies CookieOptions;\n", "import { upload } from \"./upload.js\";\nimport db from \"./db.js\";\nimport tmp from \"./tmp.js\";\nimport app from \"./app.js\";\nimport swagger from \"./swagger.js\";\nimport * as options from \"./options.js\";\n\nexport const config = { upload, db, tmp, app, swagger, options } as const;\n", "import { Router } from \"express\";\nimport { api } from \"./api/index.js\";\nimport { security } from \"./security/index.js\";\n\nexport const router = Router();\n\n/**\n * @openapi\n * /:\n *   get:\n *     description: Welcome to swagger-jsdoc!\n *     responses:\n *       200:\n *         description: Returns a mysterious string.\n */\n\nrouter.use(\"/api\", api);\nrouter.use(\"/security\", security);\n", "import { Router } from \"express\";\n\nimport { auth } from \"./auth.js\";\nimport { user } from \"./user/index.js\";\nimport { stores } from \"./stores.js\";\nimport { dashboard } from \"./dashboard/index.js\";\n\nimport { util } from \"../../util/index.js\";\nimport { middleware } from \"../../middleware/index.js\";\n\nconst { isAuthenticated } = middleware.fn;\nconst { handleAsync } = util.fn;\n\nexport const api = Router();\n\napi.use(\"/auth\", auth);\napi.use(\"/user\", handleAsync(isAuthenticated), user);\napi.use(\"/stores\", stores);\napi.use(\"/dashboard\", handleAsync(isAuthenticated), dashboard);\n", "import { Router } from \"express\";\nimport { util } from \"../../util/index.js\";\nimport { middleware } from \"../../middleware/index.js\";\nimport { controller } from \"../../controller/index.js\";\nimport { config } from \"../../config/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\n\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { UPLOAD } = KEYS;\nconst {\n  fn: { isAuthenticated, notAuthenticated },\n  security: { access },\n} = middleware;\nconst { signUp, signIn, signOut, me, verifyEmail, forgotPassword } = controller.api.auth;\n\nexport const auth = Router();\n\nauth.post(\"/sign-up\", handleAsync(notAuthenticated), handleAsync(upload.single(UPLOAD.IMAGE)), handleAsync(signUp));\n\nauth.post(\"/sign-in\", handleAsync(notAuthenticated), handleAsync(upload.none()), handleAsync(signIn));\n\nauth.post(\"/sign-out\", handleAsync(isAuthenticated), handleAsync(signOut));\n\nauth.post(\"/me\", handleAsync(notAuthenticated), handleAsync(me));\n\nauth.put(\"/verify-email\", handleAsync(verifyEmail));\n\nauth.put(\n  \"/forgot-password\",\n  handleAsync(notAuthenticated),\n  handleAsync(upload.none()),\n  handleAsync(access),\n  handleAsync(forgotPassword),\n);\n", "export default {} as const;\n", "import type { Request, Response, NextFunction } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../../model/index.js\";\nimport { APIError } from \"../../error/index.js\";\nimport { schema } from \"../../schema/index.js\";\n\nconst { StoreId, CategoryId, ProductId } = schema.id;\n\nexport default {\n  async checkStore(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { storeId } = StoreId.parse(req.params);\n    const { Store } = model.db;\n\n    const store = await Store.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { id: storeId },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (store === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Store not found\");\n\n    res.locals = {\n      ...res.locals,\n      store,\n    };\n    return next();\n  },\n  async checkCategory(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { categoryId } = CategoryId.parse(req.params);\n    const { store } = res.locals;\n\n    const { Category } = model.db;\n    const category = await Category.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { id: categoryId, storeId: store!.dataValues.id },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (category === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Category not found\");\n\n    res.locals = {\n      ...res.locals,\n      category,\n    };\n    return next();\n  },\n  async checkProduct(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { productId } = ProductId.parse(req.params);\n    const { category } = res.locals;\n\n    const { Product } = model.db;\n    const product = await Product.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { id: productId, categoryId: category!.dataValues.id },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (product === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Product not found\");\n\n    res.locals = {\n      ...res.locals,\n      product,\n    };\n    return next();\n  },\n  async isSeller(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { user } = req;\n    if (user === undefined) throw APIError.middleware(StatusCodes.UNAUTHORIZED, \"Unauthorized user\");\n\n    const { Store } = model.db;\n    const store = await Store.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { userId: user.dataValues.id },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (store === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Store not found, you can become seller\");\n\n    res.locals = {\n      ...res.locals,\n      store,\n    };\n    return next();\n  },\n  async isCategoryOwner(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { categoryId } = CategoryId.parse(req.params);\n    const { store } = res.locals;\n    const { Category } = model.db;\n\n    const category = await Category.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { storeId: store!.dataValues.id, id: categoryId },\n      plain: true,\n      limit: 1,\n      transaction,\n    });\n    if (category === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Category not found\");\n\n    res.locals = {\n      ...res.locals,\n      category,\n    };\n    return next();\n  },\n  async isProductOwner(\n    req: Request,\n    res: Response<never, TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { productId } = ProductId.parse(req.params);\n    const { store } = res.locals;\n    const { Category } = model.db;\n\n    const categories = await Category.findAll({\n      attributes: [\"id\"],\n      where: { storeId: store!.dataValues.id },\n      transaction,\n    });\n    if (categories.length === 0)\n      throw APIError.middleware(StatusCodes.FORBIDDEN, \"This store don't have any categories\");\n\n    const categoriesId = categories.map((category) => category.dataValues.id);\n    const { Product } = model.db;\n\n    const product = await Product.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: {\n        categoryId: categoriesId,\n        id: productId,\n      },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (product === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Product not found\");\n\n    res.locals = {\n      ...res.locals,\n      product,\n    };\n    return next();\n  },\n} as const;\n", "import { NextFunction, Request, Response } from \"express\";\n\nexport default {\n  async isAdmin(_req: Request, _res: Response, next: NextFunction) {\n    return next();\n  },\n} as const;\n", "import user from \"./user.js\";\nimport store from \"./store.js\";\nimport admin from \"./admin.js\";\n\nexport default {\n  user,\n  store,\n  admin,\n} as const;\n", "import type { Request, Response, NextFunction } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { util } from \"../../util/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { model } from \"../../model/index.js\";\nimport { schema } from \"../../schema/index.js\";\nimport { APIError } from \"../../error/index.js\";\n\nconst { COOKIE } = KEYS;\n\nexport default {\n  async access(req: Request, _res: Response<never, TResponse[\"Locals\"]>, next: NextFunction, transaction: Transaction) {\n    const token = `${req.cookies[COOKIE.TOKEN] ?? \"\"}`;\n    if (token.length === 0) throw APIError.middleware(StatusCodes.BAD_REQUEST, \"Access token not send\");\n\n    const key = req.session.access?.key ?? \"\";\n    if (key.length === 0) throw APIError.server(StatusCodes.FORBIDDEN, \"Invalid access key\");\n\n    const iv = req.session.access?.iv ?? \"\";\n    if (iv.length === 0) throw APIError.server(StatusCodes.FORBIDDEN, \"Invalid access iv\");\n\n    const { Body } = schema.req.security.access.Email.Middleware;\n    const { code, password, confirmPassword } = Body.parse(req.body);\n\n    if (!Object.is(password, confirmPassword)) throw APIError.controller(StatusCodes.CONFLICT, \"Passwords not equal\");\n\n    const { access } = util;\n\n    const hasAccess = access.verify(token, key, iv, code);\n    if (!hasAccess.valid) throw APIError.middleware(StatusCodes.UNAUTHORIZED, \"Invalid access token\");\n\n    req.session.access = { key: \"\", iv: \"\" };\n\n    const { User } = model.db;\n    const user = await User.findOne({\n      attributes: [\"id\", \"emailVerified\"],\n      where: { id: hasAccess.id },\n      plain: true,\n      limit: 1,\n      transaction,\n    });\n    if (user === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"User not found\");\n\n    delete req.body.code;\n    delete req.body.confirmPassword;\n\n    req.user = user;\n    return next();\n  },\n} as const;\n", "import type { Request, Response, NextFunction } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { APIError } from \"../error/index.js\";\nimport { model } from \"../model/index.js\";\nimport { schema } from \"../schema/index.js\";\n\nconst { OrderId } = schema.id;\n\n/** Check if user has registered */\nexport async function isAuthenticated(req: Request, _res: Response<never, TResponse[\"Locals\"]>, next: NextFunction) {\n  const authenticate = req.isAuthenticated();\n  if (!authenticate) throw APIError.middleware(StatusCodes.UNAUTHORIZED, \"Unauthenticated user\");\n\n  return next();\n}\n\n/** Block any authenticated user */\nexport async function notAuthenticated(req: Request, _res: Response<never, TResponse[\"Locals\"]>, next: NextFunction) {\n  const authenticated = req.isAuthenticated();\n  if (authenticated) throw APIError.middleware(StatusCodes.NOT_ACCEPTABLE, \"User already authenticated\");\n\n  return next();\n}\n\nexport async function checkOrder(\n  req: Request,\n  res: Response<never, TResponse[\"Locals\"]>,\n  next: NextFunction,\n  transaction: Transaction,\n) {\n  const user = req.user!;\n  const { orderId } = OrderId.parse(req.params);\n\n  const { Order } = model.db;\n  const order = await Order.findOne({\n    attributes: { exclude: [\"createdAt\", \"updatedAt\"] },\n    where: { id: orderId, userId: user.dataValues.id },\n    limit: 1,\n    plain: true,\n    transaction,\n  });\n  if (order === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Order not found\");\n\n  res.locals = {\n    ...res.locals,\n    order,\n  };\n  return next();\n}\n\n/** Check if user is seller @deprecated */\nexport async function isSeller(\n  req: Request,\n  res: Response<never, TResponse[\"Locals\"]>,\n  next: NextFunction,\n  transaction: Transaction,\n) {\n  const { user } = req;\n\n  const { Store } = model.db;\n  const store = await Store.findOne({\n    attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n    where: { userId: user!.dataValues.id },\n    limit: 1,\n    plain: true,\n    transaction,\n  });\n  if (store === null) throw APIError.middleware(StatusCodes.NOT_FOUND, \"Seller not found\");\n\n  res.locals = {\n    ...res.locals,\n    store,\n  };\n  return next();\n}\n\n/** Check if user is not seller */\n// export async function isNotSeller(\n//   _req: Request,\n//   res: Response<never, TResponse[\"Locals\"]>,\n//   next: NextFunction\n// ) {\n//   const { user } = res.locals;\n\n//   const { Seller } = model.db;\n//   const seller = await Seller.findOne({\n//     where: { userId: user!.dataValues.id },\n//     limit: 1,\n//     plain: true,\n//   });\n//   if (seller !== null)\n//     throw APIError.middleware(\n//       StatusCodes.FORBIDDEN,\n//       \"User already has an account\"\n//     );\n\n//   res.locals.seller = seller;\n//   return next();\n// }\n", "import api from \"./api/index.js\";\nimport security from \"./security/index.js\";\nimport * as fn from \"./fn.js\";\n\nexport const middleware = { api, security, fn } as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse, Tables } from \"../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { serialize } from \"cookie\";\nimport { APIError } from \"../../error/index.js\";\nimport { schema } from \"../../schema/index.js\";\nimport { authenticate } from \"../../passport/fn.js\";\nimport { model } from \"../../model/index.js\";\nimport { util } from \"../../util/index.js\";\nimport { lib } from \"../../lib/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { config } from \"../../config/index.js\";\n\nconst { COOKIE } = KEYS;\nconst { SignUp, VerifyEmail, ForgotPassword } = schema.req.api.auth;\n\nexport default {\n  async signUp(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = SignUp;\n    const { username, email, password, theme, locale } = Body.parse(req.body);\n\n    const { User, UserSetting } = model.db;\n    const checkEmail = await User.findOne({\n      attributes: [\"email\"],\n      where: { email },\n      limit: 1,\n      plain: true,\n      transaction,\n    });\n    if (checkEmail !== null) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Email already exist\");\n\n    const image = req.file;\n    if (image === undefined || image.buffer.length === 0)\n      throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please, provide an image\");\n\n    const { FileConverter, FileUploader } = lib.file;\n    const converter = await new FileConverter(image.buffer).convert();\n    if (converter.length === 0)\n      throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Unsupported image format\");\n\n    const uploaded = await new FileUploader(...converter).upload();\n    if (uploaded.length === 0) throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't upload your image\");\n\n    const { hash } = util.bcrypt;\n\n    // TODO: add rollback for uploaded files\n    const user = await User.create(\n      {\n        username,\n        email,\n        password: hash(password),\n        image: uploaded[0]!,\n      },\n      { fields: [\"username\", \"email\", \"password\", \"image\"], transaction },\n    );\n    await UserSetting.create(\n      {\n        userId: user.dataValues.id,\n        theme,\n        locale,\n        forceTheme: false,\n        disableAnimations: false,\n      },\n      {\n        fields: [\"userId\", \"theme\", \"locale\", \"forceTheme\", \"disableAnimations\"],\n        transaction,\n      },\n    );\n\n    res.status(StatusCodes.CREATED).json({ success: true });\n  },\n  async signIn(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const user = (await authenticate(\"local\", req, res, next)) as Tables[\"User\"];\n\n    const { sign } = util.jwt;\n    const { UserSetting, Store } = model.db;\n\n    const [setting, store] = await Promise.all([\n      UserSetting.findOne({\n        attributes: {\n          exclude: [\"userId\"],\n        },\n        where: { userId: user.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n      Store.findOne({\n        attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n        where: { userId: user.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n    ]);\n\n    const { options } = config;\n\n    res\n      .status(StatusCodes.OK)\n      .setHeader(\"Set-Cookie\", serialize(COOKIE.AUTHORIZATION, sign(user.dataValues.id), options.cookieOptions))\n      .json({\n        success: true,\n        data: {\n          user: user.dataValues,\n          setting: setting!.dataValues,\n          store: store?.dataValues ?? null,\n        },\n      });\n  },\n  async signOut(req: Request, res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>) {\n    req.logOut((err) => {\n      const { toBoolean } = schema.validators;\n      if (toBoolean.parse(err)) throw err;\n\n      req.session.csrf = { secret: \"\" };\n      req.session.access = { key: \"\", iv: \"\" };\n      res.status(StatusCodes.OK).json({ success: true });\n    });\n  },\n  async me(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const user = (await authenticate(\"bearer\", req, res, next)) as Tables[\"User\"];\n\n    const { sign } = util.jwt;\n    const { UserSetting, Store } = model.db;\n\n    const [setting, store] = await Promise.all([\n      UserSetting.findOne({\n        attributes: {\n          exclude: [\"userId\"],\n        },\n        where: { userId: user.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n      Store.findOne({\n        attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n        where: { userId: user.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n    ]);\n\n    const { options } = config;\n\n    res\n      .status(StatusCodes.OK)\n      .setHeader(\"Set-Cookie\", serialize(COOKIE.AUTHORIZATION, sign(user.dataValues.id), options.cookieOptions))\n      .json({\n        success: true,\n        data: {\n          user: user.dataValues,\n          setting: setting!.dataValues,\n          store: store?.dataValues ?? null,\n        },\n      });\n  },\n  async verifyEmail(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Query } = VerifyEmail;\n    const { token } = Query.parse(req.query);\n    const { verify } = util.jwt;\n\n    const id = (verify(token) as string | null) ?? \"\";\n    if (id.length === 0) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Invalid token\");\n\n    const { isUUID } = schema.validators;\n    const parsedId = isUUID.parse(id);\n\n    const { User } = model.db;\n    const [_, user] = await User.update(\n      { emailVerified: new Date() },\n      {\n        fields: [\"emailVerified\"],\n        where: { id: parsedId },\n        limit: 1,\n        returning: true,\n        transaction,\n      },\n    );\n    if (user.length === 0) throw APIError.controller(StatusCodes.NOT_FOUND, \"User not found\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  async forgotPassword(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const user = req.user!;\n    const { Body } = ForgotPassword;\n    const { password } = Body.parse(req.body);\n\n    const { hash } = util.bcrypt;\n    await user.update(\n      {\n        password: hash(password),\n        emailVerified: user.dataValues.emailVerified === null ? new Date() : user.dataValues.emailVerified,\n      },\n      { fields: [\"password\", \"emailVerified\"], transaction },\n    );\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import type { Request, Response, NextFunction } from \"express\";\nimport type { Strategy } from \"passport\";\nimport type { Tables } from \"../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { APIError } from \"../error/index.js\";\nimport { passport } from \"./index.js\";\nimport { schema } from \"../schema/index.js\";\n\nexport async function authenticate(\n  strategy: Strategy | string | string[],\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) {\n  return new Promise((resolve, reject) => {\n    passport.authenticate(strategy, (err: unknown, user: Tables[\"User\"], info: { message: string }) => {\n      const { toBoolean } = schema.validators;\n      if (toBoolean.parse(err)) return reject(err);\n      if (!toBoolean.parse(user))\n        return reject(APIError.passport(StatusCodes.BAD_REQUEST, info?.message ?? \"Invalid info\"));\n\n      req.logIn(user, (err) => {\n        if (toBoolean.parse(err)) return reject(err);\n        return resolve(user);\n      });\n    })(req, res, next);\n  });\n}\n", "import passport from \"passport\";\nimport { localStrategy } from \"./local.js\";\nimport { bearerStrategy } from \"./bearer.js\";\nimport { model } from \"../model/index.js\";\nimport { schema } from \"../schema/index.js\";\n\nconst { isUUID } = schema.validators;\n\npassport.serializeUser((user, done) => done(null, user.dataValues.id));\n\npassport.deserializeUser((id: string, done) => {\n  const userId = isUUID.safeParse(id);\n  if (!userId.success) return done(null, false);\n\n  const { User } = model.db;\n  User.findOne({\n    attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n    where: { id: userId.data },\n    limit: 1,\n  })\n    .then((user) => {\n      if (user === null) return done(null, false);\n      return done(null, user);\n    })\n    .catch(done);\n});\n\npassport.use(localStrategy);\npassport.use(bearerStrategy);\n\nexport { passport };\n", "import { Strategy as LocalStrategy } from \"passport-local\";\nimport { model } from \"../model/index.js\";\nimport { util } from \"../util/index.js\";\nimport { APIError } from \"../error/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\n\nexport const localStrategy = new LocalStrategy(\n  { usernameField: \"email\", passwordField: \"password\" },\n  (email, password, done) => {\n    const { User } = model.db;\n\n    User.findOne({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { email },\n      limit: 1,\n    })\n      .then((user) => {\n        if (user === null) return done(APIError.passport(StatusCodes.NOT_FOUND, \"User not found\"));\n\n        const { compare } = util.bcrypt;\n        if (!compare(password, user.dataValues.password))\n          return done(APIError.passport(StatusCodes.UNAUTHORIZED, \"Invalid password\"));\n\n        return done(null, user);\n      })\n      .catch(done);\n  },\n);\n", "import { Strategy as BearerStrategy } from \"passport-http-bearer\";\nimport { util } from \"../util/index.js\";\nimport { APIError } from \"../error/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../model/index.js\";\nimport { schema } from \"../schema/index.js\";\n\nexport const bearerStrategy = new BearerStrategy((token, done) => {\n  const { verify } = util.jwt;\n  const userId = verify(token) as string | null;\n  if (userId === null) return done(APIError.passport(StatusCodes.BAD_REQUEST, \"Invalid token\"));\n\n  const { isUUID } = schema.validators;\n  const parsedId = isUUID.safeParse(userId);\n  if (!parsedId.success) return done(APIError.passport(StatusCodes.BAD_REQUEST, parsedId.error.message));\n\n  const { User } = model.db;\n  User.findOne({\n    attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n    where: { id: parsedId.data },\n    limit: 1,\n    plain: true,\n  })\n    .then((user) => {\n      if (user === null) return done(APIError.passport(StatusCodes.NOT_FOUND, \"User not found\"));\n      return done(null, user);\n    })\n    .catch(done);\n});\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport orders from \"./orders.js\";\nimport { APIError } from \"../../../error/index.js\";\nimport { model } from \"../../../model/index.js\";\nimport { schema } from \"../../../schema/index.js\";\nimport { lib } from \"../../../lib/index.js\";\n\nconst { Setting, BecomeSeller, Update } = schema.req.api.user;\n\nexport default {\n  async profile(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { user } = req;\n    const { UserSetting, Store } = model.db;\n\n    const [setting, store] = await Promise.all([\n      UserSetting.findOne({\n        attributes: [\"theme\", \"locale\", \"forceTheme\", \"disableAnimations\"],\n        where: { userId: user!.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n      Store.findOne({\n        attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n        where: { userId: user!.dataValues.id },\n        plain: true,\n        limit: 1,\n        transaction,\n      }),\n    ]);\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        user: user!.dataValues,\n        setting: setting!.dataValues,\n        store: store?.dataValues ?? null,\n      },\n    });\n  },\n  async setting(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Setting;\n    const user = req.user!;\n\n    const { theme, locale, disableAnimations, forceTheme } = Body.parse(req.body);\n    const { UserSetting } = model.db;\n\n    const [_, setting] = await UserSetting.update(\n      { theme, locale, disableAnimations, forceTheme },\n      {\n        where: { userId: user.dataValues.id },\n        fields: [\"theme\", \"locale\", \"forceTheme\", \"disableAnimations\"],\n        returning: true,\n        transaction,\n        limit: 1,\n      },\n    );\n\n    res.status(StatusCodes.OK).json({ success: true, data: { setting: setting[0]!.dataValues } });\n  },\n  async becomeSeller(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = BecomeSeller;\n    const { name } = Body.parse(req.body);\n\n    const { Store } = model.db;\n\n    const checkStoreName = await Store.findOne({\n      attributes: [\"name\"],\n      where: { name },\n      paranoid: false,\n      plain: true,\n      limit: 1,\n      transaction,\n    });\n    if (checkStoreName !== null) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Store name already exists\");\n\n    const { user } = req;\n\n    const checkUserStore = await Store.findOne({\n      attributes: [\"userId\"],\n      where: { userId: user!.dataValues.id },\n      paranoid: false,\n      plain: true,\n      limit: 1,\n      transaction,\n    });\n    if (checkUserStore !== null) throw APIError.controller(StatusCodes.BAD_REQUEST, \"You have a store already\");\n\n    const image = req.file;\n    if (image === undefined || image.buffer.length === 0)\n      throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please, provide a logo for your store\");\n\n    const { FileConverter, FileUploader } = lib.file;\n    const converted = await new FileConverter(image.buffer).convert();\n    if (converted.length === 0) throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Invalid image format\");\n\n    const uploaded = await new FileUploader(...converted).upload();\n    if (uploaded.length === 0) throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't upload your image\");\n\n    const { StoreSetting } = model.db;\n    const store = await Store.create(\n      {\n        name,\n        image: uploaded[0]!,\n        userId: user!.dataValues.id,\n      },\n      { fields: [\"name\", \"image\", \"userId\"], transaction },\n    );\n    const setting = await StoreSetting.create(\n      {\n        storeId: store.dataValues.id,\n      },\n      { fields: [\"storeId\"], transaction },\n    );\n\n    res.status(StatusCodes.CREATED).json({\n      success: true,\n      data: {\n        store: store.dataValues,\n        setting: setting.dataValues,\n      },\n    });\n  },\n  async update(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { user } = req;\n    const { Body } = Update;\n    const { username } = Body.parse(req.body);\n\n    const image = req.file;\n    let newImage = \"\";\n    if (image !== undefined && image.buffer.length > 0) {\n      const { FileConverter, FileUploader } = lib.file;\n\n      const converted = await new FileConverter(image.buffer).convert();\n      if (converted.length === 0)\n        throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Please, provide a valid image\");\n\n      const uploaded = await new FileUploader(...converted).upload();\n      if (uploaded.length === 0) throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't upload your image\");\n\n      await FileUploader.remove(user!.dataValues.image);\n      newImage = uploaded[0]!;\n    }\n\n    await user!.update(\n      { username, image: newImage || user!.dataValues.image },\n      { fields: [\"username\", \"image\"], transaction },\n    );\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        user: user!.dataValues,\n      },\n    });\n  },\n  async remove(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const user = req.user!;\n    await user.destroy({ force: false, transaction });\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  orders,\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../types/res.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../../../model/index.js\";\nimport { schema } from \"../../../schema/index.js\";\nimport { ORDER_STATUS } from \"../../../constant/enum.js\";\nimport { APIError } from \"../../../error/index.js\";\nimport { service } from \"../../../service/index.js\";\n\nconst { Create, Update } = schema.req.api.user.orders;\n\nexport default {\n  async all(req: Request, res: Response<TResponse[\"Body\"][\"Success\"]>, _next: NextFunction, transaction: Transaction) {\n    const user = req.user!;\n    const { all } = service.order.user;\n    const orders = await all(user.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({ success: true, data: { orders } });\n  },\n  async order(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const user = req.user!;\n    const localOrder = res.locals.order!;\n    const { one } = service.order.user;\n    const order = await one(localOrder.dataValues.id, user.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({ success: true, data: { order } });\n  },\n  async create(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Create;\n    const { orders } = Body.parse(req.body);\n\n    const user = req.user!;\n    const { Order } = model.db;\n\n    await Order.bulkCreate(\n      orders.map((order) => ({\n        userId: user.dataValues.id,\n        productId: order.productId,\n        quantity: order.quantity,\n        totalPrice: order.totalPrice,\n      })),\n      { fields: [\"userId\", \"productId\", \"quantity\", \"totalPrice\"], transaction },\n    );\n\n    res.status(StatusCodes.CREATED).json({ success: true });\n  },\n  async patch(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const order = res.locals.order!;\n    if (order.dataValues.status !== ORDER_STATUS[0])\n      throw APIError.controller(StatusCodes.FORBIDDEN, \"Your order is on processing\");\n\n    const { Query } = Update;\n    const { quantity } = Query.parse(req.query);\n\n    await order.update({ quantity }, { fields: [\"quantity\"], transaction });\n    res.status(StatusCodes.OK).json({ success: true, data: { order: order.dataValues } });\n  },\n  async remove(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const order = res.locals.order!;\n    await order.update(\n      { status: ORDER_STATUS[3], canceledAt: new Date() },\n      { fields: [\"status\", \"canceledAt\"], transaction },\n    );\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import { QueryTypes } from \"sequelize\";\n\nexport async function all() {\n  return sequelize.query(``, {\n    type: QueryTypes.SELECT,\n    raw: true,\n    bind: {},\n  });\n}\n\n// export async function one(id: string) {\n//   return sequelize.query(``, {\n//     type: QueryTypes.SELECT,\n//     raw: true,\n//     bind: {},\n//   });\n// }\n", "import { QueryTypes, type Transaction } from \"sequelize\";\n\nexport async function all(storeId: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"P\".\"id\", \"P\".\"title\", \"P\".\"titleAr\",\n    ARRAY_AGG(DISTINCT \"PI\".\"image\") AS \"images\", COUNT(\"PV\".\"id\") as \"views\", COUNT(\"O\".\"id\") AS \"orders\"\n    FROM \"Product\" \"P\"\n    INNER JOIN \"ProductImage\" \"PI\" ON \"PI\".\"productId\" = \"P\".\"id\"\n    INNER JOIN \"Category\" \"C\" ON \"C\".\"id\" = \"P\".\"categoryId\"\n    LEFT JOIN \"ProductViewer\" \"PV\" ON \"PV\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"Order\" \"O\" ON \"O\".\"productId\" = \"P\".\"id\"\n    WHERE \"P\".\"deletedAt\" IS NULL AND \"PI\".\"deletedAt\" IS NULL AND \"C\".\"deletedAt\" IS NULL AND\n    \"C\".\"storeId\" = $storeId\n    GROUP BY \"P\".\"id\"\n    ORDER BY \"P\".\"createdAt\" DESC\n  `,\n    {\n      type: QueryTypes.SELECT,\n      bind: { storeId: storeId },\n      raw: true,\n      transaction,\n    },\n  );\n}\n\nexport async function one(id: string, transaction: Transaction) {\n  return sequelize.query(\n    `SELECT \"P\".\"id\" AS \"product.id\", \"P\".\"title\" AS \"product.title\", \"P\".\"titleAr\" AS \"product.titleAr\",\n    \"P\".\"description\" AS \"product.description\", \"P\".\"descriptionAr\" AS \"product.descriptionAr\",\n    \"P\".\"quality\" AS \"product.quality\", \"P\".\"stock\" AS \"product.stock\", \"P\".\"model\" AS \"product.model\",\n    \"P\".\"price\" AS \"product.price\", \"P\".\"discount\" AS \"product.discount\",\n    ARRAY_AGG(DISTINCT \"PI\".\"image\") AS \"product.images\", ARRAY_AGG(DISTINCT \"PIn\".\"info\") AS \"product.infos\", ARRAY_AGG(DISTINCT \"PIn\".\"infoAr\") AS \"product.infosAr\",\n    ARRAY_AGG(DISTINCT \"PC\".\"color\") AS \"product.colors\", ARRAY_AGG(DISTINCT \"PS\".\"size\") AS \"product.sizes\", ARRAY_AGG(DISTINCT \"T\".\"tag\") AS \"product.tags\",\n    \"C\".\"id\" AS \"category.id\", \"C\".\"name\" AS \"category.name\", \"C\".\"nameAr\" AS \"category.nameAr\", \"C\".\"image\" AS \"category.image\"\n    FROM \"Product\" AS \"P\"\n    INNER JOIN \"Category\" AS \"C\" ON \"C\".\"id\" = \"P\".\"categoryId\"\n    INNER JOIN \"ProductImage\" AS \"PI\" ON \"PI\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"ProductTag\" AS \"PT\" ON \"PT\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"ProductColor\" AS \"PC\" ON \"PC\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"ProductSize\" AS \"PS\" ON \"PS\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"ProductInfo\" AS \"PIn\" ON \"PIn\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"Tag\" AS \"T\" ON \"T\".\"id\" = \"PT\".\"tagId\"\n    WHERE \"P\".\"id\" = $id AND \"P\".\"deletedAt\" IS NULL AND \"C\".\"deletedAt\" IS NULL\n    AND \"PI\".\"deletedAt\" IS NULL AND \"PT\".\"deletedAt\" IS NULL AND \"PC\".\"deletedAt\" IS NULL  AND \"PS\".\"deletedAt\" IS NULL\n    AND \"PIn\".\"deletedAt\" IS NULL\n    GROUP BY \"P\".\"id\", \"C\".\"id\"\n    LIMIT 1`,\n    {\n      type: QueryTypes.SELECT,\n      bind: { id },\n      raw: true,\n      nest: true,\n      plain: true,\n      transaction,\n    },\n  );\n}\n\nexport async function viewers(productId: string, transaction: Transaction) {\n  return sequelize.query(\n    `SELECT \"U\".\"id\", \"U\".\"username\", \"U\".\"image\", COUNT(\"U\".\"id\") AS \"views\"\n    FROM \"User\" AS \"U\"\n    INNER JOIN \"ProductViewer\" AS \"PV\" ON \"PV\".\"userId\" = \"U\".\"id\"\n    WHERE \"PV\".\"productId\" = $productId AND \"U\".\"deletedAt\" IS NULL\n    GROUP BY \"U\".\"id\"`,\n    { type: QueryTypes.SELECT, bind: { productId }, raw: true, transaction },\n  );\n}\n\nexport async function orders() {}\n", "import { QueryTypes, type Transaction } from \"sequelize\";\n\nexport async function all(storeId: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"C\".\"id\", \"C\".\"name\", \"C\".\"nameAr\", \"C\".\"image\",\n    COUNT(\"P\".\"id\") AS \"products\", COUNT(\"CV\".\"id\") AS \"views\"\n    FROM \"Category\" \"C\"\n    LEFT JOIN \"CategoryViewer\" \"CV\" ON \"CV\".\"categoryId\" = \"C\".\"id\"\n    LEFT JOIN \"Product\" \"P\" ON \"P\".\"categoryId\" = \"C\".\"id\" AND \"P\".\"deletedAt\" IS NULL\n    WHERE \"C\".\"storeId\" = $storeId AND \"C\".\"deletedAt\" IS NULL\n    GROUP BY \"C\".\"id\"\n    ORDER BY \"C\".\"createdAt\" DESC\n    `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      bind: { storeId },\n      transaction,\n    },\n  );\n}\n\nexport async function one(id: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"C\".\"id\", \"C\".\"name\", \"C\".\"nameAr\", \"C\".\"image\",\n    COUNT(\"P\".\"id\") AS \"products\", COUNT(\"CV\".\"id\") AS \"views\"\n    FROM \"Category\" \"C\"\n    LEFT JOIN \"CategoryViewer\" \"CV\" ON \"CV\".\"categoryId\" = \"C\".\"id\"\n    LEFT JOIN \"Product\" \"P\" ON \"P\".\"categoryId\" = \"C\".\"id\" AND \"P\".\"deletedAt\" IS NULL\n    WHERE \"C\".\"id\" = $id AND \"C\".\"deletedAt\" IS NULL\n    GROUP BY \"C\".\"id\"\n    LIMIT 1\n    `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      plain: true,\n      bind: { id },\n      transaction,\n    },\n  );\n}\n\nexport async function products(categoryId: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"P\".\"id\", \"P\".\"title\", \"P\".\"titleAr\",\n    ARRAY_AGG(DISTINCT \"PI\".\"image\") AS \"images\", COUNT(\"PV\".\"id\") as \"views\", COUNT(\"O\".\"id\") AS \"orders\"\n    FROM \"Product\" \"P\"\n    INNER JOIN \"ProductImage\" \"PI\" ON \"PI\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"ProductViewer\" \"PV\" ON \"PV\".\"productId\" = \"P\".\"id\"\n    LEFT JOIN \"Order\" \"O\" ON \"O\".\"productId\" = \"P\".\"id\"\n    WHERE \"P\".\"deletedAt\" IS NULL AND \"PI\".\"deletedAt\" IS NULL AND \"P\".\"categoryId\" = $categoryId\n    GROUP BY \"P\".\"id\"\n    ORDER BY \"P\".\"createdAt\" DESC\n    `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      bind: { categoryId },\n      transaction,\n    },\n  );\n}\n", "export * as user from \"./user.js\";\n", "import { QueryTypes, type Transaction } from \"sequelize\";\n\nexport async function all(userId: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"O\".\"id\" AS \"order.id\", \"O\".\"quantity\" AS \"order.quantity\",\n    \"O\".\"totalPrice\" AS \"order.totalPrice\", \"O\".\"status\" AS \"order.status\",\n    \"P\".\"id\" AS \"product.id\", \"P\".\"title\" AS \"product.title\",\n    \"P\".\"titleAr\" AS \"product.titleAr\", \"P\".\"description\" AS \"product.description\", \n    \"P\".\"descriptionAr\" AS \"product.descriptionAr\",\n    ARRAY_AGG(DISTINCT \"PI\".\"image\") AS \"product.images\"\n    FROM \"Order\" \"O\"\n    INNER JOIN \"Product\" \"P\" ON \"P\".\"id\" = \"O\".\"productId\"\n    INNER JOIN \"ProductImage\" \"PI\" ON \"PI\".\"productId\" = \"P\".\"id\"\n    WHERE \"O\".\"userId\" = $userId\n    GROUP BY \"O\".\"id\", \"P\".\"id\"\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      nest: true,\n      bind: { userId },\n      transaction,\n    },\n  );\n}\n\nexport async function one(id: number, userId: string, transaction: Transaction) {\n  return sequelize.query(\n    `\n    SELECT \"O\".\"id\" AS \"order.id\", \"O\".\"quantity\" AS \"order.quantity\",\n    \"O\".\"totalPrice\" AS \"order.totalPrice\", \"O\".\"status\" AS \"order.status\",\n    \"P\".\"id\" AS \"product.id\", \"P\".\"title\" AS \"product.title\",\n    \"P\".\"titleAr\" AS \"product.titleAr\", \"P\".\"description\" AS \"product.description\", \n    \"P\".\"descriptionAr\" AS \"product.descriptionAr\",\n    ARRAY_AGG(DISTINCT \"PI\".\"image\") AS \"product.images\"\n    FROM \"Order\" \"O\"\n    INNER JOIN \"Product\" \"P\" ON \"P\".\"id\" = \"O\".\"productId\"\n    INNER JOIN \"ProductImage\" \"PI\" ON \"PI\".\"productId\" = \"P\".\"id\"\n    WHERE \"O\".\"id\" = $id AND \"O\".\"userId\" = $userId\n    GROUP BY \"O\".\"id\", \"P\".\"id\"\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      plain: true,\n      nest: true,\n      bind: { id, userId },\n      transaction,\n    },\n  );\n}\n", "import { QueryTypes, type Transaction } from \"sequelize\";\n\nexport async function users(transaction: Transaction) {\n  return sequelize.query(\n    `\n  SELECT COUNT(\"id\") AS \"users\", \"createdAt\" FROM \"User\"\n  GROUP BY \"createdAt\"\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      transaction,\n    },\n  );\n}\n\nexport async function stores(transaction: Transaction) {\n  return sequelize.query(\n    `\n  SELECT COUNT(\"id\") AS \"stores\", \"createdAt\" FROM \"Store\"\n  GROUP BY \"createdAt\"\n  `,\n    {\n      type: QueryTypes.SELECT,\n      raw: true,\n      transaction,\n    },\n  );\n}\n", "import * as stats from \"./stats.js\";\n\nexport default {\n  stats,\n} as const;\n", "import * as store from \"./store.js\";\nimport * as product from \"./product.js\";\nimport * as category from \"./category.js\";\nimport * as order from \"./order/index.js\";\nimport admin from \"./admin/index.js\";\n\nexport const service = { store, category, product, order, admin } as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { TResponse } from \"../../types/index.js\";\nimport { Op, type Transaction } from \"sequelize\";\n// import Fuse, { type IFuseOptions } from \"fuse.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { schema } from \"../../schema/index.js\";\nimport { model } from \"../../model/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { service } from \"../../service/index.js\";\n\nconst { Search, Home } = schema.req.api.store;\nconst { DB } = KEYS;\n\nexport default {\n  async search(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Query } = Search;\n    const { s, limit } = Query.parse(req.query);\n    const { Store, Category, Product, ProductImage } = model.db;\n\n    const keys = s\n      .split(/\\s+/)\n      .filter((s) => /^[a-zA-Z0-9\u060C-\u0669]+$/.test(s))\n      .map((s) => ({ [Op.iLike]: `%${s}%` }));\n\n    const [products, categories, stores] = await Promise.all([\n      Product.findAll({\n        attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n        where: {\n          [Op.or]: [\n            ...keys.map((key) => ({ title: key })),\n            ...keys.map((key) => ({ titleAr: key })),\n            ...keys.map((key) => ({ description: key })),\n            ...keys.map((key) => ({ descriptionAr: key })),\n          ],\n        },\n        include: [\n          {\n            as: DB.MODELS.PRODUCT.IMAGE,\n            attributes: [\"image\"],\n            model: ProductImage,\n            required: true,\n            limit: 1,\n          },\n          {\n            as: DB.MODELS.CATEGORY.MODEL,\n            attributes: [\"storeId\"],\n            model: Category,\n            required: true,\n          },\n        ],\n        order: [[\"createdAt\", \"DESC\"]],\n        limit,\n        transaction,\n      }),\n      Category.findAll({\n        attributes: [\"id\", \"name\", \"nameAr\", \"image\", \"storeId\"],\n        where: {\n          [Op.or]: [...keys.map((key) => ({ nameAr: key })), ...keys.map((key) => ({ name: key }))],\n        },\n        order: [[\"createdAt\", \"DESC\"]],\n        raw: true,\n        limit,\n        transaction,\n      }),\n      Store.findAll({\n        attributes: [\"id\", \"image\", \"name\"],\n        where: { [Op.or]: keys.map((key) => ({ name: key })) },\n        order: [[\"createdAt\", \"DESC\"]],\n        raw: true,\n        limit,\n        transaction,\n      }),\n    ]);\n\n    //   const fuseOptions: IFuseOptions<any> = {\n    //     // The list of keys to search in the data\n    //     keys: [\"name\", \"nameAr\", \"title\", \"titleAr\", \"description\", \"descriptionAr\"],\n    //     // Should search queries be sorted\n    //     shouldSort: true,\n    //     // Search in a specific threshold\n    //     threshold: 0.4,\n    //     // Minimum number of characters before starting a search\n    //     minMatchCharLength: 2,\n    //     // Determine the number of search results returned\n    //     includeScore: true,\n    //     // Use extended search in the pattern (allows the use of wildcards)\n    //     useExtendedSearch: true,\n    //     // The location where the matched keys will be stored in each result item\n    //     includeMatches: true,\n    //     // Whether to ignore special characters\n    //     ignoreLocation: true,\n    // };\n    //   const [] = new Fuse()\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        stores,\n        categories,\n        products: products.map((product) => {\n          const { dataValues } = product;\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.image = dataValues[DB.MODELS.PRODUCT.IMAGE][0].dataValues.image;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.PRODUCT.IMAGE];\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.storeId = dataValues[DB.MODELS.CATEGORY.MODEL].dataValues.storeId;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.CATEGORY.MODEL];\n\n          return dataValues;\n        }),\n      },\n    });\n  },\n  async all(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Store } = model.db;\n    const stores = await Store.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      // limit: 25,\n      raw: true,\n      order: [[\"createdAt\", \"DESC\"]],\n      transaction,\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: { stores },\n    });\n  },\n  async categories(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Category } = model.db;\n    const categories = await Category.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      // limit: 25,\n      raw: true,\n      order: [[\"createdAr\", \"DESC\"]],\n      transaction,\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        categories,\n      },\n    });\n  },\n  async products(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Product, ProductImage } = model.db;\n    const products = await Product.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      include: {\n        as: DB.MODELS.PRODUCT.IMAGE,\n        attributes: [\"image\"],\n        model: ProductImage,\n        required: true,\n        limit: 1,\n      },\n      order: [[\"createdAt\", \"DESC\"]],\n      transaction,\n      // limit: 25,\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        products: products.map((product) => {\n          const { dataValues } = product;\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.image = dataValues[DB.MODELS.PRODUCT.IMAGE][0].image;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.PRODUCT.IMAGE];\n          return dataValues;\n        }),\n      },\n    });\n  },\n  async store(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Params } = Home;\n    const { storeId } = Params.parse(req.params);\n\n    const { user } = req;\n    const { StoreViewer } = model.db;\n    await StoreViewer.create(\n      { ip: req.clientIp, userId: user?.dataValues.id, storeId },\n      { fields: [\"ip\", \"userId\", \"storeId\"], transaction },\n    );\n\n    const store = res.locals.store!;\n    const { Category, Product, ProductImage } = model.db;\n\n    const categories = await Category.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      order: [[\"createdAt\", \"DESC\"]],\n      where: { storeId: store.dataValues.id },\n      transaction,\n    });\n\n    const categoriesId = categories.map((category) => category.dataValues.id);\n\n    const products = await Product.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: {\n        categoryId: categoriesId,\n      },\n      order: [[\"createdAt\", \"DESC\"]],\n      transaction,\n      include: [\n        {\n          as: DB.MODELS.PRODUCT.IMAGE,\n          attributes: [\"image\"],\n          model: ProductImage,\n          required: true,\n          limit: 1,\n        },\n        {\n          as: DB.MODELS.CATEGORY.MODEL,\n          attributes: [\"storeId\"],\n          model: Category,\n          required: true,\n        },\n      ],\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        store: store.dataValues,\n        categories: categories.map((category) => category.dataValues),\n        products: products.map((product) => {\n          const { dataValues } = product;\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.image = dataValues[DB.MODELS.PRODUCT.IMAGE][0].dataValues.image;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.PRODUCT.IMAGE];\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.storeId = dataValues[DB.MODELS.CATEGORY.MODEL].dataValues.storeId;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.CATEGORY.MODEL];\n\n          return dataValues;\n        }),\n      },\n    });\n  },\n  async category(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const category = res.locals.category!;\n    const { user } = req;\n    const { CategoryViewer, Product, ProductImage, Category } = model.db;\n    await CategoryViewer.create(\n      { ip: req.clientIp, userId: user?.dataValues.id, categoryId: category.dataValues.id },\n      { fields: [\"ip\", \"userId\", \"categoryId\"], transaction },\n    );\n\n    const products = await Product.findAll({\n      attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n      where: { categoryId: category.dataValues.id },\n      order: [[\"createdAt\", \"DESC\"]],\n      transaction,\n      include: [\n        {\n          as: DB.MODELS.PRODUCT.IMAGE,\n          attributes: [\"image\"],\n          model: ProductImage,\n          required: true,\n          limit: 1,\n        },\n        {\n          as: DB.MODELS.CATEGORY.MODEL,\n          attributes: [\"storeId\"],\n          model: Category,\n          required: true,\n        },\n      ],\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        category: category.dataValues,\n        products: products.map((product) => {\n          const { dataValues } = product;\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.image = dataValues[DB.MODELS.PRODUCT.IMAGE][0].dataValues.image;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.PRODUCT.IMAGE];\n\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          dataValues.storeId = dataValues[DB.MODELS.CATEGORY.MODEL].dataValues.storeId;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          delete dataValues[DB.MODELS.CATEGORY.MODEL];\n\n          return dataValues;\n        }),\n      },\n    });\n  },\n  async product(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const localProduct = res.locals.product!;\n    const { user } = req;\n    const { ProductViewer } = model.db;\n    await ProductViewer.create(\n      { ip: req.clientIp, userId: user?.dataValues.id, productId: localProduct!.dataValues.id },\n      { fields: [\"ip\", \"userId\", \"productId\"], transaction },\n    );\n\n    const product = await service.product.one(localProduct.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({ success: true, data: { product } });\n  },\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { TResponse } from \"../../../../types/index.js\";\nimport { Op, type Transaction } from \"sequelize\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../../../../model/index.js\";\nimport { APIError } from \"../../../../error/index.js\";\nimport { lib } from \"../../../../lib/index.js\";\nimport { schema } from \"../../../../schema/index.js\";\nimport categories from \"./categories.js\";\nimport products from \"./products.js\";\n\nconst { Update } = schema.req.api.dashboard.store;\n\nexport default {\n  async profile(_req: Request, res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>) {\n    const { store } = res.locals;\n\n    const { Category, Product } = model.db;\n\n    const categories = await Category.findAll({\n      attributes: [\"id\"],\n      where: { storeId: store!.dataValues.id },\n    });\n\n    const products = await Product.count({\n      attributes: [\"categoryId\"],\n      where: {\n        [Op.or]: {\n          categoryId: categories.map((category) => category.dataValues.id),\n        },\n      },\n      group: \"categoryId\",\n    });\n\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        store: store!.dataValues,\n        count: {\n          categories: categories.length,\n          products,\n        },\n      },\n    });\n  },\n  async update(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Update;\n    const { name } = Body.parse(req.body);\n\n    const { store } = res.locals;\n    if (store === undefined)\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Unprovided local store (seller:update)\");\n\n    let newImage = store.dataValues.image;\n    const image = req.file;\n\n    if (image !== undefined && image.buffer.length > 0) {\n      const { FileConverter, FileUploader } = lib.file;\n\n      const converted = await new FileConverter(image.buffer).convert();\n      if (converted.length === 0) throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Invalid image format\");\n\n      const uploaded = await new FileUploader(...converted).upload();\n      if (uploaded.length === 0) throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't upload your image\");\n\n      newImage = uploaded[0]!;\n    }\n\n    await store.update({ name, image: newImage }, { fields: [\"name\", \"image\"], transaction });\n    res.status(StatusCodes.OK).json({ success: true, data: { store: store!.dataValues } });\n  },\n  async remove(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const store = res.locals.store!;\n    await store.destroy({ force: false, transaction });\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  categories,\n  products,\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../../../../model/index.js\";\nimport { APIError } from \"../../../../error/index.js\";\nimport { lib } from \"../../../../lib/index.js\";\nimport { schema } from \"../../../../schema/index.js\";\nimport { service } from \"../../../../service/index.js\";\n\nconst { /* All, */ Create, Update } = schema.req.api.dashboard.store.categories;\nconst { category } = service;\n\nexport default {\n  async all(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const store = res.locals.store!;\n    // const { Query } = All;\n    // const { page, limit } = Query.parse(req.query);\n\n    // const { Category } = model.db;\n\n    // const categories = await Category.findAll({\n    //   attributes: { exclude: [\"createdAt\", \"updatedAt\", \"deletedAt\"] },\n    //   where: { storeId: store!.dataValues.id },\n    //   offset: (page - 1) * limit,\n    //   limit,\n    //   order: [[\"createdAt\", \"DESC\"]],\n    // });\n\n    const categories = await category.all(store.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        categories,\n      },\n    });\n  },\n  async category(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const localCategory = res.locals.category!;\n    const [products, one] = await Promise.all([\n      category.products(localCategory.dataValues.id, transaction),\n      category.one(localCategory.dataValues.id, transaction),\n    ]);\n    res.status(StatusCodes.OK).json({ success: true, data: { category: one, products } });\n  },\n  async create(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Create;\n    const { name, nameAr } = Body.parse(req.body);\n\n    const image = req.file;\n    if (image === undefined || image.buffer.length === 0)\n      throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please, provide a valid image\");\n\n    const { FileConverter, FileUploader } = lib.file;\n    const converted = await new FileConverter(image.buffer).convert();\n    if (converted.length === 0) throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Invalid image\");\n\n    const uploaded = await new FileUploader(...converted).upload();\n    if (uploaded.length === 0) throw APIError.controller(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't save image\");\n\n    const { store } = res.locals;\n    const { Category } = model.db;\n\n    const category = await Category.create(\n      { image: uploaded[0]!, name, nameAr, storeId: store!.dataValues.id },\n      { fields: [\"image\", \"name\", \"nameAr\", \"storeId\"], returning: true, transaction },\n    );\n\n    res.status(StatusCodes.CREATED).json({ success: true, data: { category: category.dataValues } });\n  },\n  async update(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Update;\n    const { name, nameAr } = Body.parse(req.body);\n\n    const { category } = res.locals;\n    const image = req.file;\n    let newImage = category!.dataValues.image;\n\n    if (image !== undefined && image.buffer.length > 0) {\n      const { FileConverter, FileUploader } = lib.file;\n\n      const converted = await new FileConverter(image.buffer).convert();\n      if (converted.length === 0)\n        throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Please, provide a valid image\");\n\n      const uploaded = await new FileUploader(...converted).upload();\n      if (uploaded.length === 0) throw APIError.controller(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't save image\");\n\n      newImage = uploaded[0]!;\n    }\n\n    await category!.update({ name, nameAr, image: newImage }, { fields: [\"name\", \"nameAr\", \"image\"], transaction });\n    res.status(StatusCodes.OK).json({ success: true, data: { category: category!.dataValues } });\n  },\n  async remove(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const category = res.locals.category!;\n    await category.destroy({ force: false, transaction });\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import type { Request, Response, NextFunction } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { schema } from \"../../../../schema/index.js\";\nimport { model } from \"../../../../model/index.js\";\nimport { APIError } from \"../../../../error/index.js\";\nimport { lib } from \"../../../../lib/index.js\";\nimport { service } from \"../../../../service/index.js\";\n\nconst { product } = service;\nconst { Create, Update } = schema.req.api.dashboard.store.products;\n\nexport default {\n  async all(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const store = res.locals.store!;\n    const products = await product.all(store.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: {\n        products,\n      },\n    });\n  },\n  async product(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const localProduct = res.locals.product!;\n    const one = await product.one(localProduct.dataValues.id, transaction);\n    res.status(StatusCodes.OK).json({ success: true, data: { ...one } });\n  },\n  async create(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Create;\n    const {\n      title,\n      titleAr,\n      description,\n      descriptionAr,\n      quality,\n      stock,\n      price,\n      discount,\n      categoryId,\n      infos,\n      tags,\n      sizes,\n      colors,\n    } = Body.parse(req.body);\n\n    const files = req.files;\n    if (files === undefined) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please, provide images\");\n\n    const { FileConverter, FileUploader } = lib.file;\n    const { models = [], images = [] } = files as {\n      [fieldname: string]: Express.Multer.File[];\n    };\n\n    if (images.length === 0) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please provide at least one image\");\n\n    const converted = await new FileConverter(\n      ...models.map((model) => model.buffer),\n      ...images.map((image) => image.buffer),\n    ).convert();\n    if (converted.length === 0) throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Invalid provided files\");\n\n    const uploaded = await new FileUploader(...converted).upload();\n    if (uploaded.length === 0) throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't save your files\");\n\n    const { Product, ProductColor, ProductImage, ProductSize, ProductInfo, ProductTag, Tag } = model.db;\n    const product = await Product.create(\n      {\n        title,\n        titleAr,\n        description,\n        descriptionAr,\n        quality,\n        stock,\n        price,\n        discount,\n        categoryId,\n        model: uploaded.find((file) => file.endsWith(\".glb\")),\n      },\n      {\n        fields: [\n          \"title\",\n          \"titleAr\",\n          \"description\",\n          \"descriptionAr\",\n          \"quality\",\n          \"stock\",\n          \"price\",\n          \"discount\",\n          \"categoryId\",\n          \"model\",\n        ],\n        returning: true,\n        transaction,\n      },\n    ).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't create product\", {\n        files: uploaded,\n      });\n    });\n\n    const infosArr = infos\n      .split(\",\")\n      .map((info) => info.trim())\n      .filter((info) => info.length > 0);\n    if (infosArr.length % 2 !== 0)\n      throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please provide both the english and arabic version in infos\");\n\n    const sizesArr = sizes\n      .split(\",\")\n      .map((size) => size.trim())\n      .filter((size) => size.length > 0);\n\n    const tagsArr = tags\n      .split(\",\")\n      .map((tag) => tag.trim())\n      .filter((tag) => tag.length > 0);\n\n    const colorsArr = colors\n      .split(\",\")\n      .map((color) => color.trim())\n      .filter((color) => color.length > 0);\n\n    const { store } = res.locals;\n    const tagsId = await Promise.all(\n      tagsArr.map((tag) =>\n        Tag.findOrCreate({\n          attributes: [\"id\"],\n          where: { tag },\n          fields: [\"tag\", \"storeId\"],\n          defaults: { tag, storeId: store!.dataValues.id },\n          transaction,\n        }),\n      ),\n    ).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't find or create tag\", {\n        files: uploaded,\n      });\n    });\n\n    const createInfos = [];\n    for (let i = 0; i < infosArr.length; i += 2) {\n      const info = infosArr[i]!;\n      const infoAr = infosArr[i + 1]!;\n\n      createInfos.push({ info, infoAr, productId: product.dataValues.id });\n    }\n\n    const uploadedImages = uploaded.filter((upload) => upload.endsWith(\".webp\"));\n\n    await Promise.all([\n      ProductImage.bulkCreate(\n        uploadedImages.map((image) => ({ image, productId: product.dataValues.id })),\n        { fields: [\"image\", \"productId\"], transaction },\n      ),\n      ProductInfo.bulkCreate(createInfos, { fields: [\"info\", \"infoAr\", \"productId\"], transaction }),\n      ProductColor.bulkCreate(\n        colorsArr.map((color) => ({ color, productId: product.dataValues.id })),\n        { fields: [\"color\", \"productId\"], transaction },\n      ),\n      ProductSize.bulkCreate(\n        sizesArr.map((size) => ({ size, productId: product.dataValues.id })),\n        { fields: [\"size\", \"productId\"], transaction },\n      ),\n      ProductTag.bulkCreate(\n        tagsId.map(([tagId]) => ({ tagId: tagId.dataValues.id, productId: product.dataValues.id })),\n        { fields: [\"tagId\", \"productId\"], transaction },\n      ),\n    ]).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't complete product promises\", {\n        files: uploaded,\n      });\n    });\n\n    res.status(StatusCodes.CREATED).json({ success: true });\n  },\n  async update(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Update;\n    const {\n      title,\n      titleAr,\n      description,\n      descriptionAr,\n      quality,\n      stock,\n      price,\n      discount,\n      categoryId,\n      deletedImages,\n      infos,\n      tags,\n      sizes,\n      colors,\n    } = Body.parse(req.body);\n\n    const { FileConverter, FileUploader } = lib.file;\n    const { models = [], images = [] } = req.files as Partial<{\n      [fieldname: string]: Express.Multer.File[];\n    }>;\n\n    const converted = await new FileConverter(\n      ...models.map((model) => model.buffer),\n      ...images.map((image) => image.buffer),\n    ).convert();\n    if (converted.length === 0 && (models.length > 0 || images.length > 0))\n      throw APIError.controller(StatusCodes.UNSUPPORTED_MEDIA_TYPE, \"Invalid provided files\");\n\n    const uploaded = await new FileUploader(...converted).upload();\n    if (uploaded.length === 0 && converted.length > 0)\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, \"Can't save your files\");\n\n    const { ProductColor, ProductImage, ProductSize, ProductInfo, ProductTag, Tag } = model.db;\n    const product = res.locals.product!;\n    await product\n      .update(\n        {\n          title,\n          titleAr,\n          description,\n          descriptionAr,\n          quality,\n          stock,\n          price,\n          discount,\n          categoryId,\n          model: uploaded.find((file) => file.endsWith(\".glb\")) ?? product.dataValues.model,\n        },\n        {\n          fields: [\n            \"title\",\n            \"titleAr\",\n            \"description\",\n            \"descriptionAr\",\n            \"quality\",\n            \"stock\",\n            \"price\",\n            \"discount\",\n            \"categoryId\",\n            \"model\",\n          ],\n          transaction,\n        },\n      )\n      .catch((e) => {\n        throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't update product\", {\n          files: uploaded,\n        });\n      });\n\n    await Promise.all([\n      ProductInfo.destroy({ force: false, where: { productId: product.dataValues.id }, transaction }),\n      ProductColor.destroy({ force: false, where: { productId: product.dataValues.id }, transaction }),\n      ProductSize.destroy({ force: false, where: { productId: product.dataValues.id }, transaction }),\n      ProductTag.destroy({ force: false, where: { productId: product.dataValues.id }, transaction }),\n      ProductImage.destroy({\n        force: false,\n        where: {\n          productId: product.dataValues.id,\n          id: deletedImages\n            .split(\",\")\n            .map((image) => image.trim())\n            .filter((image) => image.length > 0),\n        },\n        transaction,\n      }),\n    ]).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't complete delete product promise\", {\n        files: uploaded,\n      });\n    });\n\n    const infosArr = infos\n      .split(\",\")\n      .map((info) => info.trim())\n      .filter((info) => info.length > 0);\n    if (infosArr.length % 2 !== 0)\n      throw APIError.controller(StatusCodes.BAD_REQUEST, \"Please provide both the english and arabic version in infos\");\n\n    const sizesArr = sizes\n      .split(\",\")\n      .map((size) => size.trim())\n      .filter((size) => size.length > 0);\n\n    const tagsArr = tags\n      .split(\",\")\n      .map((tag) => tag.trim())\n      .filter((tag) => tag.length > 0);\n\n    const colorsArr = colors\n      .split(\",\")\n      .map((color) => color.trim())\n      .filter((color) => color.length > 0);\n\n    const store = res.locals.store!;\n    const tagsId = await Promise.all(\n      tagsArr.map((tag) =>\n        Tag.findOrCreate({\n          attributes: [\"id\"],\n          where: { tag },\n          fields: [\"tag\", \"storeId\"],\n          defaults: { tag, storeId: store.dataValues.id },\n          transaction,\n        }),\n      ),\n    ).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't find or create tag\", {\n        files: uploaded,\n      });\n    });\n\n    const createInfos = [];\n    for (let i = 0; i < infosArr.length; i += 2) {\n      const info = infosArr[i]!;\n      const infoAr = infosArr[i + 1]!;\n\n      createInfos.push({ info, infoAr, productId: product.dataValues.id });\n    }\n\n    const uploadedImages = uploaded.filter((upload) => upload.endsWith(\".webp\"));\n\n    await Promise.all([\n      ProductImage.bulkCreate(\n        uploadedImages.map((image) => ({ image, productId: product.dataValues.id })),\n        { fields: [\"image\", \"productId\"], transaction },\n      ),\n      ProductInfo.bulkCreate(createInfos, { fields: [\"info\", \"infoAr\", \"productId\"], transaction }),\n      ProductColor.bulkCreate(\n        colorsArr.map((color) => ({ color, productId: product.dataValues.id })),\n        { fields: [\"color\", \"productId\"], transaction },\n      ),\n      ProductSize.bulkCreate(\n        sizesArr.map((size) => ({ size, productId: product.dataValues.id })),\n        { fields: [\"size\", \"productId\"], transaction },\n      ),\n      ProductTag.bulkCreate(\n        tagsId.map(([tagId]) => ({ tagId: tagId.dataValues.id, productId: product.dataValues.id })),\n        { fields: [\"tagId\", \"productId\"], transaction },\n      ),\n    ]).catch((e) => {\n      throw APIError.server(StatusCodes.INTERNAL_SERVER_ERROR, e?.message ?? \"Can't complete product promises\", {\n        files: uploaded,\n      });\n    });\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  async remove(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const product = res.locals.product!;\n    await product.destroy({ force: false, transaction });\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { service } from \"../../../../service/index.js\";\n\nexport default {\n  async users(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { stats } = service.admin;\n    const users = await stats.users(transaction);\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: { users },\n    });\n  },\n  async stores(\n    _req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { stats } = service.admin;\n    const stores = await stats.stores(transaction);\n    res.status(StatusCodes.OK).json({\n      success: true,\n      data: { stores },\n    });\n  },\n  async orders() {},\n  async products() {},\n  async categories() {},\n} as const;\n", "import stats from \"./stats.js\";\n\nexport default {\n  stats,\n} as const;\n", "import store from \"./store/index.js\";\nimport admin from \"./admin/index.js\";\n\nexport default { store, admin } as const;\n", "import auth from \"./auth.js\";\nimport user from \"./user/index.js\";\nimport stores from \"./stores.js\";\nimport dashboard from \"./dashboard/index.js\";\n\nexport default { auth, user, stores, dashboard } as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { schema } from \"../../schema/index.js\";\nimport { model } from \"../../model/index.js\";\nimport { APIError } from \"../../error/index.js\";\nimport { util } from \"../../util/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { lib } from \"../../lib/index.js\";\nimport { config } from \"../../config/index.js\";\n\nconst { COOKIE } = KEYS;\nconst { Email } = schema.req.security.access;\n\nexport default {\n  async email(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Email;\n    const { User } = model.db;\n    const { email } = Body.parse(req.body);\n\n    const user = await User.findOne({\n      attributes: [\"id\"],\n      where: { email },\n      limit: 1,\n      transaction,\n    });\n    if (user === null) throw APIError.controller(StatusCodes.NOT_FOUND, \"user not found\");\n\n    const { access } = util;\n    const { token, code, key, iv } = access.token(user.dataValues.id);\n\n    req.session.access = { key, iv };\n    // res.setHeader(HTTP.HEADERS.ACCESS_TOKEN, token);\n    const { cookieOptions } = config.options;\n    res.cookie(COOKIE.TOKEN, token, cookieOptions);\n\n    //TODO: Send code in email (template)\n    const { Mail } = lib;\n    await new Mail(email, \"access code\", `Code: ${code}`).send();\n\n    res.status(StatusCodes.CREATED).json({\n      success: true,\n    });\n  },\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../types/res.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { model } from \"../../../model/index.js\";\nimport { schema } from \"../../../schema/index.js\";\nimport { APIError } from \"../../../error/index.js\";\n\nconst { Email } = schema.req.security.validate.user;\n\nexport default {\n  async email(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Email;\n    const { email } = Body.parse(req.body);\n    const { User } = model.db;\n\n    const user = await User.findOne({\n      attributes: [\"email\"],\n      where: { email },\n      limit: 1,\n      plain: true,\n      paranoid: false,\n      transaction,\n    });\n    if (user !== null) throw APIError.controller(StatusCodes.CONFLICT, \"Email already exists\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import type { NextFunction, Request, Response } from \"express\";\nimport type { Transaction } from \"sequelize\";\nimport type { TResponse } from \"../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { schema } from \"../../../schema/index.js\";\nimport { model } from \"../../../model/index.js\";\nimport { APIError } from \"../../../error/index.js\";\n\nconst { Name, Category: CategorySchema, Product: ProductSchema } = schema.req.security.validate.store;\n\nexport default {\n  async name(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = Name;\n    const { name } = Body.parse(req.body);\n    const { Store } = model.db;\n\n    const store = await Store.findOne({\n      attributes: [\"name\"],\n      where: { name },\n      limit: 1,\n      plain: true,\n      paranoid: false,\n      transaction,\n    });\n    if (store !== null) throw APIError.controller(StatusCodes.CONFLICT, \"Store name already exists\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  async category(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = CategorySchema;\n    const { name, nameAr } = Body.parse(req.body);\n\n    const store = res.locals.store!;\n    const { Category } = model.db;\n\n    const [category, categoryAr] = await Promise.all([\n      Category.findOne({\n        attributes: [\"name\"],\n        where: { name, storeId: store.dataValues.id },\n        limit: 1,\n        plain: true,\n        paranoid: false,\n        transaction,\n      }),\n      Category.findOne({\n        attributes: [\"nameAr\"],\n        where: { nameAr, storeId: store.dataValues.id },\n        limit: 1,\n        plain: true,\n        paranoid: false,\n        transaction,\n      }),\n    ]);\n\n    if (category !== null) throw APIError.controller(StatusCodes.CONFLICT, \"Category name already exists\");\n    else if (categoryAr !== null)\n      throw APIError.controller(StatusCodes.CONFLICT, \"Category arabic name already exists\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n  async product(\n    req: Request,\n    res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>,\n    _next: NextFunction,\n    transaction: Transaction,\n  ) {\n    const { Body } = ProductSchema;\n    const { title, titleAr } = Body.parse(req.body);\n\n    const { Product } = model.db;\n\n    const [product, productAr] = await Promise.all([\n      Product.findOne({\n        attributes: [\"title\"],\n        where: { title },\n        limit: 1,\n        plain: true,\n        paranoid: false,\n        transaction,\n      }),\n      Product.findOne({\n        attributes: [\"titleAr\"],\n        where: { titleAr },\n        limit: 1,\n        plain: true,\n        paranoid: false,\n        transaction,\n      }),\n    ]);\n\n    if (product !== null) throw APIError.controller(StatusCodes.CONFLICT, \"Product name already exists\");\n    else if (productAr !== null) throw APIError.controller(StatusCodes.CONFLICT, \"Product arabic name already exists\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import type { Request, Response } from \"express\";\nimport type { TResponse } from \"../../../types/index.js\";\nimport { StatusCodes } from \"http-status-codes\";\nimport { KEYS } from \"../../../constant/index.js\";\nimport { APIError } from \"../../../error/index.js\";\nimport { util } from \"../../../util/index.js\";\nimport { schema } from \"../../../schema/index.js\";\n\nconst { COOKIE } = KEYS;\nconst { Token } = schema.req.security.validate.access;\n\nexport default {\n  async token(req: Request, res: Response<TResponse[\"Body\"][\"Success\"], TResponse[\"Locals\"]>) {\n    const token = `${req.cookies?.[COOKIE.TOKEN] ?? \"\"}`;\n    if (token.length === 0) throw APIError.controller(StatusCodes.BAD_REQUEST, \"Empty access token\");\n\n    const key = req.session.access?.key ?? \"\";\n    if (key.length === 0) throw APIError.server(StatusCodes.FORBIDDEN, \"Invalid access key\");\n\n    const iv = req.session.access?.iv ?? \"\";\n    if (iv.length === 0) throw APIError.server(StatusCodes.FORBIDDEN, \"Invalid access iv\");\n\n    const { Body } = Token;\n    const { code } = Body.parse(req.body);\n\n    const { access } = util;\n    const isValid = access.verify(token, key, iv, code);\n    if (!isValid.valid) throw APIError.controller(StatusCodes.FORBIDDEN, \"Invalid access token\");\n\n    res.status(StatusCodes.OK).json({ success: true });\n  },\n} as const;\n", "import user from \"./user.js\";\nimport store from \"./store.js\";\nimport access from \"./access.js\";\n\nexport default { access, user, store } as const;\n", "import access from \"./access.js\";\nimport validate from \"./validate/index.js\";\n\nexport default { access, validate } as const;\n", "import api from \"./api/index.js\";\nimport security from \"./security/index.js\";\n\nexport const controller = { api, security } as const;\n", "import { Router } from \"express\";\nimport { util } from \"../../../util/index.js\";\nimport { controller } from \"../../../controller/index.js\";\nimport { config } from \"../../../config/index.js\";\nimport { KEYS } from \"../../../constant/index.js\";\nimport { orders } from \"./orders.js\";\n\nconst { IMAGE } = KEYS.UPLOAD;\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { profile, setting, becomeSeller, update, remove } = controller.api.user;\n\nexport const user = Router();\n\nuser.get(\"/\", handleAsync(profile));\n\nuser.patch(\"/setting\", handleAsync(upload.none()), handleAsync(setting));\n\nuser.post(\"/become-seller\", handleAsync(upload.single(IMAGE)), handleAsync(becomeSeller));\n\nuser.put(\"/\", handleAsync(upload.single(IMAGE)), handleAsync(update));\n\nuser.delete(\"/\", handleAsync(remove));\n\nuser.use(\"/orders\", orders);\n", "import { Router } from \"express\";\nimport { KEYS } from \"../../../constant/index.js\";\nimport { util } from \"../../../util/index.js\";\nimport { controller } from \"../../../controller/index.js\";\nimport { middleware } from \"../../../middleware/index.js\";\nimport { config } from \"../../../config/index.js\";\n\nconst { upload } = config;\nconst { PARAMS } = KEYS.REQUEST;\nconst { checkOrder } = middleware.fn;\nconst { handleAsync } = util.fn;\nconst { all, order, create, patch, remove } = controller.api.user.orders;\n\nexport const orders = Router();\n\norders.get(\"/\", handleAsync(all));\n\norders.get(`/:${PARAMS.ID.ORDER}`, handleAsync(checkOrder), handleAsync(order));\n\norders.post(\"/\", handleAsync(upload.none()), handleAsync(create));\n\norders.patch(`/:${PARAMS.ID.ORDER}`, handleAsync(checkOrder), handleAsync(patch));\n\norders.delete(`/:${PARAMS.ID.ORDER}`, handleAsync(checkOrder), handleAsync(remove));\n", "import { Router } from \"express\";\nimport { util } from \"../../util/index.js\";\nimport { middleware } from \"../../middleware/index.js\";\nimport { KEYS } from \"../../constant/index.js\";\nimport { controller } from \"../../controller/index.js\";\n\nconst { PARAMS } = KEYS.REQUEST;\nconst { handleAsync } = util.fn;\nconst { checkStore, checkCategory, checkProduct } = middleware.api.store;\nconst { search, all, store, category, product } = controller.api.stores;\n\nexport const stores = Router();\n\nstores.get(\"/search\", handleAsync(search));\n\nstores.get(\"/\", handleAsync(all));\n\nstores.get(\"/categories\");\n\nstores.get(\"/products\");\n\nstores.get(`/:${PARAMS.ID.STORE}`, handleAsync(checkStore), handleAsync(store));\n\nstores.get(\n  `/:${PARAMS.ID.STORE}/:${PARAMS.ID.CATEGORY}`,\n  handleAsync(checkStore),\n  handleAsync(checkCategory),\n  handleAsync(category),\n);\n\nstores.get(\n  `/:${PARAMS.ID.STORE}/:${PARAMS.ID.CATEGORY}/:${PARAMS.ID.PRODUCT}`,\n  handleAsync(checkStore),\n  handleAsync(checkCategory),\n  handleAsync(checkProduct),\n  handleAsync(product),\n);\n", "import { Router } from \"express\";\n\nimport { store } from \"./store/index.js\";\nimport { admin } from \"./admin/index.js\";\nimport { util } from \"../../../util/index.js\";\nimport { middleware } from \"../../../middleware/index.js\";\n\nconst { handleAsync } = util.fn;\nconst {\n  api: {\n    store: { isSeller },\n    admin: { isAdmin },\n  },\n} = middleware;\n\nexport const dashboard = Router();\n\ndashboard.use(\"/store\", handleAsync(isSeller), store);\n\ndashboard.use(\"/admin\", handleAsync(isAdmin), admin);\n", "import { Router } from \"express\";\nimport { stats } from \"./stats.js\";\nimport { categories } from \"./categories.js\";\nimport { products } from \"./products.js\";\nimport { util } from \"../../../../util/index.js\";\nimport { config } from \"../../../../config/index.js\";\nimport { controller } from \"../../../../controller/index.js\";\nimport { KEYS } from \"../../../../constant/index.js\";\n\nconst { upload } = config;\nconst { IMAGE } = KEYS.UPLOAD;\nconst { handleAsync } = util.fn;\nconst { profile, update, remove } = controller.api.dashboard.store;\n\nexport const store = Router();\n\nstore.get(\"/\", handleAsync(profile));\n\nstore.put(\"/\", handleAsync(upload.single(IMAGE)), handleAsync(update));\n\nstore.delete(\"/\", handleAsync(remove));\n\nstore.use(\"/stats\", stats);\n\nstore.use(\"/categories\", categories);\n\nstore.use(\"/products\", products);\n", "import { Router } from \"express\";\n\nexport const stats = Router();\n", "import { Router } from \"express\";\nimport { KEYS } from \"../../../../constant/index.js\";\nimport { util } from \"../../../../util/index.js\";\nimport { controller } from \"../../../../controller/index.js\";\nimport { middleware } from \"../../../../middleware/index.js\";\nimport { config } from \"../../../../config/index.js\";\n\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst {\n  REQUEST: { PARAMS },\n  UPLOAD: { IMAGE },\n} = KEYS;\nconst { isCategoryOwner } = middleware.api.store;\nconst { all, category, create, update, remove } = controller.api.dashboard.store.categories;\n\nexport const categories = Router();\n\ncategories.get(\"/\", handleAsync(all));\n\ncategories.get(`/:${PARAMS.ID.CATEGORY}`, handleAsync(isCategoryOwner), handleAsync(category));\n\ncategories.post(\"/\", handleAsync(upload.single(IMAGE)), handleAsync(create));\n\ncategories.put(\n  `/:${PARAMS.ID.CATEGORY}`,\n  handleAsync(isCategoryOwner),\n  handleAsync(upload.single(IMAGE)),\n  handleAsync(update),\n);\n\ncategories.delete(`/:${PARAMS.ID.CATEGORY}`, handleAsync(isCategoryOwner), handleAsync(remove));\n", "import { Router } from \"express\";\nimport { KEYS } from \"../../../../constant/index.js\";\nimport { util } from \"../../../../util/index.js\";\nimport { middleware } from \"../../../../middleware/index.js\";\nimport { controller } from \"../../../../controller/index.js\";\nimport { config } from \"../../../../config/index.js\";\n\nconst { REQUEST } = KEYS;\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { isProductOwner } = middleware.api.store;\nconst { all, product, create, update, remove } = controller.api.dashboard.store.products;\n\nexport const products = Router();\n\nproducts.get(\"/\", handleAsync(all));\n\nproducts.get(`/:${REQUEST.PARAMS.ID.PRODUCT}`, handleAsync(isProductOwner), handleAsync(product));\n\nproducts.post(\n  \"/\",\n  handleAsync(upload.fields([{ name: \"models\", maxCount: 1 }, { name: \"images\" }])),\n  handleAsync(create),\n);\n\nproducts.put(`/:${REQUEST.PARAMS.ID.PRODUCT}`, handleAsync(isProductOwner), handleAsync(update));\n\nproducts.delete(`/:${REQUEST.PARAMS.ID.PRODUCT}`, handleAsync(isProductOwner), handleAsync(remove));\n", "import { Router } from \"express\";\nimport { stats } from \"./stats.js\";\n\nexport const admin = Router();\n\nadmin.use(\"/stats\", stats);\n", "import { Router } from \"express\";\nimport { controller } from \"../../../../controller/index.js\";\nimport { util } from \"../../../../util/index.js\";\n\nexport const stats = Router();\n\nconst { users, stores } = controller.api.dashboard.admin.stats;\nconst { handleAsync } = util.fn;\n\nstats.get(\"/users\", handleAsync(users));\n\nstats.get(\"/stores\", handleAsync(stores));\n", "import { Router } from \"express\";\nimport { access } from \"./access.js\";\nimport { validate } from \"./validate/index.js\";\n\nexport const security = Router();\n\nsecurity.use(\"/validate\", validate);\nsecurity.use(\"/access\", access);\n", "import { Router } from \"express\";\nimport { util } from \"../../util/index.js\";\nimport { controller } from \"../../controller/index.js\";\nimport { config } from \"../../config/index.js\";\n\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { email } = controller.security.access;\n\nexport const access = Router();\n\naccess.post(\"/email\", handleAsync(upload.none()), handleAsync(email));\n", "import { Router } from \"express\";\nimport { user } from \"./user.js\";\nimport { store } from \"./store.js\";\nimport { access } from \"./access.js\";\nimport { util } from \"../../../util/index.js\";\nimport { middleware } from \"../../../middleware/index.js\";\n\nexport const validate = Router();\n\nconst { handleAsync } = util.fn;\nconst { isAuthenticated } = middleware.fn;\n\nvalidate.use(\"/access\", access);\nvalidate.use(\"/user\", user);\nvalidate.use(\"/store\", handleAsync(isAuthenticated), store);\n", "import { Router } from \"express\";\nimport { controller } from \"../../../controller/index.js\";\nimport { config } from \"../../../config/index.js\";\nimport { util } from \"../../../util/index.js\";\nimport { middleware } from \"../../../middleware/index.js\";\n\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { notAuthenticated } = middleware.fn;\nconst { email } = controller.security.validate.user;\n\nexport const user = Router();\n\nuser.post(\"/email\", handleAsync(notAuthenticated), handleAsync(upload.none()), handleAsync(email));\n", "import { Router } from \"express\";\nimport { config } from \"../../../config/index.js\";\nimport { util } from \"../../../util/index.js\";\nimport { controller } from \"../../../controller/index.js\";\nimport { middleware } from \"../../../middleware/index.js\";\n\nconst { upload } = config;\nconst { handleAsync } = util.fn;\nconst { isSeller } = middleware.api.store;\nconst { name, category, product } = controller.security.validate.store;\n\nexport const store = Router();\n\nstore.post(\"/name\", handleAsync(upload.none()), handleAsync(name));\n\nstore.post(\"/category\", handleAsync(isSeller), handleAsync(upload.none()), handleAsync(category));\n\nstore.post(\"/product\", handleAsync(isSeller), handleAsync(upload.none()), handleAsync(product));\n", "import { Router } from \"express\";\nimport { util } from \"../../../util/index.js\";\nimport { controller } from \"../../../controller/index.js\";\nimport { config } from \"../../../config/index.js\";\n\nexport const access = Router();\n\nconst { token } = controller.security.validate.access;\nconst { handleAsync } = util.fn;\nconst { upload } = config;\n\naccess.post(\"/token\", handleAsync(upload.none()), handleAsync(token));\n"],
  "mappings": "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",
  "names": ["express", "compression", "hpp", "session", "morgan", "helmet", "timeout", "methodOverride", "cookieParser", "cors", "responseTime", "requestIp", "StatusCodes", "cookieEncrypt", "path", "randomBytes", "createCipheriv", "createDecipheriv", "db_exports", "__export", "Category", "CategoryViewer", "Order", "Product", "ProductColor", "ProductImage", "ProductInfo", "ProductRating", "ProductSize", "ProductTag", "ProductViewer", "ResponseTime", "ServerError", "Store", "StoreLink", "StoreSetting", "StoreViewer", "Tag", "User", "UserSetting", "z", "IdInt", "z", "IdUUID", "UserId", "NullUserId", "StoreId", "CategoryId", "ProductId", "TagId", "Ip", "User", "UserSetting", "enum_exports", "Store", "StoreSetting", "StoreLink", "StoreViewer", "Category", "CategoryViewer", "Product", "ProductInfo", "ProductImage", "ProductRating", "ProductSize", "ProductColor", "ProductViewer", "Tag", "ProductTag", "Order", "ResponseTime", "ServerError", "keys_default", "id_exports", "__export", "CategoryId", "OrderId", "ProductId", "StoreId", "z", "PARAMS", "keys_default", "MIN", "values_default", "StoreId", "z", "CategoryId", "ProductId", "OrderId", "session_exports", "__export", "Access", "Csrf", "Passport", "Session", "z", "z", "MIN", "values_default", "validators_default", "z", "z", "MAX", "MIN", "PASSWORD", "values_default", "auth_default", "z", "enum_exports", "z", "MIN", "LIMIT", "values_default", "store_default", "z", "StoreId", "z", "z", "orders_default", "z", "ProductId", "MIN", "MAX", "values_default", "user_default", "z", "enum_exports", "orders_default", "z", "z", "MIN", "MAX", "LIMIT", "values_default", "categories_default", "z", "z", "QUALITY", "enum_exports", "MIN", "MAX", "values_default", "products_default", "z", "MIN", "MAX", "values_default", "store_default", "z", "categories_default", "products_default", "admin_default", "dashboard_default", "store_default", "admin_default", "api_default", "auth_default", "user_default", "store_default", "dashboard_default", "z", "PASSWORD", "MIN", "values_default", "access_default", "z", "z", "MIN", "values_default", "user_default", "z", "z", "MIN", "MAX", "values_default", "store_default", "z", "z", "MIN", "values_default", "access_default", "z", "validate_default", "access_default", "user_default", "store_default", "security_default", "access_default", "validate_default", "req_default", "api_default", "security_default", "schema", "db_exports", "id_exports", "session_exports", "req_default", "validators_default", "getReasonPhrase", "StatusCodes", "readFile", "writeFile", "path", "ffmpeg", "sharp", "fileType", "StatusCodes", "toBoolean", "schema", "FileTmp", "file", "ext", "randomName", "filePath", "path", "writeFile", "readFile", "FileConverter", "files", "fileType", "resolve", "reject", "ffmpeg", "err", "metadata", "image", "sharp", "ffmpegPath", "ffprobePath", "video", "input", "output", "audio", "model", "buffer", "type", "EXTENSIONS", "converted", "APIError", "StatusCodes", "typePromises", "filterTypes", "rm", "writeFile", "randomUUID", "path", "StatusCodes", "PUBLIC", "UPLOAD", "keys_default", "FileUploader", "files", "ext", "nowInSecond", "util", "randomUUID", "file", "APIError", "uri", "path", "fullPath", "writeFile", "uris", "rm", "file_default", "FileConverter", "FileUploader", "createTransport", "Mail", "to", "subject", "html", "env_default", "createTransport", "error", "lib", "file_default", "Mail", "db_exports", "__export", "Category", "CategoryViewer", "Order", "Product", "ProductColor", "ProductImage", "ProductInfo", "ProductRating", "ProductSize", "ProductTag", "ProductViewer", "ResponseTime", "ServerError", "Store", "StoreLink", "StoreSetting", "StoreViewer", "Tag", "User", "UserSetting", "DataTypes", "ID", "TABLES", "MODELS", "keys_default", "MAX", "values_default", "User", "DataTypes", "user", "Store", "UserSetting", "enum_exports", "store", "StoreLink", "Category", "StoreSetting", "StoreViewer", "category", "Product", "CategoryViewer", "product", "ProductInfo", "ProductImage", "ProductColor", "ProductSize", "ProductRating", "ProductTag", "ProductViewer", "Tag", "tag", "Order", "ResponseTime", "ServerError", "fn_exports", "__export", "tableIndex", "QueryTypes", "isUUID", "schema", "tableIndex", "table", "id", "parsedId", "QueryTypes", "user_exports", "__export", "order", "orders", "QueryTypes", "LENGTH", "values_default", "ORDER_STATUS", "enum_exports", "isUUID", "schema", "order", "orderId", "parsedId", "QueryTypes", "orders", "userId", "filter", "offset", "category_exports", "__export", "withProductsCount", "QueryTypes", "isUUID", "schema", "withProductsCount", "storeId", "desc", "parsedId", "QueryTypes", "query_default", "user_exports", "category_exports", "model", "db_exports", "fn_exports", "query_default", "toString", "schema", "BaseError", "_BaseError", "statusCode", "message", "handler", "isOperational", "rollback", "getReasonPhrase", "error", "err", "newError", "StatusCodes", "Mail", "FileUploader", "lib", "ServerError", "model", "files", "env_default", "APIError", "StatusCodes", "isUUID", "schema", "KEY_LENGTH", "IV_LENGTH", "ALGORITHM", "access", "id", "APIError", "encryptData", "key", "randomBytes", "iv", "cipher", "createCipheriv", "token", "stringIv", "stringKey", "code", "encrypted", "codeKey", "codeIv", "bufferKey", "bufferIv", "decipher", "createDecipheriv", "hashSync", "genSaltSync", "compareSync", "bcrypt", "str", "hash", "Token", "csrf", "token", "secret", "jsonwebtoken", "jwt", "data", "expiresIn", "values_default", "jsonwebtoken", "env_default", "token", "payload", "fn_exports", "__export", "getHeader", "handleAsync", "nowInSecond", "MulterError", "ZodError", "StatusCodes", "handleAsync", "fn", "req", "res", "next", "transaction", "error", "BaseError", "status", "StatusCodes", "message", "ZodError", "MulterError", "nowInSecond", "add", "values_default", "getHeader", "headers", "key", "util", "access", "bcrypt", "csrf", "jwt", "fn_exports", "multer", "upload", "tmp", "tmp_default", "SessionStore", "rateLimit", "LimiterStore", "URI", "env_default", "COLLECTIONS", "keys_default", "TIME", "values_default", "app_default", "rateLimit", "LimiterStore", "SessionStore", "swaggerUi", "swaggerJsdoc", "path", "PACKAGE", "values_default", "APIs_PATH", "options", "swagger_default", "json", "swaggerJsdoc", "ui", "swaggerUi", "options_exports", "__export", "cookieOptions", "config", "upload", "db_default", "tmp_default", "app_default", "swagger_default", "options_exports", "Router", "Router", "Router", "user_default", "StatusCodes", "StoreId", "CategoryId", "ProductId", "schema", "store_default", "req", "res", "next", "transaction", "storeId", "Store", "model", "store", "APIError", "StatusCodes", "categoryId", "Category", "category", "productId", "Product", "product", "user", "categories", "categoriesId", "admin_default", "_req", "_res", "next", "api_default", "user_default", "store_default", "admin_default", "StatusCodes", "COOKIE", "keys_default", "security_default", "req", "_res", "next", "transaction", "token", "APIError", "StatusCodes", "key", "iv", "Body", "schema", "code", "password", "confirmPassword", "access", "util", "hasAccess", "User", "model", "user", "fn_exports", "__export", "checkOrder", "isAuthenticated", "isSeller", "notAuthenticated", "StatusCodes", "OrderId", "schema", "isAuthenticated", "req", "_res", "next", "APIError", "StatusCodes", "notAuthenticated", "checkOrder", "res", "transaction", "user", "orderId", "Order", "model", "order", "isSeller", "Store", "store", "middleware", "api_default", "security_default", "fn_exports", "StatusCodes", "serialize", "StatusCodes", "passport", "LocalStrategy", "StatusCodes", "localStrategy", "LocalStrategy", "email", "password", "done", "User", "model", "user", "APIError", "compare", "util", "BearerStrategy", "StatusCodes", "bearerStrategy", "BearerStrategy", "token", "done", "verify", "util", "userId", "APIError", "StatusCodes", "isUUID", "schema", "parsedId", "User", "model", "user", "isUUID", "schema", "passport", "user", "done", "id", "userId", "User", "model", "localStrategy", "bearerStrategy", "authenticate", "strategy", "req", "res", "next", "resolve", "reject", "passport", "err", "user", "info", "toBoolean", "schema", "APIError", "StatusCodes", "COOKIE", "keys_default", "SignUp", "VerifyEmail", "ForgotPassword", "schema", "auth_default", "req", "res", "_next", "transaction", "Body", "username", "email", "password", "theme", "locale", "User", "UserSetting", "model", "APIError", "StatusCodes", "image", "FileConverter", "FileUploader", "lib", "converter", "uploaded", "hash", "util", "user", "next", "authenticate", "sign", "Store", "setting", "store", "options", "config", "serialize", "err", "toBoolean", "Query", "token", "verify", "id", "isUUID", "parsedId", "_", "StatusCodes", "StatusCodes", "store_exports", "__export", "all", "QueryTypes", "product_exports", "__export", "all", "one", "orders", "viewers", "QueryTypes", "storeId", "transaction", "id", "productId", "category_exports", "__export", "all", "one", "products", "QueryTypes", "storeId", "transaction", "id", "categoryId", "order_exports", "__export", "user_exports", "user_exports", "__export", "all", "one", "QueryTypes", "userId", "transaction", "id", "stats_exports", "__export", "stores", "users", "QueryTypes", "transaction", "admin_default", "stats_exports", "service", "store_exports", "category_exports", "product_exports", "order_exports", "admin_default", "Create", "Update", "schema", "orders_default", "req", "res", "_next", "transaction", "user", "all", "service", "orders", "StatusCodes", "localOrder", "one", "order", "Body", "Order", "model", "ORDER_STATUS", "APIError", "Query", "quantity", "_req", "Setting", "BecomeSeller", "Update", "schema", "user_default", "req", "res", "_next", "transaction", "user", "UserSetting", "Store", "model", "setting", "store", "StatusCodes", "Body", "theme", "locale", "disableAnimations", "forceTheme", "_", "name", "APIError", "image", "FileConverter", "FileUploader", "lib", "converted", "uploaded", "StoreSetting", "username", "newImage", "orders_default", "Op", "StatusCodes", "Search", "Home", "schema", "DB", "keys_default", "stores_default", "req", "res", "_next", "transaction", "Query", "s", "limit", "Store", "Category", "Product", "ProductImage", "model", "keys", "Op", "products", "categories", "stores", "key", "StatusCodes", "product", "dataValues", "_req", "Params", "storeId", "user", "StoreViewer", "store", "categoriesId", "category", "CategoryViewer", "localProduct", "ProductViewer", "service", "Op", "StatusCodes", "StatusCodes", "Create", "Update", "schema", "category", "service", "categories_default", "_req", "res", "_next", "transaction", "store", "categories", "StatusCodes", "localCategory", "products", "one", "req", "Body", "name", "nameAr", "image", "APIError", "FileConverter", "FileUploader", "lib", "converted", "uploaded", "Category", "model", "newImage", "StatusCodes", "product", "service", "Create", "Update", "schema", "products_default", "_req", "res", "_next", "transaction", "store", "products", "StatusCodes", "localProduct", "one", "req", "Body", "title", "titleAr", "description", "descriptionAr", "quality", "stock", "price", "discount", "categoryId", "infos", "tags", "sizes", "colors", "files", "APIError", "FileConverter", "FileUploader", "lib", "models", "images", "converted", "model", "image", "uploaded", "Product", "ProductColor", "ProductImage", "ProductSize", "ProductInfo", "ProductTag", "Tag", "file", "e", "infosArr", "info", "sizesArr", "size", "tagsArr", "tag", "colorsArr", "color", "tagsId", "createInfos", "i", "infoAr", "uploadedImages", "upload", "tagId", "deletedImages", "Update", "schema", "store_default", "_req", "res", "store", "Category", "Product", "model", "categories", "products", "Op", "category", "StatusCodes", "req", "_next", "transaction", "Body", "name", "APIError", "newImage", "image", "FileConverter", "FileUploader", "lib", "converted", "uploaded", "categories_default", "products_default", "StatusCodes", "stats_default", "_req", "res", "_next", "transaction", "stats", "service", "users", "StatusCodes", "stores", "admin_default", "stats_default", "dashboard_default", "store_default", "admin_default", "api_default", "auth_default", "user_default", "stores_default", "dashboard_default", "StatusCodes", "COOKIE", "keys_default", "Email", "schema", "access_default", "req", "res", "_next", "transaction", "Body", "User", "model", "email", "user", "APIError", "StatusCodes", "access", "util", "token", "code", "key", "iv", "cookieOptions", "config", "Mail", "lib", "StatusCodes", "Email", "schema", "user_default", "req", "res", "_next", "transaction", "Body", "email", "User", "model", "APIError", "StatusCodes", "StatusCodes", "Name", "CategorySchema", "ProductSchema", "schema", "store_default", "req", "res", "_next", "transaction", "Body", "name", "Store", "model", "APIError", "StatusCodes", "nameAr", "store", "Category", "category", "categoryAr", "title", "titleAr", "Product", "product", "productAr", "StatusCodes", "COOKIE", "keys_default", "Token", "schema", "access_default", "req", "res", "token", "APIError", "StatusCodes", "key", "iv", "Body", "code", "access", "util", "validate_default", "access_default", "user_default", "store_default", "security_default", "access_default", "validate_default", "controller", "api_default", "security_default", "upload", "config", "handleAsync", "util", "UPLOAD", "keys_default", "isAuthenticated", "notAuthenticated", "access", "middleware", "signUp", "signIn", "signOut", "me", "verifyEmail", "forgotPassword", "controller", "auth", "Router", "Router", "Router", "upload", "config", "PARAMS", "keys_default", "checkOrder", "middleware", "handleAsync", "util", "all", "order", "create", "patch", "remove", "controller", "orders", "Router", "IMAGE", "keys_default", "upload", "config", "handleAsync", "util", "profile", "setting", "becomeSeller", "update", "remove", "controller", "user", "Router", "orders", "Router", "PARAMS", "keys_default", "handleAsync", "util", "checkStore", "checkCategory", "checkProduct", "middleware", "search", "all", "store", "category", "product", "controller", "stores", "Router", "Router", "Router", "Router", "stats", "Router", "upload", "config", "handleAsync", "util", "PARAMS", "IMAGE", "keys_default", "isCategoryOwner", "middleware", "all", "category", "create", "update", "remove", "controller", "categories", "Router", "Router", "REQUEST", "keys_default", "upload", "config", "handleAsync", "util", "isProductOwner", "middleware", "all", "product", "create", "update", "remove", "controller", "products", "Router", "upload", "config", "IMAGE", "keys_default", "handleAsync", "util", "profile", "update", "remove", "controller", "store", "Router", "stats", "categories", "products", "Router", "Router", "stats", "Router", "users", "stores", "controller", "handleAsync", "util", "admin", "Router", "stats", "handleAsync", "util", "isSeller", "isAdmin", "middleware", "dashboard", "Router", "store", "admin", "isAuthenticated", "middleware", "handleAsync", "util", "api", "Router", "auth", "user", "stores", "dashboard", "Router", "Router", "upload", "config", "handleAsync", "util", "email", "controller", "access", "Router", "Router", "Router", "upload", "config", "handleAsync", "util", "notAuthenticated", "middleware", "email", "controller", "user", "Router", "Router", "upload", "config", "handleAsync", "util", "isSeller", "middleware", "name", "category", "product", "controller", "store", "Router", "Router", "access", "Router", "token", "controller", "handleAsync", "util", "upload", "config", "validate", "Router", "handleAsync", "util", "isAuthenticated", "middleware", "access", "user", "store", "security", "Router", "validate", "access", "router", "Router", "api", "security", "app", "express", "env_default", "TIME", "PACKAGE", "values_default", "COOKIE", "HTTP", "keys_default", "errorhandler", "tmp", "initLimiter", "initSession", "swagger", "configOptions", "config", "docs", "timeout", "responseTime", "req", "res", "time", "RESPONSE_TIME", "method", "path", "statusCode", "ResponseTime", "model", "nowInSecond", "util", "cors", "origin", "callback", "compression", "getHeader", "NO_COMPRESSION", "noCompressionHeader", "toBoolean", "schema", "methodOverride", "morgan", "cookieParser", "cookieEncrypt", "helmet", "hpp", "session", "passport", "requestIp", "router", "_req", "StatusCodes", "error", "_next", "BaseError", "app_default"]
}
