import{a as B,b as k,c as A,d as S,e as je,f as ft,g as C,h as kr}from"./chunk-ETOO5GGJ.js";import bt from"express";import Zs from"compression";import td from"hpp";import rd from"express-session";import od from"morgan";import sd from"helmet";import ad from"connect-timeout";import id from"method-override";import nd from"cookie-parser";import cd from"cors";import dd from"response-time";import ld from"request-ip";import{StatusCodes as ea}from"http-status-codes";import ud from"cookie-encrypter";import pd from"path";import{randomBytes as Lo,createCipheriv as ai,createDecipheriv as ii}from"node:crypto";var qt={};B(qt,{Category:()=>da,CategoryViewer:()=>la,Order:()=>ga,Product:()=>ua,ProductColor:()=>Ea,ProductImage:()=>ma,ProductInfo:()=>pa,ProductRating:()=>fa,ProductSize:()=>Ra,ProductTag:()=>Ta,ProductViewer:()=>ya,ResponseTime:()=>Oa,ServerError:()=>Aa,Store:()=>aa,StoreLink:()=>na,StoreSetting:()=>ia,StoreViewer:()=>ca,Tag:()=>Ia,User:()=>oa,UserSetting:()=>sa});import{z as l}from"zod";var ee=l.object({id:l.number()}),Fe=l.object({id:l.string().uuid()}).strict(),Rt=l.object({userId:l.string().uuid()}).strict(),Mt=l.object({userId:l.string().uuid().nullable()}).strict(),ze=l.object({storeId:l.string().uuid()}).strict(),jr=l.object({categoryId:l.string().uuid()}).strict(),fe=l.object({productId:l.string().uuid()}).strict(),ra=l.object({tagId:l.string().uuid()}).strict(),vt=l.object({ip:l.string().nullable()}).strict(),oa=l.object({username:l.string(),email:l.string(),emailVerified:l.date().nullable(),password:l.string(),image:l.string()}).merge(Fe).strict(),sa=l.object({theme:l.enum(C.THEMES),locale:l.enum(C.LOCALE),forceTheme:l.boolean(),disableAnimations:l.boolean()}).merge(Rt).strict(),aa=l.object({name:l.string(),image:l.string()}).merge(Fe).merge(Rt).strict(),ia=l.object({}).merge(ze).strict(),na=l.object({platform:l.enum(C.PLATFORMS),link:l.string().url()}).merge(Fe).merge(ze).strict(),ca=l.object({}).merge(ee).merge(ze).merge(Mt).merge(vt).strict(),da=l.object({name:l.string(),nameAr:l.string(),image:l.string()}).merge(Fe).merge(ze).strict(),la=l.object({}).merge(ee).merge(jr).merge(Mt).merge(vt).strict(),ua=l.object({title:l.string(),titleAr:l.string(),description:l.string().nullable(),descriptionAr:l.string().nullable(),quality:l.enum(C.QUALITY),stock:l.number(),model:l.string().nullable(),price:l.number(),discount:l.number()}).merge(Fe).merge(jr).strict(),pa=l.object({info:l.string(),infoAr:l.string()}).merge(ee).merge(fe).strict(),ma=l.object({image:l.string()}).merge(ee).merge(fe).strict(),fa=l.object({rate:l.enum(C.RATING_STARS),comment:l.string()}).merge(Rt).merge(fe).strict(),Ra=l.object({size:l.string()}).merge(ee).merge(fe).strict(),Ea=l.object({color:l.string()}).merge(ee).merge(fe).strict(),ya=l.object({}).merge(ee).merge(fe).merge(Mt).merge(vt).strict(),Ia=l.object({tag:l.string()}).merge(Fe).merge(ze).strict(),Ta=l.object({}).merge(fe).merge(ra).strict(),ga=l.object({quantity:l.number(),totalPrice:l.number(),status:l.enum(C.ORDER_STATUS),processedAt:l.date().nullable(),doneAt:l.date().nullable(),canceledAt:l.date().nullable()}).merge(ee).merge(Rt).merge(fe).strict(),Oa=l.object({date:l.number(),time:l.number(),method:l.string(),path:l.string(),statusCode:l.number()}).merge(ee),Aa=l.object({message:l.string(),stack:l.string().nullable(),statusCode:l.number(),isOperational:l.boolean(),handler:l.enum(A.ERROR.HANDLERS)}).merge(ee);var kt={};B(kt,{CategoryId:()=>Na,OrderId:()=>Sa,ProductId:()=>Yt,StoreId:()=>Kt});import{z as Re}from"zod";var{REQUEST:{PARAMS:Et}}=A,{MIN:Bt}=S.LENGTH,Kt=Re.object({[Et.ID.STORE]:Re.string().trim().min(Bt.REQUIRED).uuid()}),Na=Re.object({[Et.ID.CATEGORY]:Re.string().trim().min(Bt.REQUIRED).uuid()}),Yt=Re.object({[Et.ID.PRODUCT]:Re.string().trim().min(Bt.REQUIRED).uuid()}),Sa=Re.object({[Et.ID.ORDER]:Re.coerce.number().min(0)});var jt={};B(jt,{Access:()=>Qr,Csrf:()=>zr,Passport:()=>Hr,Session:()=>wa});import{z as Ee}from"zod";var zr=Ee.object({secret:Ee.string().trim().min(1)}).strict().optional(),Hr=Ee.object({user:Ee.string().trim().min(1).uuid()}).strict().optional(),Qr=Ee.object({key:Ee.string().trim().min(1),iv:Ee.string().trim().min(1)}).strict().optional(),wa=Ee.object({csrf:zr,passport:Hr,access:Qr}).strict();import{z as we}from"zod";var{MIN:Pa}=S.LENGTH,$r={isUUID:we.string().trim().min(Pa.REQUIRED).uuid(),isNullish:we.unknown().nullish(),toBoolean:we.coerce.boolean(),toString:we.coerce.string(),toBigint:we.coerce.bigint(),toNumber:we.coerce.number(),toDate:we.coerce.date()};import{z as te}from"zod";var{MAX:Jr,MIN:zt,PASSWORD:Wr}=S.LENGTH,Zr={SignUp:{Body:te.object({username:te.string().trim().min(zt.REQUIRED).max(Jr.USER.USERNAME),email:te.string().trim().min(zt.REQUIRED).email().max(Jr.USER.EMAIL),password:te.string().trim().min(Wr),theme:te.enum(C.THEMES),locale:te.enum(C.LOCALE)})},VerifyEmail:{Query:te.object({token:te.string().trim().min(zt.REQUIRED).uuid()})},ForgotPassword:{Body:te.object({password:te.string().trim().min(Wr)})}};import{z as Ge}from"zod";var{MIN:yt,LIMIT:Xr}=S.LENGTH,eo={Search:{Query:Ge.object({s:Ge.string().trim().min(yt.REQUIRED),limit:Ge.coerce.number().min(yt.REQUIRED).default(Xr)})},Stores:{Query:Ge.object({lastStoreId:Ge.string().trim().min(yt.REQUIRED).uuid().optional(),limit:Ge.coerce.number().min(yt.REQUIRED).default(Xr)})},Home:{Params:Kt}};import{z as se}from"zod";import{z as Pe}from"zod";var to={Create:{Body:Pe.object({orders:Pe.array(Pe.object({quantity:Pe.coerce.number().min(0),totalPrice:Pe.coerce.number().min(0)}).merge(Yt))})},Update:{Query:Pe.object({quantity:Pe.coerce.number().min(1)})}};var{MIN:ro,MAX:oo}=S.LENGTH,so={Setting:{Body:se.object({theme:se.enum(C.THEMES),locale:se.enum(C.LOCALE),forceTheme:se.coerce.boolean(),disableAnimations:se.coerce.boolean()})},BecomeSeller:{Body:se.object({name:se.string().trim().min(ro.REQUIRED).max(oo.STORE.NAME)})},Update:{Body:se.object({username:se.string().trim().min(ro.REQUIRED).max(oo.USER.USERNAME)})},orders:to};import{z as uo}from"zod";import{z as ae}from"zod";var{MIN:It,MAX:Tt,LIMIT:ha}=S.LENGTH,ao={All:{Query:ae.object({page:ae.coerce.number().min(1),limit:ae.coerce.number().min(1).default(ha)})},Create:{Body:ae.object({name:ae.string().trim().min(It.REQUIRED).max(Tt.CATEGORY.NAME),nameAr:ae.string().trim().min(It.REQUIRED).max(Tt.CATEGORY.NAME)})},Update:{Body:ae.object({name:ae.string().trim().min(It.REQUIRED).max(Tt.CATEGORY.NAME),nameAr:ae.string().trim().min(It.REQUIRED).max(Tt.CATEGORY.NAME)})}};import{z as h}from"zod";var{QUALITY:io}=C,{MIN:ie,MAX:ye}=S.LENGTH,no={Create:{Body:h.object({title:h.string().trim().min(ie.REQUIRED).max(ye.PRODUCT.TITLE),titleAr:h.string().trim().min(ie.REQUIRED).max(ye.PRODUCT.TITLE),description:h.string().trim().max(ye.PRODUCT.DESCRIPTION),descriptionAr:h.string().trim().max(ye.PRODUCT.DESCRIPTION),quality:h.enum(io),stock:h.coerce.number().min(ie.REQUIRED),price:h.coerce.number().min(ie.REQUIRED),discount:h.coerce.number().min(0).max(100),categoryId:h.string().trim().min(ie.REQUIRED).uuid(),infos:h.string().trim(),sizes:h.string().trim(),tags:h.string().trim(),colors:h.string().trim()})},Update:{Body:h.object({title:h.string().trim().min(ie.REQUIRED).max(ye.PRODUCT.TITLE),titleAr:h.string().trim().min(ie.REQUIRED).max(ye.PRODUCT.TITLE),description:h.string().trim().max(ye.PRODUCT.DESCRIPTION),descriptionAr:h.string().trim().max(ye.PRODUCT.DESCRIPTION),quality:h.enum(io),stock:h.coerce.number().min(0),price:h.coerce.number().min(ie.REQUIRED),discount:h.coerce.number().min(0).max(100),categoryId:h.string().trim().min(ie.REQUIRED).uuid(),deletedImages:h.string().trim(),infos:h.string().trim(),sizes:h.string().trim(),tags:h.string().trim(),colors:h.string().trim()})}};import{z as co}from"zod";var lo={Patch:{Query:co.object({status:co.enum(je)})}};var{MIN:Ua,MAX:Ca}=S.LENGTH,po={Update:{Body:uo.object({name:uo.string().trim().min(Ua.REQUIRED).max(Ca.STORE.NAME)})},categories:ao,products:no,orders:lo};var mo={};var fo={store:po,admin:mo};var Ro={auth:Zr,user:so,store:eo,dashboard:fo};import{z as Ve}from"zod";var{PASSWORD:Eo,MIN:ba}=S.LENGTH,yo={Email:{Middleware:{Body:Ve.object({code:Ve.string().length(6),password:Ve.string().trim().min(Eo),confirmPassword:Ve.string().trim().min(Eo)})},Body:Ve.object({email:Ve.string().trim().min(ba.REQUIRED).email()})}};import{z as Io}from"zod";var{MIN:Da}=S.LENGTH,To={Email:{Body:Io.object({email:Io.string().trim().min(Da.REQUIRED).email()})}};import{z as Ie}from"zod";var{MIN:He,MAX:Qe}=S.LENGTH,go={Name:{Body:Ie.object({name:Ie.string().trim().min(He.REQUIRED).max(Qe.STORE.NAME)})},Category:{Body:Ie.object({name:Ie.string().trim().min(He.REQUIRED).max(Qe.CATEGORY.NAME),nameAr:Ie.string().trim().min(He.REQUIRED).max(Qe.CATEGORY.NAME)})},Product:{Body:Ie.object({title:Ie.string().trim().min(He.REQUIRED).max(Qe.PRODUCT.TITLE),titleAr:Ie.string().trim().min(He.REQUIRED).max(Qe.PRODUCT.TITLE)})}};import{z as Oo}from"zod";var{MIN:xa}=S.LENGTH,Ao={Token:{Body:Oo.object({code:Oo.string().trim().min(xa.REQUIRED)})}};var No={access:Ao,user:To,store:go};var So={access:yo,validate:No};var wo={api:Ro,security:So};var E={db:qt,id:kt,session:jt,req:wo,validators:$r};import{getReasonPhrase as ri,StatusCodes as oi}from"http-status-codes";import{readFile as La,writeFile as _a}from"fs/promises";import Ht from"node:path";import $e from"fluent-ffmpeg";import Fa from"sharp";import Ga from"file-type";import{StatusCodes as Va}from"http-status-codes";var{toBoolean:Ma}=E.validators,Qt=class{constructor(){}randomFileName(){return Math.round(Date.now()*Math.random())}async bufferToFile(e,s){let r=this.randomFileName(),o=Ht.join(tmp.path,`${r}.${s}`);return await _a(o,e),o}async fileToBuffer(e){return La(e)}},Je=class extends Qt{constructor(...s){super();this.files=[];this.isFfmpegInit=!1;this.cleanTmp=!1;this.files=s}async format(s){return(await Ga.fromBuffer(s))?.ext??""}async ffprobeMetadata(s){return new Promise((r,o)=>{$e.ffprobe(s,(a,i)=>Ma.parse(a)?o(a):r(i))})}async toWebp(s){return Fa(s).webp({quality:100}).toBuffer()}async initFfmpeg(){if(this.isFfmpegInit)return;let[{path:s},{path:r}]=await Promise.all([import("@ffmpeg-installer/ffmpeg"),import("@ffprobe-installer/ffprobe")]);$e.setFfmpegPath(s),$e.setFfprobePath(r)}async toMp4(s,r){this.cleanTmp=!0;let o=await this.bufferToFile(s,r),a=Ht.join(tmp.path,`${this.randomFileName()}.mp4`);return new Promise((i,n)=>{$e(o).fps(30).videoCodec("libx264").audioCodec("aac").audioQuality(0).format("mp4").output(a).on("end",()=>{this.fileToBuffer(a).then(i).catch(n)}).on("error",n).run()})}async toMp3(s,r){this.cleanTmp=!0;let o=await this.bufferToFile(s,r),a=Ht.join(tmp.path,`${this.randomFileName()}.mp3`);return new Promise((i,n)=>{$e(o).audioCodec("libmp3lame").audioBitrate("128k").format("mp3").output(a).on("end",()=>{this.fileToBuffer(a).then(i).catch(n)}).on("error",n).run()})}async toGlb(s){return s}async fileType(s){let r=await this.format(s),o;if(ft.IMAGE.includes(r))o="image";else if(r==="glb")o="model";else if(ft.VIDEO.includes(r)){o="video";let a=await this.bufferToFile(s,r),i=await this.ffprobeMetadata(a);if(Math.floor(i.format.duration??1/0)>60)return null}else if(ft.AUDIO.includes(r)){o="audio";let a=await this.bufferToFile(s,r),i=await this.ffprobeMetadata(a);if(Math.floor(i.format.duration??1/0)>60)return null}else return null;return{buffer:s,type:o,originalExt:r}}async fileConvert(s){let r=s.map(async o=>{switch(o.type){case"image":o.buffer=await this.toWebp(o.buffer);break;case"video":await this.initFfmpeg(),o.buffer=await this.toMp4(o.buffer,o.originalExt);break;case"audio":await this.initFfmpeg(),o.buffer=await this.toMp3(o.buffer,o.originalExt);break;case"model":o.buffer=await this.toGlb(o.buffer);break;default:throw c.server(Va.INTERNAL_SERVER_ERROR,"File converter unhandled convert case")}return o});return Promise.all(r)}async convert(){let s=this.files.map(i=>this.fileType(i)),o=(await Promise.all(s)).filter(i=>i!==null),a=await this.fileConvert(o);return this.cleanTmp&&await tmp.cleanup(),a}};import{rm as va,writeFile as qa}from"node:fs/promises";import{randomUUID as Ba}from"node:crypto";import $t from"node:path";import{StatusCodes as Ka}from"http-status-codes";var{PUBLIC:Po,UPLOAD:Ya}=A.GLOBAL,We=class{constructor(...e){this.files=e}generateUniqueFileName(e){let{nowInSecond:s}=f.fn;return s()+"_"+Ba()+"."+e}async write(e){let s=null;switch(e.type){case"image":s="webp";break;case"video":s="mp4";break;case"audio":s="mp3";break;case"model":s="glb";break;default:throw c.server(Ka.INTERNAL_SERVER_ERROR,"File uploader unhandled write case (ext)")}let r=$t.join(Ya,e.type,this.generateUniqueFileName(s)),o=$t.join(__root,Po,r);return await qa(o,e.buffer),"/"+r}async upload(){return Promise.all(this.files.map(e=>this.write(e)))}static async remove(...e){await Promise.all(e.map(s=>va($t.join(__root,Po,s),{force:!0})))}};var ho={FileConverter:Je,FileUploader:We};import{createTransport as ka}from"nodemailer";var Ze=class{constructor(e,s,r){this.options={transport:{service:"gmail",auth:{user:k.MAIL.USER,pass:k.MAIL.PASS}}};this.transport=ka(this.options.transport),this.to=e,this.subject=s,this.html=r}async send(){await this.transport.sendMail({to:this.to,subject:this.subject,html:this.html}),this.transport.close()}static errorTemplate(e){return`
      <pre>
        ${JSON.stringify(e,null,4)}
      </pre>
    `}};var K={file:ho,Mail:Ze};var sr={};B(sr,{Category:()=>ne,CategoryViewer:()=>Zt,Order:()=>Ot,Product:()=>_,ProductColor:()=>rr,ProductImage:()=>er,ProductInfo:()=>Xt,ProductRating:()=>gt,ProductSize:()=>tr,ProductTag:()=>et,ProductViewer:()=>or,ResponseTime:()=>ja,ServerError:()=>za,Store:()=>Q,StoreLink:()=>Jt,StoreSetting:()=>Co,StoreViewer:()=>Wt,Tag:()=>Xe,User:()=>Y,UserSetting:()=>Uo});import{DataTypes as d}from"sequelize";var{ID:p,TABLES:G,MODELS:g}=A.DB,{MAX:L}=S.LENGTH,Y=sequelize.define(g.USER.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},username:{type:d.STRING(L.USER.USERNAME),allowNull:!1},email:{type:d.STRING(L.USER.EMAIL),allowNull:!1,unique:!0},emailVerified:{type:d.DATE,allowNull:!0},password:{type:d.STRING(L.USER.PASSWORD),allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1,unique:!0}},{tableName:G.USER.TABLE,timestamps:!0,paranoid:!0});Y.addHook("afterDestroy",async t=>{await Promise.all([Q.destroy({force:!1,where:{userId:t.dataValues.id}})])});var Uo=sequelize.define(g.USER.SETTING,{[p.FOREIGN_KEY.USER]:{primaryKey:!0,type:d.UUID,references:{model:Y,key:"id"}},theme:{type:d.ENUM(...C.THEMES),defaultValue:C.THEMES[0],allowNull:!1},locale:{type:d.ENUM(...C.LOCALE),defaultValue:C.LOCALE[0],allowNull:!1},forceTheme:{type:d.BOOLEAN,defaultValue:!1,allowNull:!1},disableAnimations:{type:d.BOOLEAN,defaultValue:!1,allowNull:!1}},{tableName:G.USER.SETTING,timestamps:!0});Y.hasOne(Uo,{foreignKey:p.FOREIGN_KEY.USER,as:g.USER.SETTING});var Q=sequelize.define(g.STORE.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},name:{type:d.STRING(L.STORE.NAME),unique:!0,allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!1,unique:!0,references:{model:Y,key:"id"}}},{tableName:G.STORE.TABLE,timestamps:!0,paranoid:!0});Y.hasOne(Q,{foreignKey:p.FOREIGN_KEY.USER,as:g.STORE.MODEL});Q.addHook("afterDestroy",async t=>{await Promise.all([Jt.destroy({force:!1,where:{storeId:t.dataValues.id}}),ne.destroy({force:!1,where:{storeId:t.dataValues.id}})])});var Co=sequelize.define(g.STORE.SETTING,{[p.FOREIGN_KEY.STORE]:{primaryKey:!0,type:d.UUID,references:{model:Q,key:"id"}}},{tableName:G.STORE.SETTING,timestamps:!0});Q.hasOne(Co,{foreignKey:p.FOREIGN_KEY.STORE,as:g.STORE.SETTING});var Jt=sequelize.define(g.STORE.LINK,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},platform:{type:d.ENUM(...C.PLATFORMS),allowNull:!1},link:{type:d.STRING(L.STORE.LINK),allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:G.STORE.LINK,timestamps:!0,paranoid:!0});Q.hasMany(Jt,{foreignKey:p.FOREIGN_KEY.STORE,as:g.STORE.LINK});var Wt=sequelize.define(g.STORE.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!0,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!0},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:G.STORE.VIEWER,createdAt:!0,updatedAt:!1});Q.hasMany(Wt,{foreignKey:p.FOREIGN_KEY.STORE,as:g.STORE.VIEWER});Y.hasMany(Wt,{foreignKey:p.FOREIGN_KEY.USER,as:g.STORE.SETTING});var ne=sequelize.define(g.CATEGORY.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},name:{type:d.STRING(L.CATEGORY.NAME),allowNull:!1},nameAr:{type:d.STRING(L.CATEGORY.NAME),allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:G.CATEGORY.TABLE,timestamps:!0,paranoid:!0});Q.hasMany(ne,{foreignKey:p.FOREIGN_KEY.STORE,as:g.CATEGORY.MODEL});ne.addHook("afterDestroy",async t=>{await Promise.all([_.destroy({force:!1,where:{categoryId:t.dataValues.id}})])});var Zt=sequelize.define(g.CATEGORY.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!0,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!0},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.CATEGORY]:{type:d.UUID,allowNull:!1,references:{model:ne,key:"id"}}},{tableName:G.CATEGORY.VIEWER,createdAt:!0,updatedAt:!1});ne.hasMany(Zt,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:g.CATEGORY.VIEWER});Y.hasMany(Zt,{foreignKey:p.FOREIGN_KEY.USER,as:g.CATEGORY.VIEWER});var _=sequelize.define(g.PRODUCT.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},title:{type:d.STRING(L.PRODUCT.TITLE),allowNull:!1},titleAr:{type:d.STRING(L.PRODUCT.TITLE),allowNull:!1},description:{type:d.STRING(L.PRODUCT.DESCRIPTION),allowNull:!0},descriptionAr:{type:d.STRING(L.PRODUCT.DESCRIPTION),allowNull:!0},quality:{type:d.ENUM(...C.QUALITY),allowNull:!1},stock:{type:d.SMALLINT.UNSIGNED,allowNull:!1},model:{type:d.STRING(L.PRODUCT.MODEL),allowNull:!0},price:{type:d.DOUBLE.UNSIGNED,allowNull:!1},discount:{type:d.DOUBLE.UNSIGNED,allowNull:!1,defaultValue:0},[p.FOREIGN_KEY.CATEGORY]:{type:d.UUID,allowNull:!1,references:{model:ne,key:"id"}}},{tableName:G.PRODUCT.TABLE,timestamps:!0,paranoid:!0});_.belongsTo(ne,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:g.CATEGORY.MODEL});ne.hasMany(_,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:g.PRODUCT.MODEL});_.addHook("afterDestroy",async t=>{await Promise.all([Xt.destroy({force:!1,where:{productId:t.dataValues.id}}),er.destroy({force:!1,where:{productId:t.dataValues.id}}),rr.destroy({force:!1,where:{productId:t.dataValues.id}}),tr.destroy({force:!1,where:{productId:t.dataValues.id}}),gt.destroy({force:!1,where:{productId:t.dataValues.id}}),et.destroy({force:!1,where:{productId:t.dataValues.id}}),Ot.update({status:"canceled",canceledAt:new Date},{where:{status:["wait","process"]},fields:["status","canceledAt"]})])});var Xt=sequelize.define(g.PRODUCT.INFO,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},info:{type:d.STRING(L.PRODUCT.INFO),allowNull:!1},infoAr:{type:d.STRING(L.PRODUCT.INFO),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.INFO,timestamps:!0,paranoid:!0});_.hasMany(Xt,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.INFO});var er=sequelize.define(g.PRODUCT.IMAGE,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.IMAGE,createdAt:!0,updatedAt:!1,paranoid:!0});_.hasMany(er,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.IMAGE});var gt=sequelize.define(g.PRODUCT.RATING,{[p.FOREIGN_KEY.USER]:{primaryKey:!0,type:d.UUID,allowNull:!1,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{primaryKey:!0,type:d.UUID,allowNull:!1,references:{model:_,key:"id"}},rate:{type:d.ENUM(...C.RATING_STARS),allowNull:!1},comment:{type:d.STRING(L.PRODUCT.COMMENT),allowNull:!0}},{tableName:G.PRODUCT.RATING,timestamps:!0,paranoid:!0});_.hasMany(gt,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.RATING});Y.hasMany(gt,{foreignKey:p.FOREIGN_KEY.USER,as:g.PRODUCT.RATING});var tr=sequelize.define(g.PRODUCT.SIZE,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},size:{type:d.STRING(L.PRODUCT.SIZE),validate:{is:/\b((xs|s|m|l|xl)|([2-9](xs|xl)))\b/i},allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.SIZE,createdAt:!0,updatedAt:!1,paranoid:!0});_.hasMany(tr,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.SIZE});var rr=sequelize.define(g.PRODUCT.COLOR,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},color:{type:d.STRING(L.PRODUCT.COLOR),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.COLOR,createdAt:!0,updatedAt:!1,paranoid:!0});_.hasMany(rr,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.COLOR});var or=sequelize.define(g.PRODUCT.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!1,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.VIEWER,createdAt:!0,updatedAt:!1});_.hasMany(or,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.VIEWER});Y.hasMany(or,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.VIEWER});var Xe=sequelize.define(g.TAG,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},tag:{type:d.STRING(L.TAG),unique:!0,allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:G.TAG,createdAt:!0,updatedAt:!1});Q.hasMany(Xe,{foreignKey:p.FOREIGN_KEY.STORE,as:g.TAG});Xe.addHook("afterDestroy",async t=>{await Promise.all([et.destroy({force:!1,where:{tagId:t.dataValues.id}})])});var et=sequelize.define(g.PRODUCT.TAG,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},[p.FOREIGN_KEY.TAG]:{type:d.UUID,allowNull:!1,references:{model:Xe,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}}},{tableName:G.PRODUCT.TAG,createdAt:!0,updatedAt:!1,paranoid:!0});_.hasMany(et,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.PRODUCT.TAG});Xe.hasMany(et,{foreignKey:p.FOREIGN_KEY.TAG,as:g.PRODUCT.TAG});var Ot=sequelize.define(g.ORDER,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},quantity:{type:d.SMALLINT.UNSIGNED,allowNull:!1},totalPrice:{type:d.DOUBLE.UNSIGNED,allowNull:!1},status:{type:d.ENUM(...C.ORDER_STATUS),defaultValue:C.ORDER_STATUS[0],allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!1,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:_,key:"id"}},processedAt:{type:d.DATE,allowNull:!0},doneAt:{type:d.DATE,allowNull:!0},canceledAt:{type:d.DATE,allowNull:!0}},{tableName:G.ORDER,timestamps:!0});_.hasMany(Ot,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:g.ORDER});Y.hasMany(Ot,{foreignKey:p.FOREIGN_KEY.USER,as:g.ORDER});var ja=sequelize.define(g.RESPONSE_TIME,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,primaryKey:!0},date:{type:d.INTEGER.UNSIGNED,allowNull:!1},time:{type:d.FLOAT.UNSIGNED,allowNull:!1},method:{type:d.STRING(10),allowNull:!1},path:{type:d.STRING(255),allowNull:!1},statusCode:{type:d.SMALLINT.UNSIGNED,allowNull:!1}},{tableName:G.RESPONSE_TIME,timestamps:!1,paranoid:!1}),za=sequelize.define(g.SERVER_ERROR,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,primaryKey:!0},message:{type:d.STRING(255),allowNull:!1},stack:{type:d.TEXT,allowNull:!0},statusCode:{type:d.SMALLINT.UNSIGNED,allowNull:!1},isOperational:{type:d.BOOLEAN,allowNull:!1},handler:{type:d.ENUM(...A.ERROR.HANDLERS),allowNull:!1}},{tableName:G.SERVER_ERROR,timestamps:!0});var ar={};B(ar,{tableIndex:()=>$a});import{QueryTypes as Ha}from"sequelize";var{isUUID:Qa}=E.validators;async function $a(t,e){let s=Qa.parse(e);return(await sequelize.query(`
      SELECT row_number FROM (
        SELECT ROW_NUMBER() OVER() AS row_number, id FROM "${t}"
      )
      WHERE id=$id
      LIMIT 1
    `,{type:Ha.SELECT,plain:!0,raw:!0,bind:{id:s}}))?.row_number??0}var ir={};B(ir,{order:()=>Wa,orders:()=>Za});import{QueryTypes as bo}from"sequelize";var{LENGTH:Ja}=S,{ORDER_STATUS:Iu}=C,{isUUID:Do}=E.validators;async function Wa(t){let e=Do.parse(t);return sequelize.query("",{type:bo.SELECT,raw:!1,bind:{parsedId:e}})}async function Za(t,e="all",s=0){let r=Do.parse(t);return sequelize.query(`
    SELECT
      "Order"."quantity" AS "order.quantity",
      "Order"."totalPrice" AS "order.price",
      "Order"."status" AS "order.status",
      "Product"."title" AS "product.title",
      "Product"."titleAr" AS "product.titleAr",
      "Product"."price" AS "product.price",
      "Product"."discount" AS "product.discount",
      "Product"."description" AS "product.description",
      "Product"."descriptionAr" AS "product.descriptionAr",
      "ProductImage"."image" AS "product.image"
    FROM "Order"
    INNER JOIN "Product" ON "Product"."id" = "Order"."productId"
    INNER JOIN "ProductImage" ON "ProductImage"."productId" = "Product"."id"
    INNER JOIN "User" ON "User"."id" = "Order"."userId"
    WHERE "User"."id" = $id ${e!=="all"?'AND "Order"."status" = $filter':""}
    LIMIT $limit OFFSET $offset
  `,{type:bo.SELECT,raw:!0,bind:{id:r,filter:e==="all"?"":e,limit:Ja.LIMIT,offset:s}})}var nr={};B(nr,{withProductsCount:()=>ti});import{QueryTypes as Xa}from"sequelize";var{isUUID:ei}=E.validators;async function ti(t,e=!0){let s=ei.parse(t);return sequelize.query(`
    SELECT "Category"."id", "name", "nameAr", "image", COUNT("Product"."id") AS "count"
    FROM "Category"
    INNER JOIN "Product" ON "Product"."categoryId" = "Category"."id"
    WHERE "Category"."sellerId" = $storeId
    GROUP BY "Category"."id"
    ORDER BY "count" ${e?"DESC":"ASC"}
  `,{type:Xa.SELECT,raw:!0,bind:{sellerId:s}})}var xo={user:ir,category:nr};var m={db:sr,fn:ar,query:xo};var{toString:si}=E.validators,$=class t extends Error{constructor(e,s,r,o,a){super(s),this.statusCode=e,this.statusText=ri(this.statusCode),this.handler=r,this.isOperational=o,this.rollback=a,Object.setPrototypeOf(this,new.target.prototype),Error.captureStackTrace(this)}static async handleError(e){let s=e instanceof Error?e:new Error(si.parse(e)),r={message:s.message,stack:(s.stack??"").replaceAll(`
`,"<br/>"),statusCode:oi.INTERNAL_SERVER_ERROR,isOperational:!1,handler:"server",rollback:null};s instanceof t&&(r.statusCode=s.statusCode,r.handler=s.handler,r.isOperational=s.isOperational,r.rollback=s.rollback);try{let{Mail:o,file:{FileUploader:a}}=K,{ServerError:i}=m.db,n=r.rollback?.files??[];await Promise.all([new o(k.MAIL.USER,`New error - ${r.isOperational?"Catch":"Urgent"} - Status: ${r.statusCode}`,o.errorTemplate(r)).send(),a.remove(...n),i.create(r,{fields:["message","stack","statusCode","isOperational","handler"]})])}catch{IS_PRODUCTION,process.exit(1)}}static checkOperational(e){return e instanceof t?e.isOperational:!1}},c=class{static controller(e,s="",r=null){return new $(e,s,"controller",!0,r)}static middleware(e,s="",r=null){return new $(e,s,"middleware",!0,r)}static socket(e,s="",r=null){return new $(e,s,"socket",!0,r)}static passport(e,s="",r=null){return new $(e,s,"passport",!0,r)}static server(e,s="",r=null){return new $(e,s,"server",!1,r)}};import{StatusCodes as ni}from"http-status-codes";var{isUUID:_o}=E.validators,Fo=32,Go=16,Vo="aes-256-cbc",Mo={token(t){if(!_o.parse(t))throw c.server(ni.INTERNAL_SERVER_ERROR,"Invalid id type (uuid) to create Access Token");let e=`${t}`,s=Lo(Fo),r=Lo(Go),o=ai(Vo,s,r),a=o.update(e,"utf8","base64")+o.final("base64"),i=r.toString("hex"),n=s.toString("hex");return{token:a,iv:i.substring(3),key:n.substring(3),code:n.substring(0,3)+i.substring(0,3)}},verify(t,e,s,r){let o=Buffer.from(t,"base64"),a=r.substring(0,3),i=r.substring(3),n=Buffer.from(a+e,"hex"),u=Buffer.from(i+s,"hex");if(u.length!==Go||n.length!==Fo)return{valid:!1,id:""};let y=ii(Vo,n,u),O=Buffer.concat([y.update(o),y.final()]).toString();return O===void 0?{valid:!1,id:""}:_o.parse(O)?{valid:!0,id:O}:{valid:!1,id:""}}};import{hashSync as ci,genSaltSync as di,compareSync as li}from"bcrypt";var vo={hash:t=>ci(t,di(12)),compare:(t,e)=>li(t,e)};import qo from"csrf";var Bo={generate(){let t=new qo,e=t.secretSync();return{token:t.create(e),secret:e}},verify:(t,e)=>new qo().verify(t,e)};import Ko from"jsonwebtoken";var Yo={sign:(t,e=S.TIME.MONTH)=>Ko.sign({data:JSON.stringify(t)},k.JWT.SECRET,{expiresIn:e}),verify(t){let e=null;try{if(e=Ko.verify(t,k.JWT.SECRET),e===null)throw new Error;if(typeof e!="object")throw new Error;if(!("data"in e))throw new Error;if(typeof e.data!="string")throw new Error;e=JSON.parse(e.data)}catch{e=null}return e}};var cr={};B(cr,{getHeader:()=>Ri,handleAsync:()=>mi,nowInSecond:()=>fi});import{MulterError as ui}from"multer";import{ZodError as pi}from"zod";import{StatusCodes as ko}from"http-status-codes";function mi(t){return async(e,s,r)=>{let o=await sequelize.transaction();try{await t(e,s,r,o),await o.commit()}catch(a){await Promise.all([$.handleError(a),o.rollback()]);let i=ko.BAD_REQUEST,n="";if(a instanceof $)i=a.statusCode,n=a.message;else if(a instanceof pi)n=a.flatten().formErrors.join(";");else if(a instanceof ui)i=ko.FORBIDDEN,n=a.message;else return r(a);s.status(i).json({success:!1,message:n})}}}function fi(t=0){return Math.floor((Date.now()+t)/S.TIME.SECOND)}function Ri(t,e){return t[e.toLowerCase()]??""}var f={access:Mo,bcrypt:vo,csrf:Bo,jwt:Yo,fn:cr};import jo from"multer";var dr=jo({storage:jo.memoryStorage()});dr.none();import Ei from"tmp-promise";var zo={async initTmpDir(){global.tmp=await Ei.dir({unsafeCleanup:!0})}};import yi from"connect-mongo";import{rateLimit as Ii}from"express-rate-limit";import Ti from"rate-limit-mongo";var{URI:Ho}=k,{COLLECTIONS:Qo}=A.CACHE,{TIME:gi}=S,$o={initLimiter(){return Ii({store:new Ti({uri:Ho.MONGO,collectionName:Qo.RATE_LIMIT,user:"",password:"",expireTimeMs:15*60*1e3,errorHandler:void 0}),limit:1e3,windowMs:gi.MINUTE})},initSession(){return yi.create({mongoUrl:Ho.MONGO,collectionName:Qo.SESSION})}};import Jo from"swagger-ui-express";import Oi from"swagger-jsdoc";import Ai from"node:path";var{PACKAGE:Wo}=S,Ni=Ai.join(__root,"ts/**/*.ts"),Si={failOnErrors:!0,definition:{openapi:"3.1.0",info:{title:"LogRocket Express API with Swagger",version:Wo.VERSION,description:"This is a simple CRUD API application made with Express and documented with Swagger",license:{name:"MIT",url:"https://spdx.org/licenses/MIT.html"},contact:{name:"LogRocket",url:"https://logrocket.com",email:"info@email.com"}},servers:[{url:`http://localhost:3000/v${Wo.VERSION}`}]},apis:[Ni]},Zo={init(){let t=Oi(Si),e=Jo.setup(t,{explorer:!0});return{json:t,serve:Jo.serve,ui:e}}};var lr={};B(lr,{cookieOptions:()=>wi});var wi={maxAge:9e5,sameSite:IS_PRODUCTION?"none":"strict",httpOnly:IS_PRODUCTION,secure:IS_PRODUCTION,path:"/"};var b={upload:dr,db:kr,tmp:zo,app:$o,swagger:Zo,options:lr};import{Router as ed}from"express";import{Router as Fc}from"express";import{Router as wn}from"express";var Xo={};import{StatusCodes as Te}from"http-status-codes";var{StoreId:Pi,CategoryId:es,ProductId:ts}=E.id,rs={async checkStore(t,e,s,r){let{storeId:o}=Pi.parse(t.params),{Store:a}=m.db,i=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(Te.NOT_FOUND,"Store not found");return e.locals={...e.locals,store:i},s()},async checkCategory(t,e,s,r){let{categoryId:o}=es.parse(t.params),{store:a}=e.locals,{Category:i}=m.db,n=await i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o,storeId:a.dataValues.id},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(Te.NOT_FOUND,"Category not found");return e.locals={...e.locals,category:n},s()},async checkProduct(t,e,s,r){let{productId:o}=ts.parse(t.params),{category:a}=e.locals,{Product:i}=m.db,n=await i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o,categoryId:a.dataValues.id},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(Te.NOT_FOUND,"Product not found");return e.locals={...e.locals,product:n},s()},async isSeller(t,e,s,r){let{user:o}=t;if(o===void 0)throw c.middleware(Te.UNAUTHORIZED,"Unauthorized user");let{Store:a}=m.db,i=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(Te.NOT_FOUND,"Store not found, you can become seller");return e.locals={...e.locals,store:i},s()},async isCategoryOwner(t,e,s,r){let{categoryId:o}=es.parse(t.params),{store:a}=e.locals,{Category:i}=m.db,n=await i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{storeId:a.dataValues.id,id:o},plain:!0,limit:1,transaction:r});if(n===null)throw c.middleware(Te.NOT_FOUND,"Category not found");return e.locals={...e.locals,category:n},s()},async isProductOwner(t,e,s,r){let{productId:o}=ts.parse(t.params),{store:a}=e.locals,{Category:i}=m.db,n=await i.findAll({attributes:["id"],where:{storeId:a.dataValues.id},transaction:r});if(n.length===0)throw c.middleware(Te.FORBIDDEN,"This store don't have any categories");let u=n.map(O=>O.dataValues.id),{Product:y}=m.db,I=await y.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:u,id:o},limit:1,plain:!0,transaction:r});if(I===null)throw c.middleware(Te.NOT_FOUND,"Product not found");return e.locals={...e.locals,product:I},s()}};var os={async isAdmin(t,e,s){return s()}};var ss={user:Xo,store:rs,admin:os};import{StatusCodes as Me}from"http-status-codes";var{COOKIE:hi}=A,as={async access(t,e,s,r){let o=`${t.cookies[hi.TOKEN]??""}`;if(o.length===0)throw c.middleware(Me.BAD_REQUEST,"Access token not send");let a=t.session.access?.key??"";if(a.length===0)throw c.server(Me.FORBIDDEN,"Invalid access key");let i=t.session.access?.iv??"";if(i.length===0)throw c.server(Me.FORBIDDEN,"Invalid access iv");let{Body:n}=E.req.security.access.Email.Middleware,{code:u,password:y,confirmPassword:I}=n.parse(t.body);if(!Object.is(y,I))throw c.controller(Me.CONFLICT,"Passwords not equal");let{access:O}=f,N=O.verify(o,a,i,u);if(!N.valid)throw c.middleware(Me.UNAUTHORIZED,"Invalid access token");t.session.access={key:"",iv:""};let{User:x}=m.db,v=await x.findOne({attributes:["id","emailVerified"],where:{id:N.id},plain:!0,limit:1,transaction:r});if(v===null)throw c.middleware(Me.NOT_FOUND,"User not found");return delete t.body.code,delete t.body.confirmPassword,t.user=v,s()}};var ur={};B(ur,{checkOrder:()=>Di,isAuthenticated:()=>Ci,isSeller:()=>xi,notAuthenticated:()=>bi});import{StatusCodes as At}from"http-status-codes";var{OrderId:Ui}=E.id;async function Ci(t,e,s){if(!t.isAuthenticated())throw c.middleware(At.UNAUTHORIZED,"Unauthenticated user");return s()}async function bi(t,e,s){if(t.isAuthenticated())throw c.middleware(At.NOT_ACCEPTABLE,"User already authenticated");return s()}async function Di(t,e,s,r){let o=t.user,{orderId:a}=Ui.parse(t.params),{Order:i}=m.db,n=await i.findOne({attributes:{exclude:["createdAt","updatedAt"]},where:{id:a,userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(At.NOT_FOUND,"Order not found");return e.locals={...e.locals,order:n},s()}async function xi(t,e,s,r){let{user:o}=t,{Store:a}=m.db,i=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(At.NOT_FOUND,"Seller not found");return e.locals={...e.locals,store:i},s()}var V={api:ss,security:as,fn:ur};import{StatusCodes as J}from"http-status-codes";import{serialize as ds}from"cookie";import{StatusCodes as Gi}from"http-status-codes";import ce from"passport";import{Strategy as Li}from"passport-local";import{StatusCodes as is}from"http-status-codes";var ns=new Li({usernameField:"email",passwordField:"password"},(t,e,s)=>{let{User:r}=m.db;r.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{email:t},limit:1}).then(o=>{if(o===null)return s(c.passport(is.NOT_FOUND,"User not found"));let{compare:a}=f.bcrypt;return a(e,o.dataValues.password)?s(null,o):s(c.passport(is.UNAUTHORIZED,"Invalid password"))}).catch(s)});import{Strategy as _i}from"passport-http-bearer";import{StatusCodes as pr}from"http-status-codes";var cs=new _i((t,e)=>{let{verify:s}=f.jwt,r=s(t);if(r===null)return e(c.passport(pr.BAD_REQUEST,"Invalid token"));let{isUUID:o}=E.validators,a=o.safeParse(r);if(!a.success)return e(c.passport(pr.BAD_REQUEST,a.error.message));let{User:i}=m.db;i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:a.data},limit:1,plain:!0}).then(n=>n===null?e(c.passport(pr.NOT_FOUND,"User not found")):e(null,n)).catch(e)});var{isUUID:Fi}=E.validators;ce.serializeUser((t,e)=>e(null,t.dataValues.id));ce.deserializeUser((t,e)=>{let s=Fi.safeParse(t);if(!s.success)return e(null,!1);let{User:r}=m.db;r.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:s.data},limit:1}).then(o=>o===null?e(null,!1):e(null,o)).catch(e)});ce.use(ns);ce.use(cs);async function mr(t,e,s,r){return new Promise((o,a)=>{ce.authenticate(t,(i,n,u)=>{let{toBoolean:y}=E.validators;if(y.parse(i))return a(i);if(!y.parse(n))return a(c.passport(Gi.BAD_REQUEST,u?.message??"Invalid info"));e.logIn(n,I=>y.parse(I)?a(I):o(n))})(e,s,r)})}var{COOKIE:ls}=A,{SignUp:Vi,VerifyEmail:Mi,ForgotPassword:vi}=E.req.api.auth,us={async signUp(t,e,s,r){let{Body:o}=Vi,{username:a,email:i,password:n,theme:u,locale:y}=o.parse(t.body),{User:I,UserSetting:O}=m.db;if(await I.findOne({attributes:["email"],where:{email:i},limit:1,plain:!0,transaction:r})!==null)throw c.controller(J.BAD_REQUEST,"Email already exist");let x=t.file;if(x===void 0||x.buffer.length===0)throw c.controller(J.BAD_REQUEST,"Please, provide an image");let{FileConverter:v,FileUploader:w}=K.file,D=await new v(x.buffer).convert();if(D.length===0)throw c.controller(J.UNSUPPORTED_MEDIA_TYPE,"Unsupported image format");let me=await new w(...D).upload();if(me.length===0)throw c.server(J.INTERNAL_SERVER_ERROR,"Can't upload your image");let{hash:xe}=f.bcrypt,Ye=await I.create({username:a,email:i,password:xe(n),image:me[0]},{fields:["username","email","password","image"],transaction:r});await O.create({userId:Ye.dataValues.id,theme:u,locale:y,forceTheme:!1,disableAnimations:!1},{fields:["userId","theme","locale","forceTheme","disableAnimations"],transaction:r}),e.status(J.CREATED).json({success:!0})},async signIn(t,e,s,r){let o=await mr("local",t,e,s),{sign:a}=f.jwt,{UserSetting:i,Store:n}=m.db,[u,y]=await Promise.all([i.findOne({attributes:{exclude:["userId"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]),{options:I}=b;e.status(J.OK).setHeader("Set-Cookie",ds(ls.AUTHORIZATION,a(o.dataValues.id),I.cookieOptions)).json({success:!0,data:{user:o.dataValues,setting:u.dataValues,store:y?.dataValues??null}})},async signOut(t,e){t.logOut(s=>{let{toBoolean:r}=E.validators;if(r.parse(s))throw s;t.session.csrf={secret:""},t.session.access={key:"",iv:""},e.status(J.OK).json({success:!0})})},async me(t,e,s,r){let o=await mr("bearer",t,e,s),{sign:a}=f.jwt,{UserSetting:i,Store:n}=m.db,[u,y]=await Promise.all([i.findOne({attributes:{exclude:["userId"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]),{options:I}=b;e.status(J.OK).setHeader("Set-Cookie",ds(ls.AUTHORIZATION,a(o.dataValues.id),I.cookieOptions)).json({success:!0,data:{user:o.dataValues,setting:u.dataValues,store:y?.dataValues??null}})},async verifyEmail(t,e,s,r){let{Query:o}=Mi,{token:a}=o.parse(t.query),{verify:i}=f.jwt,n=i(a)??"";if(n.length===0)throw c.controller(J.BAD_REQUEST,"Invalid token");let{isUUID:u}=E.validators,y=u.parse(n),{User:I}=m.db,[O,N]=await I.update({emailVerified:new Date},{fields:["emailVerified"],where:{id:y},limit:1,returning:!0,transaction:r});if(N.length===0)throw c.controller(J.NOT_FOUND,"User not found");e.status(J.OK).json({success:!0})},async forgotPassword(t,e,s,r){let o=t.user,{Body:a}=vi,{password:i}=a.parse(t.body),{hash:n}=f.bcrypt;await o.update({password:n(i),emailVerified:o.dataValues.emailVerified===null?new Date:o.dataValues.emailVerified},{fields:["password","emailVerified"],transaction:r}),e.status(J.OK).json({success:!0})}};import{StatusCodes as W}from"http-status-codes";import{StatusCodes as ve}from"http-status-codes";var fr={};B(fr,{stores:()=>Bi,users:()=>qi});import{QueryTypes as ps}from"sequelize";async function qi(t){return sequelize.query(`
  SELECT COUNT("id") AS "users", date_trunc('day', "createdAt")::date AS "createdAt" FROM "User"
  GROUP BY date_trunc('day', "createdAt")::date
  `,{type:ps.SELECT,raw:!0,transaction:t})}async function Bi(t){return sequelize.query(`
  SELECT COUNT("id") AS "stores", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Store"
  GROUP BY date_trunc('day', "createdAt")::date
  `,{type:ps.SELECT,raw:!0,transaction:t})}var ms={stats:fr};var Er={};B(Er,{categories:()=>Ki,orders:()=>ki,products:()=>Yi});import{QueryTypes as Rr}from"sequelize";async function Ki(t,e){return sequelize.query(`
  SELECT COUNT("id") AS "categories", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Category"
  WHERE "storeId" = $storeId
  GROUP BY date_trunc('day', "createdAt")::date
  `,{type:Rr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function Yi(t,e){return sequelize.query(`
    SELECT COUNT("P"."id") AS "products", date_trunc('day', "P"."createdAt")::date AS "createdAt" FROM "Product" "P"
    INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId" AND "C"."storeId"  = $storeId
    GROUP BY date_trunc('day', "P"."createdAt")::date
  `,{type:Rr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function ki(t,e){return sequelize.query("",{type:Rr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}var yr={};B(yr,{all:()=>ji,order:()=>zi});import{QueryTypes as fs}from"sequelize";async function ji(t,e){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity", "O"."totalPrice" AS "order.totalPrice", "O"."quantity" AS "order.quantity", "O"."status" AS "order.status",
  "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description",
  "P"."descriptionAr" AS "product.descriptionAr", ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", "C"."storeId" AS "product.storeId"
  FROM "Order" "O"
  INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
  INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
  INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
  WHERE "C"."storeId" = $storeId
  GROUP BY "O"."id", "P"."id", "C"."storeId"
  ORDER BY "O"."createdAt" DESC
  `,{type:fs.SELECT,raw:!0,nest:!0,bind:{storeId:t},transaction:e})}async function zi(t,e,s){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity", "O"."totalPrice" AS "order.totalPrice", "O"."quantity" AS "order.quantity", "O"."status" AS "order.status",
  "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description",
  "P"."descriptionAr" AS "product.descriptionAr", ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", "C"."storeId" AS "product.storeId"
  FROM "Order" "O"
  INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
  INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
  INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
  WHERE "C"."storeId" = $storeId
  GROUP BY "O"."id", "P"."id", "C"."storeId"
  LIMIT 1
  `,{type:fs.SELECT,raw:!0,nest:!0,plain:!0,bind:{storeId:t,orderId:e},transaction:s})}var Rs={stats:Er,orders:yr};var Tr={};B(Tr,{all:()=>Hi,one:()=>Qi,orders:()=>Ji,viewers:()=>$i});import{QueryTypes as Ir}from"sequelize";async function Hi(t,e){return sequelize.query(`
    SELECT "P"."id", "P"."title", "P"."titleAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "images", COUNT("PV"."id") as "views", COUNT("O"."id") AS "orders"
    FROM "Product" "P"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
    LEFT JOIN "ProductViewer" "PV" ON "PV"."productId" = "P"."id"
    LEFT JOIN "Order" "O" ON "O"."productId" = "P"."id"
    WHERE "P"."deletedAt" IS NULL AND "PI"."deletedAt" IS NULL AND "C"."deletedAt" IS NULL AND
    "C"."storeId" = $storeId
    GROUP BY "P"."id"
    ORDER BY "P"."createdAt" DESC
  `,{type:Ir.SELECT,bind:{storeId:t},raw:!0,transaction:e})}async function Qi(t,e){return sequelize.query(`SELECT "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr",
    "P"."description" AS "product.description", "P"."descriptionAr" AS "product.descriptionAr",
    "P"."quality" AS "product.quality", "P"."stock" AS "product.stock", "P"."model" AS "product.model",
    "P"."price" AS "product.price", "P"."discount" AS "product.discount",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", ARRAY_AGG(DISTINCT "PIn"."info") AS "product.infos", ARRAY_AGG(DISTINCT "PIn"."infoAr") AS "product.infosAr",
    ARRAY_AGG(DISTINCT "PC"."color") AS "product.colors", ARRAY_AGG(DISTINCT "PS"."size") AS "product.sizes", ARRAY_AGG(DISTINCT "T"."tag") AS "product.tags",
    "C"."id" AS "category.id", "C"."name" AS "category.name", "C"."nameAr" AS "category.nameAr", "C"."image" AS "category.image"
    FROM "Product" AS "P"
    INNER JOIN "Category" AS "C" ON "C"."id" = "P"."categoryId"
    INNER JOIN "ProductImage" AS "PI" ON "PI"."productId" = "P"."id"
    LEFT JOIN "ProductTag" AS "PT" ON "PT"."productId" = "P"."id"
    LEFT JOIN "ProductColor" AS "PC" ON "PC"."productId" = "P"."id"
    LEFT JOIN "ProductSize" AS "PS" ON "PS"."productId" = "P"."id"
    LEFT JOIN "ProductInfo" AS "PIn" ON "PIn"."productId" = "P"."id"
    LEFT JOIN "Tag" AS "T" ON "T"."id" = "PT"."tagId"
    WHERE "P"."id" = $id AND "P"."deletedAt" IS NULL AND "C"."deletedAt" IS NULL
    AND "PI"."deletedAt" IS NULL AND "PT"."deletedAt" IS NULL AND "PC"."deletedAt" IS NULL  AND "PS"."deletedAt" IS NULL
    AND "PIn"."deletedAt" IS NULL
    GROUP BY "P"."id", "C"."id"
    LIMIT 1`,{type:Ir.SELECT,bind:{id:t},raw:!0,nest:!0,plain:!0,transaction:e})}async function $i(t,e){return sequelize.query(`SELECT "U"."id", "U"."username", "U"."image", COUNT("U"."id") AS "views"
    FROM "User" AS "U"
    INNER JOIN "ProductViewer" AS "PV" ON "PV"."userId" = "U"."id"
    WHERE "PV"."productId" = $productId AND "U"."deletedAt" IS NULL
    GROUP BY "U"."id"`,{type:Ir.SELECT,bind:{productId:t},raw:!0,transaction:e})}async function Ji(){}var Or={};B(Or,{all:()=>Wi,one:()=>Zi,products:()=>Xi});import{QueryTypes as gr}from"sequelize";async function Wi(t,e){return sequelize.query(`
    SELECT "C"."id", "C"."name", "C"."nameAr", "C"."image",
    COUNT("P"."id") AS "products", COUNT("CV"."id") AS "views"
    FROM "Category" "C"
    LEFT JOIN "CategoryViewer" "CV" ON "CV"."categoryId" = "C"."id"
    LEFT JOIN "Product" "P" ON "P"."categoryId" = "C"."id" AND "P"."deletedAt" IS NULL
    WHERE "C"."storeId" = $storeId AND "C"."deletedAt" IS NULL
    GROUP BY "C"."id"
    ORDER BY "C"."createdAt" DESC
    `,{type:gr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function Zi(t,e){return sequelize.query(`
    SELECT "C"."id", "C"."name", "C"."nameAr", "C"."image",
    COUNT("P"."id") AS "products", COUNT("CV"."id") AS "views"
    FROM "Category" "C"
    LEFT JOIN "CategoryViewer" "CV" ON "CV"."categoryId" = "C"."id"
    LEFT JOIN "Product" "P" ON "P"."categoryId" = "C"."id" AND "P"."deletedAt" IS NULL
    WHERE "C"."id" = $id AND "C"."deletedAt" IS NULL
    GROUP BY "C"."id"
    LIMIT 1
    `,{type:gr.SELECT,raw:!0,plain:!0,bind:{id:t},transaction:e})}async function Xi(t,e){return sequelize.query(`
    SELECT "P"."id", "P"."title", "P"."titleAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "images", COUNT("PV"."id") as "views", COUNT("O"."id") AS "orders"
    FROM "Product" "P"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    LEFT JOIN "ProductViewer" "PV" ON "PV"."productId" = "P"."id"
    LEFT JOIN "Order" "O" ON "O"."productId" = "P"."id"
    WHERE "P"."deletedAt" IS NULL AND "PI"."deletedAt" IS NULL AND "P"."categoryId" = $categoryId
    GROUP BY "P"."id"
    ORDER BY "P"."createdAt" DESC
    `,{type:gr.SELECT,raw:!0,bind:{categoryId:t},transaction:e})}var Nr={};B(Nr,{user:()=>Ar});var Ar={};B(Ar,{all:()=>en,one:()=>tn});import{QueryTypes as Es}from"sequelize";async function en(t,e){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity",
    "O"."totalPrice" AS "order.totalPrice", "O"."status" AS "order.status",
    "P"."id" AS "product.id", "P"."title" AS "product.title",
    "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description", 
    "P"."descriptionAr" AS "product.descriptionAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images"
    FROM "Order" "O"
    INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    WHERE "O"."userId" = $userId
    GROUP BY "O"."id", "P"."id"
    ORDER BY "O"."createdAt" DESC
  `,{type:Es.SELECT,raw:!0,nest:!0,bind:{userId:t},transaction:e})}async function tn(t,e,s){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity",
    "O"."totalPrice" AS "order.totalPrice", "O"."status" AS "order.status",
    "P"."id" AS "product.id", "P"."title" AS "product.title",
    "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description", 
    "P"."descriptionAr" AS "product.descriptionAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images"
    FROM "Order" "O"
    INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    WHERE "O"."id" = $id AND "O"."userId" = $userId
    GROUP BY "O"."id", "P"."id"
    LIMIT 1
  `,{type:Es.SELECT,raw:!0,plain:!0,nest:!0,bind:{id:t,userId:e},transaction:s})}var q={store:Rs,category:Or,product:Tr,order:Nr,admin:ms};var{Create:rn,Update:on}=E.req.api.user.orders,ys={async all(t,e,s,r){let o=t.user,{all:a}=q.order.user,i=await a(o.dataValues.id,r);e.status(ve.OK).json({success:!0,data:{orders:i}})},async order(t,e,s,r){let o=t.user,a=e.locals.order,{one:i}=q.order.user,n=await i(a.dataValues.id,o.dataValues.id,r);e.status(ve.OK).json({success:!0,data:{order:n}})},async create(t,e,s,r){let{Body:o}=rn,{orders:a}=o.parse(t.body),i=t.user,{Order:n}=m.db;await n.bulkCreate(a.map(u=>({userId:i.dataValues.id,productId:u.productId,quantity:u.quantity,totalPrice:u.totalPrice})),{fields:["userId","productId","quantity","totalPrice"],transaction:r}),e.status(ve.CREATED).json({success:!0})},async patch(t,e,s,r){let o=e.locals.order;if(o.dataValues.status!==je[0])throw c.controller(ve.FORBIDDEN,"Your order is on processing");let{Query:a}=on,{quantity:i}=a.parse(t.query);await o.update({quantity:i},{fields:["quantity"],transaction:r}),e.status(ve.OK).json({success:!0,data:{order:o.dataValues}})},async remove(t,e,s,r){await e.locals.order.update({status:je[3],canceledAt:new Date},{fields:["status","canceledAt"],transaction:r}),e.status(ve.OK).json({success:!0})}};var{Setting:sn,BecomeSeller:an,Update:nn}=E.req.api.user,Is={async profile(t,e,s,r){let{user:o}=t,{UserSetting:a,Store:i}=m.db,[n,u]=await Promise.all([a.findOne({attributes:["theme","locale","forceTheme","disableAnimations"],where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]);e.status(W.OK).json({success:!0,data:{user:o.dataValues,setting:n.dataValues,store:u?.dataValues??null}})},async setting(t,e,s,r){let{Body:o}=sn,a=t.user,{theme:i,locale:n,disableAnimations:u,forceTheme:y}=o.parse(t.body),{UserSetting:I}=m.db,[O,N]=await I.update({theme:i,locale:n,disableAnimations:u,forceTheme:y},{where:{userId:a.dataValues.id},fields:["theme","locale","forceTheme","disableAnimations"],returning:!0,transaction:r,limit:1});e.status(W.OK).json({success:!0,data:{setting:N[0].dataValues}})},async becomeSeller(t,e,s,r){let{Body:o}=an,{name:a}=o.parse(t.body),{Store:i}=m.db;if(await i.findOne({attributes:["name"],where:{name:a},paranoid:!1,plain:!0,limit:1,transaction:r})!==null)throw c.controller(W.BAD_REQUEST,"Store name already exists");let{user:u}=t;if(await i.findOne({attributes:["userId"],where:{userId:u.dataValues.id},paranoid:!1,plain:!0,limit:1,transaction:r})!==null)throw c.controller(W.BAD_REQUEST,"You have a store already");let I=t.file;if(I===void 0||I.buffer.length===0)throw c.controller(W.BAD_REQUEST,"Please, provide a logo for your store");let{FileConverter:O,FileUploader:N}=K.file,x=await new O(I.buffer).convert();if(x.length===0)throw c.controller(W.UNSUPPORTED_MEDIA_TYPE,"Invalid image format");let v=await new N(...x).upload();if(v.length===0)throw c.server(W.INTERNAL_SERVER_ERROR,"Can't upload your image");let{StoreSetting:w}=m.db,D=await i.create({name:a,image:v[0],userId:u.dataValues.id},{fields:["name","image","userId"],transaction:r}),me=await w.create({storeId:D.dataValues.id},{fields:["storeId"],transaction:r});e.status(W.CREATED).json({success:!0,data:{store:D.dataValues,setting:me.dataValues}})},async update(t,e,s,r){let{user:o}=t,{Body:a}=nn,{username:i}=a.parse(t.body),n=t.file,u="";if(n!==void 0&&n.buffer.length>0){let{FileConverter:y,FileUploader:I}=K.file,O=await new y(n.buffer).convert();if(O.length===0)throw c.controller(W.UNSUPPORTED_MEDIA_TYPE,"Please, provide a valid image");let N=await new I(...O).upload();if(N.length===0)throw c.server(W.INTERNAL_SERVER_ERROR,"Can't upload your image");await I.remove(o.dataValues.image),u=N[0]}await o.update({username:i,image:u||o.dataValues.image},{fields:["username","image"],transaction:r}),e.status(W.OK).json({success:!0,data:{user:o.dataValues}})},async remove(t,e,s,r){await t.user.destroy({force:!1,transaction:r}),e.status(W.OK).json({success:!0})},orders:ys};import{Op as Nt}from"sequelize";import{StatusCodes as he}from"http-status-codes";var{Search:cn,Home:dn}=E.req.api.store,{DB:F}=A,Ts={async search(t,e,s,r){let{Query:o}=cn,{s:a,limit:i}=o.parse(t.query),{Store:n,Category:u,Product:y,ProductImage:I}=m.db,O=a.split(/\s+/).filter(w=>/^[a-zA-Z0-9،-٩]+$/.test(w)).map(w=>({[Nt.iLike]:`%${w}%`})),[N,x,v]=await Promise.all([y.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{[Nt.or]:[...O.map(w=>({title:w})),...O.map(w=>({titleAr:w})),...O.map(w=>({description:w})),...O.map(w=>({descriptionAr:w}))]},include:[{as:F.MODELS.PRODUCT.IMAGE,attributes:["image"],model:I,required:!0,limit:1},{as:F.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:u,required:!0}],order:[["createdAt","DESC"]],limit:i,transaction:r}),u.findAll({attributes:["id","name","nameAr","image","storeId"],where:{[Nt.or]:[...O.map(w=>({nameAr:w})),...O.map(w=>({name:w}))]},order:[["createdAt","DESC"]],raw:!0,limit:i,transaction:r}),n.findAll({attributes:["id","image","name"],where:{[Nt.or]:O.map(w=>({name:w}))},order:[["createdAt","DESC"]],raw:!0,limit:i,transaction:r})]);e.status(he.OK).json({success:!0,data:{stores:v,categories:x,products:N.map(w=>{let{dataValues:D}=w;return D.image=D[F.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete D[F.MODELS.PRODUCT.IMAGE],D.storeId=D[F.MODELS.CATEGORY.MODEL].dataValues.storeId,delete D[F.MODELS.CATEGORY.MODEL],D})}})},async all(t,e,s,r){let{Store:o}=m.db,a=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},raw:!0,order:[["createdAt","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{stores:a}})},async categories(t,e,s,r){let{Category:o}=m.db,a=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},raw:!0,order:[["createdAr","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{categories:a}})},async products(t,e,s,r){let{Product:o,ProductImage:a}=m.db,i=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},include:{as:F.MODELS.PRODUCT.IMAGE,attributes:["image"],model:a,required:!0,limit:1},order:[["createdAt","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{products:i.map(n=>{let{dataValues:u}=n;return u.image=u[F.MODELS.PRODUCT.IMAGE][0].image,delete u[F.MODELS.PRODUCT.IMAGE],u})}})},async store(t,e,s,r){let{Params:o}=dn,{storeId:a}=o.parse(t.params),{user:i}=t,{StoreViewer:n}=m.db;await n.create({ip:t.clientIp,userId:i?.dataValues.id,storeId:a},{fields:["ip","userId","storeId"],transaction:r});let u=e.locals.store,{Category:y,Product:I,ProductImage:O}=m.db,N=await y.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},order:[["createdAt","DESC"]],where:{storeId:u.dataValues.id},transaction:r}),x=N.map(w=>w.dataValues.id),v=await I.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:x},order:[["createdAt","DESC"]],transaction:r,include:[{as:F.MODELS.PRODUCT.IMAGE,attributes:["image"],model:O,required:!0,limit:1},{as:F.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:y,required:!0}]});e.status(he.OK).json({success:!0,data:{store:u.dataValues,categories:N.map(w=>w.dataValues),products:v.map(w=>{let{dataValues:D}=w;return D.image=D[F.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete D[F.MODELS.PRODUCT.IMAGE],D.storeId=D[F.MODELS.CATEGORY.MODEL].dataValues.storeId,delete D[F.MODELS.CATEGORY.MODEL],D})}})},async category(t,e,s,r){let o=e.locals.category,{user:a}=t,{CategoryViewer:i,Product:n,ProductImage:u,Category:y}=m.db;await i.create({ip:t.clientIp,userId:a?.dataValues.id,categoryId:o.dataValues.id},{fields:["ip","userId","categoryId"],transaction:r});let I=await n.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:o.dataValues.id},order:[["createdAt","DESC"]],transaction:r,include:[{as:F.MODELS.PRODUCT.IMAGE,attributes:["image"],model:u,required:!0,limit:1},{as:F.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:y,required:!0}]});e.status(he.OK).json({success:!0,data:{category:o.dataValues,products:I.map(O=>{let{dataValues:N}=O;return N.image=N[F.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete N[F.MODELS.PRODUCT.IMAGE],N.storeId=N[F.MODELS.CATEGORY.MODEL].dataValues.storeId,delete N[F.MODELS.CATEGORY.MODEL],N})}})},async product(t,e,s,r){let o=e.locals.product,{user:a}=t,{ProductViewer:i}=m.db;await i.create({ip:t.clientIp,userId:a?.dataValues.id,productId:o.dataValues.id},{fields:["ip","userId","productId"],transaction:r});let n=await q.product.one(o.dataValues.id,r);e.status(he.OK).json({success:!0,data:{product:n}})}};import{Op as Rn}from"sequelize";import{StatusCodes as qe}from"http-status-codes";import{StatusCodes as re}from"http-status-codes";var{Create:ln,Update:un}=E.req.api.dashboard.store.categories,{category:Sr}=q,gs={async all(t,e,s,r){let o=e.locals.store,a=await Sr.all(o.dataValues.id,r);e.status(re.OK).json({success:!0,data:{categories:a}})},async category(t,e,s,r){let o=e.locals.category,[a,i]=await Promise.all([Sr.products(o.dataValues.id,r),Sr.one(o.dataValues.id,r)]);e.status(re.OK).json({success:!0,data:{category:i,products:a}})},async create(t,e,s,r){let{Body:o}=ln,{name:a,nameAr:i}=o.parse(t.body),n=t.file;if(n===void 0||n.buffer.length===0)throw c.controller(re.BAD_REQUEST,"Please, provide a valid image");let{FileConverter:u,FileUploader:y}=K.file,I=await new u(n.buffer).convert();if(I.length===0)throw c.controller(re.UNSUPPORTED_MEDIA_TYPE,"Invalid image");let O=await new y(...I).upload();if(O.length===0)throw c.controller(re.INTERNAL_SERVER_ERROR,"Can't save image");let{store:N}=e.locals,{Category:x}=m.db,v=await x.create({image:O[0],name:a,nameAr:i,storeId:N.dataValues.id},{fields:["image","name","nameAr","storeId"],returning:!0,transaction:r});e.status(re.CREATED).json({success:!0,data:{category:v.dataValues}})},async update(t,e,s,r){let{Body:o}=un,{name:a,nameAr:i}=o.parse(t.body),{category:n}=e.locals,u=t.file,y=n.dataValues.image;if(u!==void 0&&u.buffer.length>0){let{FileConverter:I,FileUploader:O}=K.file,N=await new I(u.buffer).convert();if(N.length===0)throw c.controller(re.UNSUPPORTED_MEDIA_TYPE,"Please, provide a valid image");let x=await new O(...N).upload();if(x.length===0)throw c.controller(re.INTERNAL_SERVER_ERROR,"Can't save image");y=x[0]}await n.update({name:a,nameAr:i,image:y},{fields:["name","nameAr","image"],transaction:r}),e.status(re.OK).json({success:!0,data:{category:n.dataValues}})},async remove(t,e,s,r){await e.locals.category.destroy({force:!1,transaction:r}),e.status(re.OK).json({success:!0})}};import{StatusCodes as M}from"http-status-codes";var{product:Os}=q,{Create:pn,Update:mn}=E.req.api.dashboard.store.products,As={async all(t,e,s,r){let o=e.locals.store,a=await Os.all(o.dataValues.id,r);e.status(M.OK).json({success:!0,data:{products:a}})},async product(t,e,s,r){let o=e.locals.product,a=await Os.one(o.dataValues.id,r);e.status(M.OK).json({success:!0,data:{...a}})},async create(t,e,s,r){let{Body:o}=pn,{title:a,titleAr:i,description:n,descriptionAr:u,quality:y,stock:I,price:O,discount:N,categoryId:x,infos:v,tags:w,sizes:D,colors:me}=o.parse(t.body),xe=t.files;if(xe===void 0)throw c.controller(M.BAD_REQUEST,"Please, provide images");let{FileConverter:Ye,FileUploader:Dt}=K.file,{models:it=[],images:ke=[]}=xe;if(ke.length===0)throw c.controller(M.BAD_REQUEST,"Please provide at least one image");let Le=await new Ye(...it.map(T=>T.buffer),...ke.map(T=>T.buffer)).convert();if(Le.length===0)throw c.controller(M.UNSUPPORTED_MEDIA_TYPE,"Invalid provided files");let z=await new Dt(...Le).upload();if(z.length===0)throw c.server(M.INTERNAL_SERVER_ERROR,"Can't save your files");let{Product:nt,ProductColor:ct,ProductImage:dt,ProductSize:lt,ProductInfo:ut,ProductTag:xt,Tag:H}=m.db,X=await nt.create({title:a,titleAr:i,description:n,descriptionAr:u,quality:y,stock:I,price:O,discount:N,categoryId:x,model:z.find(T=>T.endsWith(".glb"))},{fields:["title","titleAr","description","descriptionAr","quality","stock","price","discount","categoryId","model"],returning:!0,transaction:r}).catch(T=>{throw c.server(M.INTERNAL_SERVER_ERROR,T?.message??"Can't create product",{files:z})}),_e=v.split(",").map(T=>T.trim()).filter(T=>T.length>0);if(_e.length%2!==0)throw c.controller(M.BAD_REQUEST,"Please provide both the english and arabic version in infos");let Lt=D.split(",").map(T=>T.trim()).filter(T=>T.length>0),_t=w.split(",").map(T=>T.trim()).filter(T=>T.length>0),Ft=me.split(",").map(T=>T.trim()).filter(T=>T.length>0),{store:Gt}=e.locals,pt=await Promise.all(_t.map(T=>H.findOrCreate({attributes:["id"],where:{tag:T},fields:["tag","storeId"],defaults:{tag:T,storeId:Gt.dataValues.id},transaction:r}))).catch(T=>{throw c.server(M.INTERNAL_SERVER_ERROR,T?.message??"Can't find or create tag",{files:z})}),mt=[];for(let T=0;T<_e.length;T+=2){let Vt=_e[T],ta=_e[T+1];mt.push({info:Vt,infoAr:ta,productId:X.dataValues.id})}let R=z.filter(T=>T.endsWith(".webp"));await Promise.all([dt.bulkCreate(R.map(T=>({image:T,productId:X.dataValues.id})),{fields:["image","productId"],transaction:r}),ut.bulkCreate(mt,{fields:["info","infoAr","productId"],transaction:r}),ct.bulkCreate(Ft.map(T=>({color:T,productId:X.dataValues.id})),{fields:["color","productId"],transaction:r}),lt.bulkCreate(Lt.map(T=>({size:T,productId:X.dataValues.id})),{fields:["size","productId"],transaction:r}),xt.bulkCreate(pt.map(([T])=>({tagId:T.dataValues.id,productId:X.dataValues.id})),{fields:["tagId","productId"],transaction:r})]).catch(T=>{throw c.server(M.INTERNAL_SERVER_ERROR,T?.message??"Can't complete product promises",{files:z})}),e.status(M.CREATED).json({success:!0})},async update(t,e,s,r){let{Body:o}=mn,{title:a,titleAr:i,description:n,descriptionAr:u,quality:y,stock:I,price:O,discount:N,categoryId:x,deletedImages:v,infos:w,tags:D,sizes:me,colors:xe}=o.parse(t.body),{FileConverter:Ye,FileUploader:Dt}=K.file,{models:it=[],images:ke=[]}=t.files,Le=await new Ye(...it.map(R=>R.buffer),...ke.map(R=>R.buffer)).convert();if(Le.length===0&&(it.length>0||ke.length>0))throw c.controller(M.UNSUPPORTED_MEDIA_TYPE,"Invalid provided files");let z=await new Dt(...Le).upload();if(z.length===0&&Le.length>0)throw c.server(M.INTERNAL_SERVER_ERROR,"Can't save your files");let{ProductColor:nt,ProductImage:ct,ProductSize:dt,ProductInfo:lt,ProductTag:ut,Tag:xt}=m.db,H=e.locals.product;await H.update({title:a,titleAr:i,description:n,descriptionAr:u,quality:y,stock:I,price:O,discount:N,categoryId:x,model:z.find(R=>R.endsWith(".glb"))??H.dataValues.model},{fields:["title","titleAr","description","descriptionAr","quality","stock","price","discount","categoryId","model"],transaction:r}).catch(R=>{throw c.server(M.INTERNAL_SERVER_ERROR,R?.message??"Can't update product",{files:z})}),await Promise.all([lt.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),nt.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),dt.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),ut.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),ct.destroy({force:!1,where:{productId:H.dataValues.id,id:v.split(",").map(R=>R.trim()).filter(R=>R.length>0)},transaction:r})]).catch(R=>{throw c.server(M.INTERNAL_SERVER_ERROR,R?.message??"Can't complete delete product promise",{files:z})});let X=w.split(",").map(R=>R.trim()).filter(R=>R.length>0);if(X.length%2!==0)throw c.controller(M.BAD_REQUEST,"Please provide both the english and arabic version in infos");let _e=me.split(",").map(R=>R.trim()).filter(R=>R.length>0),Lt=D.split(",").map(R=>R.trim()).filter(R=>R.length>0),_t=xe.split(",").map(R=>R.trim()).filter(R=>R.length>0),Ft=e.locals.store,Gt=await Promise.all(Lt.map(R=>xt.findOrCreate({attributes:["id"],where:{tag:R},fields:["tag","storeId"],defaults:{tag:R,storeId:Ft.dataValues.id},transaction:r}))).catch(R=>{throw c.server(M.INTERNAL_SERVER_ERROR,R?.message??"Can't find or create tag",{files:z})}),pt=[];for(let R=0;R<X.length;R+=2){let T=X[R],Vt=X[R+1];pt.push({info:T,infoAr:Vt,productId:H.dataValues.id})}let mt=z.filter(R=>R.endsWith(".webp"));await Promise.all([ct.bulkCreate(mt.map(R=>({image:R,productId:H.dataValues.id})),{fields:["image","productId"],transaction:r}),lt.bulkCreate(pt,{fields:["info","infoAr","productId"],transaction:r}),nt.bulkCreate(_t.map(R=>({color:R,productId:H.dataValues.id})),{fields:["color","productId"],transaction:r}),dt.bulkCreate(_e.map(R=>({size:R,productId:H.dataValues.id})),{fields:["size","productId"],transaction:r}),ut.bulkCreate(Gt.map(([R])=>({tagId:R.dataValues.id,productId:H.dataValues.id})),{fields:["tagId","productId"],transaction:r})]).catch(R=>{throw c.server(M.INTERNAL_SERVER_ERROR,R?.message??"Can't complete product promises",{files:z})}),e.status(M.OK).json({success:!0})},async remove(t,e,s,r){await e.locals.product.destroy({force:!1,transaction:r}),e.status(M.OK).json({success:!0})}};import{StatusCodes as wr}from"http-status-codes";var Ns={async products(t,e,s,r){let o=e.locals.store,{stats:a}=q.store,i=await a.products(o.dataValues.id,r);e.status(wr.OK).json({success:!0,data:{products:i}})},async categories(t,e,s,r){let o=e.locals.store,{stats:a}=q.store,i=await a.categories(o.dataValues.id,r);e.status(wr.OK).json({success:!0,data:{categories:i}})},async orders(t,e,s,r){let o=e.locals.store,{stats:a}=q.store,i=await a.orders(o.dataValues.id,r);e.status(wr.OK).json({success:!0,data:{orders:i}})}};import{StatusCodes as Ue}from"http-status-codes";var{OrderId:Ss}=E.id,{Patch:fn}=E.req.api.dashboard.store.orders,ws={async all(t,e,s,r){let o=e.locals.store,{all:a}=q.store.orders,i=await a(o.dataValues.id,r);e.status(Ue.OK).json({success:!0,data:{orders:i}})},async order(t,e,s,r){let{orderId:o}=Ss.parse(t.params),a=e.locals.store,{orders:i}=q.store,n=await i.order(a.dataValues.id,o,r);e.status(Ue.OK).json({success:!0,data:{order:n}})},async patch(t,e,s,r){let{Query:o}=fn,[{orderId:a},{status:i}]=await Promise.all([Ss.parseAsync(t.params),o.parseAsync(t.query)]),{Order:n}=m.db,u=await n.findOne({where:{id:a},limit:1,plain:!0,transaction:r});if(u===null)throw c.controller(Ue.NOT_FOUND,"Order not found");if(u.dataValues.canceledAt!==null)throw c.controller(Ue.FORBIDDEN,"Order already canceled");if(u.dataValues.doneAt!==null)throw c.controller(Ue.FORBIDDEN,"Order already delivered");if(i==="wait")throw c.controller(Ue.FORBIDDEN,`Can't set status to "wait"`);await u.update({status:i,processedAt:i==="process"?new Date:null,doneAt:i==="done"?new Date:null,canceledAt:i==="canceled"?new Date:null},{fields:["status"],transaction:r}),e.status(Ue.OK).json({success:!0})}};var{Update:En}=E.req.api.dashboard.store,Ps={async profile(t,e){let{store:s}=e.locals,{Category:r,Product:o}=m.db,a=await r.findAll({attributes:["id"],where:{storeId:s.dataValues.id}}),i=await o.count({attributes:["categoryId"],where:{[Rn.or]:{categoryId:a.map(n=>n.dataValues.id)}},group:"categoryId"});e.status(qe.OK).json({success:!0,data:{store:s.dataValues,count:{categories:a.length,products:i}}})},async update(t,e,s,r){let{Body:o}=En,{name:a}=o.parse(t.body),{store:i}=e.locals;if(i===void 0)throw c.server(qe.INTERNAL_SERVER_ERROR,"Unprovided local store (seller:update)");let n=i.dataValues.image,u=t.file;if(u!==void 0&&u.buffer.length>0){let{FileConverter:y,FileUploader:I}=K.file,O=await new y(u.buffer).convert();if(O.length===0)throw c.controller(qe.UNSUPPORTED_MEDIA_TYPE,"Invalid image format");let N=await new I(...O).upload();if(N.length===0)throw c.server(qe.INTERNAL_SERVER_ERROR,"Can't upload your image");n=N[0]}await i.update({name:a,image:n},{fields:["name","image"],transaction:r}),e.status(qe.OK).json({success:!0,data:{store:i.dataValues}})},async remove(t,e,s,r){await e.locals.store.destroy({force:!1,transaction:r}),e.status(qe.OK).json({success:!0})},categories:gs,products:As,orders:ws,stats:Ns};import{StatusCodes as hs}from"http-status-codes";var Us={async users(t,e,s,r){let{stats:o}=q.admin,a=await o.users(r);e.status(hs.OK).json({success:!0,data:{users:a}})},async stores(t,e,s,r){let{stats:o}=q.admin,a=await o.stores(r);e.status(hs.OK).json({success:!0,data:{stores:a}})},async orders(){},async products(){},async categories(){}};var Cs={stats:Us};var bs={store:Ps,admin:Cs};var Ds={auth:us,user:Is,stores:Ts,dashboard:bs};import{StatusCodes as xs}from"http-status-codes";var{COOKIE:yn}=A,{Email:In}=E.req.security.access,Ls={async email(t,e,s,r){let{Body:o}=In,{User:a}=m.db,{email:i}=o.parse(t.body),n=await a.findOne({attributes:["id"],where:{email:i},limit:1,transaction:r});if(n===null)throw c.controller(xs.NOT_FOUND,"user not found");let{access:u}=f,{token:y,code:I,key:O,iv:N}=u.token(n.dataValues.id);t.session.access={key:O,iv:N};let{cookieOptions:x}=b.options;e.cookie(yn.TOKEN,y,x);let{Mail:v}=K;await new v(i,"access code",`Code: ${I}`).send(),e.status(xs.CREATED).json({success:!0})}};import{StatusCodes as _s}from"http-status-codes";var{Email:Tn}=E.req.security.validate.user,Fs={async email(t,e,s,r){let{Body:o}=Tn,{email:a}=o.parse(t.body),{User:i}=m.db;if(await i.findOne({attributes:["email"],where:{email:a},limit:1,plain:!0,paranoid:!1,transaction:r})!==null)throw c.controller(_s.CONFLICT,"Email already exists");e.status(_s.OK).json({success:!0})}};import{StatusCodes as ge}from"http-status-codes";var{Name:gn,Category:On,Product:An}=E.req.security.validate.store,Gs={async name(t,e,s,r){let{Body:o}=gn,{name:a}=o.parse(t.body),{Store:i}=m.db;if(await i.findOne({attributes:["name"],where:{name:a},limit:1,plain:!0,paranoid:!1,transaction:r})!==null)throw c.controller(ge.CONFLICT,"Store name already exists");e.status(ge.OK).json({success:!0})},async category(t,e,s,r){let{Body:o}=On,{name:a,nameAr:i}=o.parse(t.body),n=e.locals.store,{Category:u}=m.db,[y,I]=await Promise.all([u.findOne({attributes:["name"],where:{name:a,storeId:n.dataValues.id},limit:1,plain:!0,paranoid:!1,transaction:r}),u.findOne({attributes:["nameAr"],where:{nameAr:i,storeId:n.dataValues.id},limit:1,plain:!0,paranoid:!1,transaction:r})]);if(y!==null)throw c.controller(ge.CONFLICT,"Category name already exists");if(I!==null)throw c.controller(ge.CONFLICT,"Category arabic name already exists");e.status(ge.OK).json({success:!0})},async product(t,e,s,r){let{Body:o}=An,{title:a,titleAr:i}=o.parse(t.body),{Product:n}=m.db,[u,y]=await Promise.all([n.findOne({attributes:["title"],where:{title:a},limit:1,plain:!0,paranoid:!1,transaction:r}),n.findOne({attributes:["titleAr"],where:{titleAr:i},limit:1,plain:!0,paranoid:!1,transaction:r})]);if(u!==null)throw c.controller(ge.CONFLICT,"Product name already exists");if(y!==null)throw c.controller(ge.CONFLICT,"Product arabic name already exists");e.status(ge.OK).json({success:!0})}};import{StatusCodes as tt}from"http-status-codes";var{COOKIE:Nn}=A,{Token:Sn}=E.req.security.validate.access,Vs={async token(t,e){let s=`${t.cookies?.[Nn.TOKEN]??""}`;if(s.length===0)throw c.controller(tt.BAD_REQUEST,"Empty access token");let r=t.session.access?.key??"";if(r.length===0)throw c.server(tt.FORBIDDEN,"Invalid access key");let o=t.session.access?.iv??"";if(o.length===0)throw c.server(tt.FORBIDDEN,"Invalid access iv");let{Body:a}=Sn,{code:i}=a.parse(t.body),{access:n}=f;if(!n.verify(s,r,o,i).valid)throw c.controller(tt.FORBIDDEN,"Invalid access token");e.status(tt.OK).json({success:!0})}};var Ms={access:Vs,user:Fs,store:Gs};var vs={access:Ls,validate:Ms};var U={api:Ds,security:vs};var{upload:Pr}=b,{handleAsync:j}=f.fn,{UPLOAD:Pn}=A,{fn:{isAuthenticated:hn,notAuthenticated:St},security:{access:Un}}=V,{signUp:Cn,signIn:bn,signOut:Dn,me:xn,verifyEmail:Ln,forgotPassword:_n}=U.api.auth,Oe=wn();Oe.post("/sign-up",j(St),j(Pr.single(Pn.IMAGE)),j(Cn));Oe.post("/sign-in",j(St),j(Pr.none()),j(bn));Oe.post("/sign-out",j(hn),j(Dn));Oe.post("/me",j(St),j(xn));Oe.put("/verify-email",j(Ln));Oe.put("/forgot-password",j(St),j(Pr.none()),j(Un),j(_n));import{Router as Kn}from"express";import{Router as Fn}from"express";var{upload:Gn}=b,{PARAMS:hr}=A.REQUEST,{checkOrder:Ur}=V.fn,{handleAsync:de}=f.fn,{all:Vn,order:Mn,create:vn,patch:qn,remove:Bn}=U.api.user.orders,Ce=Fn();Ce.get("/",de(Vn));Ce.get(`/:${hr.ID.ORDER}`,de(Ur),de(Mn));Ce.post("/",de(Gn.none()),de(vn));Ce.patch(`/:${hr.ID.ORDER}`,de(Ur),de(qn));Ce.delete(`/:${hr.ID.ORDER}`,de(Ur),de(Bn));var{IMAGE:qs}=A.UPLOAD,{upload:Cr}=b,{handleAsync:Ae}=f.fn,{profile:Yn,setting:kn,becomeSeller:jn,update:zn,remove:Hn}=U.api.user,Ne=Kn();Ne.get("/",Ae(Yn));Ne.patch("/setting",Ae(Cr.none()),Ae(kn));Ne.post("/become-seller",Ae(Cr.single(qs)),Ae(jn));Ne.put("/",Ae(Cr.single(qs)),Ae(zn));Ne.delete("/",Ae(Hn));Ne.use("/orders",Ce);import{Router as Qn}from"express";var{PARAMS:Be}=A.REQUEST,{handleAsync:Z}=f.fn,{checkStore:br,checkCategory:Bs,checkProduct:$n}=V.api.store,{search:Jn,all:Wn,store:Zn,category:Xn,product:ec}=U.api.stores,le=Qn();le.get("/search",Z(Jn));le.get("/",Z(Wn));le.get("/categories");le.get("/products");le.get(`/:${Be.ID.STORE}`,Z(br),Z(Zn));le.get(`/:${Be.ID.STORE}/:${Be.ID.CATEGORY}`,Z(br),Z(Bs),Z(Xn));le.get(`/:${Be.ID.STORE}/:${Be.ID.CATEGORY}/:${Be.ID.PRODUCT}`,Z(br),Z(Bs),Z($n),Z(ec));import{Router as xc}from"express";import{Router as Ac}from"express";import{Router as tc}from"express";var rt=tc(),{products:rc,categories:oc,orders:sc}=U.api.dashboard.store.stats,{handleAsync:Dr}=f.fn;rt.get("/products",Dr(rc));rt.get("/categories",Dr(oc));rt.get("/orders",Dr(sc));import{Router as ac}from"express";var{upload:Ks}=b,{handleAsync:oe}=f.fn,{REQUEST:{PARAMS:xr},UPLOAD:{IMAGE:Ys}}=A,{isCategoryOwner:Lr}=V.api.store,{all:ic,category:nc,create:cc,update:dc,remove:lc}=U.api.dashboard.store.categories,be=ac();be.get("/",oe(ic));be.get(`/:${xr.ID.CATEGORY}`,oe(Lr),oe(nc));be.post("/",oe(Ks.single(Ys)),oe(cc));be.put(`/:${xr.ID.CATEGORY}`,oe(Lr),oe(Ks.single(Ys)),oe(dc));be.delete(`/:${xr.ID.CATEGORY}`,oe(Lr),oe(lc));import{Router as uc}from"express";var{REQUEST:_r}=A,{upload:pc}=b,{handleAsync:ue}=f.fn,{isProductOwner:Fr}=V.api.store,{all:mc,product:fc,create:Rc,update:Ec,remove:yc}=U.api.dashboard.store.products,De=uc();De.get("/",ue(mc));De.get(`/:${_r.PARAMS.ID.PRODUCT}`,ue(Fr),ue(fc));De.post("/",ue(pc.fields([{name:"models",maxCount:1},{name:"images"}])),ue(Rc));De.put(`/:${_r.PARAMS.ID.PRODUCT}`,ue(Fr),ue(Ec));De.delete(`/:${_r.PARAMS.ID.PRODUCT}`,ue(Fr),ue(yc));import{Router as Ic}from"express";var{REQUEST:ks}=A,ot=Ic(),{all:Tc,order:gc,patch:Oc}=U.api.dashboard.store.orders,{handleAsync:Gr}=f.fn;ot.get("/",Gr(Tc));ot.get(`/:${ks.PARAMS.ID.ORDER}`,Gr(gc));ot.patch(`/:${ks.PARAMS.ID.ORDER}`,Gr(Oc));var{upload:Nc}=b,{IMAGE:Sc}=A.UPLOAD,{handleAsync:wt}=f.fn,{profile:wc,update:Pc,remove:hc}=U.api.dashboard.store,pe=Ac();pe.get("/",wt(wc));pe.put("/",wt(Nc.single(Sc)),wt(Pc));pe.delete("/",wt(hc));pe.use("/stats",rt);pe.use("/categories",be);pe.use("/products",De);pe.use("/orders",ot);import{Router as Dc}from"express";import{Router as Uc}from"express";var Pt=Uc(),{users:Cc,stores:bc}=U.api.dashboard.admin.stats,{handleAsync:js}=f.fn;Pt.get("/users",js(Cc));Pt.get("/stores",js(bc));var Vr=Dc();Vr.use("/stats",Pt);var{handleAsync:zs}=f.fn,{api:{store:{isSeller:Lc},admin:{isAdmin:_c}}}=V,ht=xc();ht.use("/store",zs(Lc),pe);ht.use("/admin",zs(_c),Vr);var{isAuthenticated:Hs}=V.fn,{handleAsync:Qs}=f.fn,Ke=Fc();Ke.use("/auth",Oe);Ke.use("/user",Qs(Hs),Ne);Ke.use("/stores",le);Ke.use("/dashboard",Qs(Hs),ht);import{Router as Xc}from"express";import{Router as Gc}from"express";var{upload:Vc}=b,{handleAsync:$s}=f.fn,{email:Mc}=U.security.access,Mr=Gc();Mr.post("/email",$s(Vc.none()),$s(Mc));import{Router as Jc}from"express";import{Router as vc}from"express";var{upload:qc}=b,{handleAsync:vr}=f.fn,{notAuthenticated:Bc}=V.fn,{email:Kc}=U.security.validate.user,qr=vc();qr.post("/email",vr(Bc),vr(qc.none()),vr(Kc));import{Router as Yc}from"express";var{upload:Br}=b,{handleAsync:Se}=f.fn,{isSeller:Js}=V.api.store,{name:kc,category:jc,product:zc}=U.security.validate.store,st=Yc();st.post("/name",Se(Br.none()),Se(kc));st.post("/category",Se(Js),Se(Br.none()),Se(jc));st.post("/product",Se(Js),Se(Br.none()),Se(zc));import{Router as Hc}from"express";var Kr=Hc(),{token:Qc}=U.security.validate.access,{handleAsync:Ws}=f.fn,{upload:$c}=b;Kr.post("/token",Ws($c.none()),Ws(Qc));var at=Jc(),{handleAsync:Wc}=f.fn,{isAuthenticated:Zc}=V.fn;at.use("/access",Kr);at.use("/user",qr);at.use("/store",Wc(Zc),st);var Ut=Xc();Ut.use("/validate",at);Ut.use("/access",Mr);var Ct=ed();Ct.use("/api",Ke);Ct.use("/security",Ut);var P=bt();P.set("env",k.NODE.ENV);P.set("trust proxy",1);P.disable("x-powered-by");P.disable("view cache");P.enable("json escape");P.enable("etag");var{TIME:md,PACKAGE:fd}=S,{COOKIE:Rd,HTTP:Yr}=A;if(!IS_PRODUCTION){let t=(await import("errorhandler")).default;P.use(t({log:!0}))}var{tmp:Ed,app:{initLimiter:yd,initSession:Id},swagger:Td,options:gd}=b;await Ed.initTmpDir();var Xs=Td.init();P.use(ad(md.MINUTE*5));P.use(dd(async(t,e,s)=>{let{RESPONSE_TIME:r}=Yr.HEADERS;if(e.setHeader(r,s),IS_PRODUCTION)return;let{method:o,originalUrl:a}=t,{statusCode:i}=e,{ResponseTime:n}=m.db,{nowInSecond:u}=f.fn;await n.create({date:u(),time:s,method:o,path:a,statusCode:i},{fields:["date","time","method","path","statusCode"]})}));P.use(cd({credentials:!0,origin:(t,e)=>e(null,t)}));P.use(yd());P.use(Zs({level:9,filter(t,e){let{getHeader:s}=f.fn,{NO_COMPRESSION:r}=Yr.HEADERS,o=s(t.headers,r),{toBoolean:a}=E.validators;return a.parse(o)?!1:Zs.filter(t,e)}}));P.use(id(Yr.HEADERS.METHOD_OVERRIDE));P.use(od(IS_PRODUCTION?"combined":"dev"));P.use(bt.urlencoded({extended:!0}));P.use(bt.json({limit:"10mb"}));P.use(nd(k.COOKIE.PARSER));P.use(ud(k.COOKIE.SECRET));P.use(sd());P.use(td());P.use(rd({store:Id(),name:Rd.SESSION,secret:k.SESSION.SECRET,resave:!1,saveUninitialized:!1,proxy:!0,cookie:gd.cookieOptions}));P.use(ce.initialize());P.use(ce.session());P.use(ld.mw());P.use(`/v${fd.VERSION}`,Ct);P.use(bt.static(pd.join(__root,A.GLOBAL.PUBLIC),{etag:!0}));P.use("/docs",Xs.serve,Xs.ui);P.all("*",async(t,e)=>e.status(ea.NOT_FOUND).json({success:!1}));P.use(async(t,e,s,r)=>{await $.handleError(t),s.status(ea.INTERNAL_SERVER_ERROR).json({success:!1,message:"Server error"})});process.on("unhandledRejection",t=>{throw t});process.on("uncaughtException",async t=>{await Promise.all([$.handleError(t),sequelize.close()]),process.exit(1)});var uI=P;export{uI as default};
