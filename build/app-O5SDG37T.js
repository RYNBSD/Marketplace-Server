import{a as B,b as k,c as A,d as N,e as ze,f as Tt,g as C,h as Hr}from"./chunk-ETOO5GGJ.js";import _t from"express";import Zs from"compression";import cd from"hpp";import dd from"express-session";import ld from"morgan";import ud from"helmet";import pd from"connect-timeout";import md from"method-override";import fd from"cookie-parser";import Rd from"cors";import Ed from"response-time";import yd from"request-ip";import{StatusCodes as ea}from"http-status-codes";import Id from"cookie-encrypter";import Td from"path";import{randomBytes as Go,createCipheriv as an,createDecipheriv as nn}from"node:crypto";var kt={};B(kt,{Category:()=>da,CategoryViewer:()=>la,Order:()=>Oa,Product:()=>ua,ProductColor:()=>Ea,ProductImage:()=>ma,ProductInfo:()=>pa,ProductRating:()=>fa,ProductSize:()=>Ra,ProductTag:()=>Ta,ProductViewer:()=>ya,ResponseTime:()=>ga,ServerError:()=>Aa,Store:()=>aa,StoreLink:()=>ia,StoreSetting:()=>na,StoreViewer:()=>ca,Tag:()=>Ia,User:()=>oa,UserSetting:()=>sa});import{z as l}from"zod";var ee=l.object({id:l.number()}),Fe=l.object({id:l.string().uuid()}).strict(),Ot=l.object({userId:l.string().uuid()}).strict(),Kt=l.object({userId:l.string().uuid().nullable()}).strict(),He=l.object({storeId:l.string().uuid()}).strict(),Qr=l.object({categoryId:l.string().uuid()}).strict(),Re=l.object({productId:l.string().uuid()}).strict(),ra=l.object({tagId:l.string().uuid()}).strict(),Yt=l.object({ip:l.string().nullable()}).strict(),oa=l.object({username:l.string(),email:l.string(),emailVerified:l.date().nullable(),password:l.string(),image:l.string()}).merge(Fe).strict(),sa=l.object({theme:l.enum(C.THEMES),locale:l.enum(C.LOCALE),forceTheme:l.boolean(),disableAnimations:l.boolean()}).merge(Ot).strict(),aa=l.object({name:l.string(),image:l.string()}).merge(Fe).merge(Ot).strict(),na=l.object({}).merge(He).strict(),ia=l.object({platform:l.enum(C.PLATFORMS),link:l.string().url()}).merge(Fe).merge(He).strict(),ca=l.object({}).merge(ee).merge(He).merge(Kt).merge(Yt).strict(),da=l.object({name:l.string(),nameAr:l.string(),image:l.string()}).merge(Fe).merge(He).strict(),la=l.object({}).merge(ee).merge(Qr).merge(Kt).merge(Yt).strict(),ua=l.object({title:l.string(),titleAr:l.string(),description:l.string().nullable(),descriptionAr:l.string().nullable(),quality:l.enum(C.QUALITY),stock:l.number(),model:l.string().nullable(),price:l.number(),discount:l.number()}).merge(Fe).merge(Qr).strict(),pa=l.object({info:l.string(),infoAr:l.string()}).merge(ee).merge(Re).strict(),ma=l.object({image:l.string()}).merge(ee).merge(Re).strict(),fa=l.object({rate:l.enum(C.RATING_STARS),comment:l.string()}).merge(Ot).merge(Re).strict(),Ra=l.object({size:l.string()}).merge(ee).merge(Re).strict(),Ea=l.object({color:l.string()}).merge(ee).merge(Re).strict(),ya=l.object({}).merge(ee).merge(Re).merge(Kt).merge(Yt).strict(),Ia=l.object({tag:l.string()}).merge(Fe).merge(He).strict(),Ta=l.object({}).merge(Re).merge(ra).strict(),Oa=l.object({quantity:l.number(),totalPrice:l.number(),status:l.enum(C.ORDER_STATUS),processedAt:l.date().nullable(),doneAt:l.date().nullable(),canceledAt:l.date().nullable()}).merge(ee).merge(Ot).merge(Re).strict(),ga=l.object({date:l.number(),time:l.number(),method:l.string(),path:l.string(),statusCode:l.number()}).merge(ee),Aa=l.object({message:l.string(),stack:l.string().nullable(),statusCode:l.number(),isOperational:l.boolean(),handler:l.enum(A.ERROR.HANDLERS)}).merge(ee);var Qt={};B(Qt,{CategoryId:()=>Sa,OrderId:()=>Na,ProductId:()=>Ht,StoreId:()=>zt});import{z as Ee}from"zod";var{REQUEST:{PARAMS:gt}}=A,{MIN:jt}=N.LENGTH,zt=Ee.object({[gt.ID.STORE]:Ee.string().trim().min(jt.REQUIRED).uuid()}),Sa=Ee.object({[gt.ID.CATEGORY]:Ee.string().trim().min(jt.REQUIRED).uuid()}),Ht=Ee.object({[gt.ID.PRODUCT]:Ee.string().trim().min(jt.REQUIRED).uuid()}),Na=Ee.object({[gt.ID.ORDER]:Ee.coerce.number().min(0)});var $t={};B($t,{Access:()=>Wr,Csrf:()=>$r,Passport:()=>Jr,Session:()=>wa});import{z as ye}from"zod";var $r=ye.object({secret:ye.string().trim().min(1)}).strict().optional(),Jr=ye.object({user:ye.string().trim().min(1).uuid()}).strict().optional(),Wr=ye.object({key:ye.string().trim().min(1),iv:ye.string().trim().min(1)}).strict().optional(),wa=ye.object({csrf:$r,passport:Jr,access:Wr}).strict();import{z as we}from"zod";var{MIN:Pa}=N.LENGTH,Zr={isUUID:we.string().trim().min(Pa.REQUIRED).uuid(),isNullish:we.unknown().nullish(),toBoolean:we.coerce.boolean(),toString:we.coerce.string(),toBigint:we.coerce.bigint(),toNumber:we.coerce.number(),toDate:we.coerce.date()};import{z as te}from"zod";var{MAX:Xr,MIN:Jt,PASSWORD:eo}=N.LENGTH,to={SignUp:{Body:te.object({username:te.string().trim().min(Jt.REQUIRED).max(Xr.USER.USERNAME),email:te.string().trim().min(Jt.REQUIRED).email().max(Xr.USER.EMAIL),password:te.string().trim().min(eo),theme:te.enum(C.THEMES),locale:te.enum(C.LOCALE)})},VerifyEmail:{Query:te.object({token:te.string().trim().min(Jt.REQUIRED).uuid()})},ForgotPassword:{Body:te.object({password:te.string().trim().min(eo)})}};import{z as Ge}from"zod";var{MIN:At,LIMIT:ro}=N.LENGTH,oo={Search:{Query:Ge.object({s:Ge.string().trim().min(At.REQUIRED),limit:Ge.coerce.number().min(At.REQUIRED).default(ro)})},Stores:{Query:Ge.object({lastStoreId:Ge.string().trim().min(At.REQUIRED).uuid().optional(),limit:Ge.coerce.number().min(At.REQUIRED).default(ro)})},Home:{Params:zt}};import{z as se}from"zod";import{z as Pe}from"zod";var so={Create:{Body:Pe.object({orders:Pe.array(Pe.object({quantity:Pe.coerce.number().min(0),totalPrice:Pe.coerce.number().min(0)}).merge(Ht))})},Update:{Query:Pe.object({quantity:Pe.coerce.number().min(1)})}};var{MIN:ao,MAX:no}=N.LENGTH,io={Setting:{Body:se.object({theme:se.enum(C.THEMES),locale:se.enum(C.LOCALE),forceTheme:se.coerce.boolean(),disableAnimations:se.coerce.boolean()})},BecomeSeller:{Body:se.object({name:se.string().trim().min(ao.REQUIRED).max(no.STORE.NAME)})},Update:{Body:se.object({username:se.string().trim().min(ao.REQUIRED).max(no.USER.USERNAME)})},orders:so};import{z as fo}from"zod";import{z as ae}from"zod";var{MIN:St,MAX:Nt,LIMIT:ha}=N.LENGTH,co={All:{Query:ae.object({page:ae.coerce.number().min(1),limit:ae.coerce.number().min(1).default(ha)})},Create:{Body:ae.object({name:ae.string().trim().min(St.REQUIRED).max(Nt.CATEGORY.NAME),nameAr:ae.string().trim().min(St.REQUIRED).max(Nt.CATEGORY.NAME)})},Update:{Body:ae.object({name:ae.string().trim().min(St.REQUIRED).max(Nt.CATEGORY.NAME),nameAr:ae.string().trim().min(St.REQUIRED).max(Nt.CATEGORY.NAME)})}};import{z as h}from"zod";var{QUALITY:lo}=C,{MIN:ne,MAX:Ie}=N.LENGTH,uo={Create:{Body:h.object({title:h.string().trim().min(ne.REQUIRED).max(Ie.PRODUCT.TITLE),titleAr:h.string().trim().min(ne.REQUIRED).max(Ie.PRODUCT.TITLE),description:h.string().trim().max(Ie.PRODUCT.DESCRIPTION),descriptionAr:h.string().trim().max(Ie.PRODUCT.DESCRIPTION),quality:h.enum(lo),stock:h.coerce.number().min(ne.REQUIRED),price:h.coerce.number().min(ne.REQUIRED),discount:h.coerce.number().min(0).max(100),categoryId:h.string().trim().min(ne.REQUIRED).uuid(),infos:h.string().trim(),sizes:h.string().trim(),tags:h.string().trim(),colors:h.string().trim()})},Update:{Body:h.object({title:h.string().trim().min(ne.REQUIRED).max(Ie.PRODUCT.TITLE),titleAr:h.string().trim().min(ne.REQUIRED).max(Ie.PRODUCT.TITLE),description:h.string().trim().max(Ie.PRODUCT.DESCRIPTION),descriptionAr:h.string().trim().max(Ie.PRODUCT.DESCRIPTION),quality:h.enum(lo),stock:h.coerce.number().min(0),price:h.coerce.number().min(ne.REQUIRED),discount:h.coerce.number().min(0).max(100),categoryId:h.string().trim().min(ne.REQUIRED).uuid(),deletedImages:h.string().trim(),infos:h.string().trim(),sizes:h.string().trim(),tags:h.string().trim(),colors:h.string().trim()})}};import{z as po}from"zod";var mo={Patch:{Query:po.object({status:po.enum(ze)})}};var{MIN:Ua,MAX:Ca}=N.LENGTH,Ro={Update:{Body:fo.object({name:fo.string().trim().min(Ua.REQUIRED).max(Ca.STORE.NAME)})},categories:co,products:uo,orders:mo};var Eo={};var yo={store:Ro,admin:Eo};var Io={auth:to,user:io,store:oo,dashboard:yo};import{z as Ve}from"zod";var{PASSWORD:To,MIN:Da}=N.LENGTH,Oo={Email:{Middleware:{Body:Ve.object({code:Ve.string().length(6),password:Ve.string().trim().min(To),confirmPassword:Ve.string().trim().min(To)})},Body:Ve.object({email:Ve.string().trim().min(Da.REQUIRED).email()})}};import{z as go}from"zod";var{MIN:ba}=N.LENGTH,Ao={Email:{Body:go.object({email:go.string().trim().min(ba.REQUIRED).email()})}};import{z as Te}from"zod";var{MIN:Qe,MAX:$e}=N.LENGTH,So={Name:{Body:Te.object({name:Te.string().trim().min(Qe.REQUIRED).max($e.STORE.NAME)})},Category:{Body:Te.object({name:Te.string().trim().min(Qe.REQUIRED).max($e.CATEGORY.NAME),nameAr:Te.string().trim().min(Qe.REQUIRED).max($e.CATEGORY.NAME)})},Product:{Body:Te.object({title:Te.string().trim().min(Qe.REQUIRED).max($e.PRODUCT.TITLE),titleAr:Te.string().trim().min(Qe.REQUIRED).max($e.PRODUCT.TITLE)})}};import{z as No}from"zod";var{MIN:xa}=N.LENGTH,wo={Token:{Body:No.object({code:No.string().trim().min(xa.REQUIRED)})}};var Po={access:wo,user:Ao,store:So};var ho={access:Oo,validate:Po};var Uo={api:Io,security:ho};var E={db:kt,id:Qt,session:$t,req:Uo,validators:Zr};import{getReasonPhrase as rn,StatusCodes as on}from"http-status-codes";import{readFile as La,writeFile as _a}from"fs/promises";import Wt from"node:path";import Je from"fluent-ffmpeg";import Fa from"sharp";import Ga from"file-type";import{StatusCodes as Va}from"http-status-codes";var{toBoolean:Ma}=E.validators,Zt=class{constructor(){}randomFileName(){return Math.round(Date.now()*Math.random())}async bufferToFile(e,s){let r=this.randomFileName(),o=Wt.join(tmp.path,`${r}.${s}`);return await _a(o,e),o}async fileToBuffer(e){return La(e)}},We=class extends Zt{constructor(...s){super();this.files=[];this.isFfmpegInit=!1;this.cleanTmp=!1;this.files=s}async format(s){return(await Ga.fromBuffer(s))?.ext??""}async ffprobeMetadata(s){return new Promise((r,o)=>{Je.ffprobe(s,(a,n)=>Ma.parse(a)?o(a):r(n))})}async toWebp(s){return Fa(s).webp({quality:100}).toBuffer()}async initFfmpeg(){if(this.isFfmpegInit)return;let[{path:s},{path:r}]=await Promise.all([import("@ffmpeg-installer/ffmpeg"),import("@ffprobe-installer/ffprobe")]);Je.setFfmpegPath(s),Je.setFfprobePath(r)}async toMp4(s,r){this.cleanTmp=!0;let o=await this.bufferToFile(s,r),a=Wt.join(tmp.path,`${this.randomFileName()}.mp4`);return new Promise((n,i)=>{Je(o).fps(30).videoCodec("libx264").audioCodec("aac").audioQuality(0).format("mp4").output(a).on("end",()=>{this.fileToBuffer(a).then(n).catch(i)}).on("error",i).run()})}async toMp3(s,r){this.cleanTmp=!0;let o=await this.bufferToFile(s,r),a=Wt.join(tmp.path,`${this.randomFileName()}.mp3`);return new Promise((n,i)=>{Je(o).audioCodec("libmp3lame").audioBitrate("128k").format("mp3").output(a).on("end",()=>{this.fileToBuffer(a).then(n).catch(i)}).on("error",i).run()})}async toGlb(s){return s}async fileType(s){let r=await this.format(s),o;if(Tt.IMAGE.includes(r))o="image";else if(r==="glb")o="model";else if(Tt.VIDEO.includes(r)){o="video";let a=await this.bufferToFile(s,r),n=await this.ffprobeMetadata(a);if(Math.floor(n.format.duration??1/0)>60)return null}else if(Tt.AUDIO.includes(r)){o="audio";let a=await this.bufferToFile(s,r),n=await this.ffprobeMetadata(a);if(Math.floor(n.format.duration??1/0)>60)return null}else return null;return{buffer:s,type:o,originalExt:r}}async fileConvert(s){let r=s.map(async o=>{switch(o.type){case"image":o.buffer=await this.toWebp(o.buffer);break;case"video":await this.initFfmpeg(),o.buffer=await this.toMp4(o.buffer,o.originalExt);break;case"audio":await this.initFfmpeg(),o.buffer=await this.toMp3(o.buffer,o.originalExt);break;case"model":o.buffer=await this.toGlb(o.buffer);break;default:throw c.server(Va.INTERNAL_SERVER_ERROR,"File converter unhandled convert case")}return o});return Promise.all(r)}async convert(){let s=this.files.map(n=>this.fileType(n)),o=(await Promise.all(s)).filter(n=>n!==null),a=await this.fileConvert(o);return this.cleanTmp&&await tmp.cleanup(),a}};import{rm as va,writeFile as qa}from"node:fs/promises";import{randomUUID as Ba}from"node:crypto";import Xt from"node:path";import{StatusCodes as Ka}from"http-status-codes";var{PUBLIC:Co,UPLOAD:Ya}=A.GLOBAL,Ze=class{constructor(...e){this.files=e}generateUniqueFileName(e){let{nowInSecond:s}=f.fn;return s()+"_"+Ba()+"."+e}async write(e){let s=null;switch(e.type){case"image":s="webp";break;case"video":s="mp4";break;case"audio":s="mp3";break;case"model":s="glb";break;default:throw c.server(Ka.INTERNAL_SERVER_ERROR,"File uploader unhandled write case (ext)")}let r=Xt.join(Ya,e.type,this.generateUniqueFileName(s)),o=Xt.join(__root,Co,r);return await qa(o,e.buffer),"/"+r}async upload(){return Promise.all(this.files.map(e=>this.write(e)))}static async remove(...e){await Promise.all(e.map(s=>va(Xt.join(__root,Co,s),{force:!0})))}};var Do={FileConverter:We,FileUploader:Ze};import{createTransport as ka}from"nodemailer";var Xe=class{constructor(e,s,r){this.options={transport:{service:"gmail",auth:{user:k.MAIL.USER,pass:k.MAIL.PASS}}};this.transport=ka(this.options.transport),this.to=e,this.subject=s,this.html=r}async send(){await this.transport.sendMail({to:this.to,subject:this.subject,html:this.html}),this.transport.close()}static errorTemplate(e){return`
      <pre>
        ${JSON.stringify(e,null,4)}
      </pre>
    `}};var K={file:Do,Mail:Xe};var cr={};B(cr,{Category:()=>ie,CategoryViewer:()=>rr,Order:()=>Pt,Product:()=>G,ProductColor:()=>nr,ProductImage:()=>sr,ProductInfo:()=>or,ProductRating:()=>wt,ProductSize:()=>ar,ProductTag:()=>tt,ProductViewer:()=>ir,ResponseTime:()=>ja,ServerError:()=>za,Store:()=>Q,StoreLink:()=>er,StoreSetting:()=>xo,StoreViewer:()=>tr,Tag:()=>et,User:()=>Y,UserSetting:()=>bo});import{DataTypes as d}from"sequelize";var{ID:p,TABLES:M,MODELS:O}=A.DB,{MAX:L}=N.LENGTH,Y=sequelize.define(O.USER.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},username:{type:d.STRING(L.USER.USERNAME),allowNull:!1},email:{type:d.STRING(L.USER.EMAIL),allowNull:!1,unique:!0},emailVerified:{type:d.DATE,allowNull:!0},password:{type:d.STRING(L.USER.PASSWORD),allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1,unique:!0}},{tableName:M.USER.TABLE,timestamps:!0,paranoid:!0});Y.addHook("afterDestroy",async t=>{await Promise.all([Q.destroy({force:!1,where:{userId:t.dataValues.id}})])});var bo=sequelize.define(O.USER.SETTING,{[p.FOREIGN_KEY.USER]:{primaryKey:!0,type:d.UUID,references:{model:Y,key:"id"}},theme:{type:d.ENUM(...C.THEMES),defaultValue:C.THEMES[0],allowNull:!1},locale:{type:d.ENUM(...C.LOCALE),defaultValue:C.LOCALE[0],allowNull:!1},forceTheme:{type:d.BOOLEAN,defaultValue:!1,allowNull:!1},disableAnimations:{type:d.BOOLEAN,defaultValue:!1,allowNull:!1}},{tableName:M.USER.SETTING,timestamps:!0});Y.hasOne(bo,{foreignKey:p.FOREIGN_KEY.USER,as:O.USER.SETTING});var Q=sequelize.define(O.STORE.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},name:{type:d.STRING(L.STORE.NAME),unique:!0,allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!1,unique:!0,references:{model:Y,key:"id"}}},{tableName:M.STORE.TABLE,timestamps:!0,paranoid:!0});Y.hasOne(Q,{foreignKey:p.FOREIGN_KEY.USER,as:O.STORE.MODEL});Q.addHook("afterDestroy",async t=>{await Promise.all([er.destroy({force:!1,where:{storeId:t.dataValues.id}}),ie.destroy({force:!1,where:{storeId:t.dataValues.id}})])});var xo=sequelize.define(O.STORE.SETTING,{[p.FOREIGN_KEY.STORE]:{primaryKey:!0,type:d.UUID,references:{model:Q,key:"id"}}},{tableName:M.STORE.SETTING,timestamps:!0});Q.hasOne(xo,{foreignKey:p.FOREIGN_KEY.STORE,as:O.STORE.SETTING});var er=sequelize.define(O.STORE.LINK,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},platform:{type:d.ENUM(...C.PLATFORMS),allowNull:!1},link:{type:d.STRING(L.STORE.LINK),allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:M.STORE.LINK,timestamps:!0,paranoid:!0});Q.hasMany(er,{foreignKey:p.FOREIGN_KEY.STORE,as:O.STORE.LINK});var tr=sequelize.define(O.STORE.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!0,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!0},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:M.STORE.VIEWER,createdAt:!0,updatedAt:!1});Q.hasMany(tr,{foreignKey:p.FOREIGN_KEY.STORE,as:O.STORE.VIEWER});Y.hasMany(tr,{foreignKey:p.FOREIGN_KEY.USER,as:O.STORE.SETTING});var ie=sequelize.define(O.CATEGORY.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},name:{type:d.STRING(L.CATEGORY.NAME),allowNull:!1},nameAr:{type:d.STRING(L.CATEGORY.NAME),allowNull:!1},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:M.CATEGORY.TABLE,timestamps:!0,paranoid:!0});Q.hasMany(ie,{foreignKey:p.FOREIGN_KEY.STORE,as:O.CATEGORY.MODEL});ie.addHook("afterDestroy",async t=>{await Promise.all([G.destroy({force:!1,where:{categoryId:t.dataValues.id}})])});var rr=sequelize.define(O.CATEGORY.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!0,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!0},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.CATEGORY]:{type:d.UUID,allowNull:!1,references:{model:ie,key:"id"}}},{tableName:M.CATEGORY.VIEWER,createdAt:!0,updatedAt:!1});ie.hasMany(rr,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:O.CATEGORY.VIEWER});Y.hasMany(rr,{foreignKey:p.FOREIGN_KEY.USER,as:O.CATEGORY.VIEWER});var G=sequelize.define(O.PRODUCT.MODEL,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},title:{type:d.STRING(L.PRODUCT.TITLE),allowNull:!1},titleAr:{type:d.STRING(L.PRODUCT.TITLE),allowNull:!1},description:{type:d.STRING(L.PRODUCT.DESCRIPTION),allowNull:!0},descriptionAr:{type:d.STRING(L.PRODUCT.DESCRIPTION),allowNull:!0},quality:{type:d.ENUM(...C.QUALITY),allowNull:!1},stock:{type:d.SMALLINT.UNSIGNED,allowNull:!1},model:{type:d.STRING(L.PRODUCT.MODEL),allowNull:!0},price:{type:d.DOUBLE.UNSIGNED,allowNull:!1},discount:{type:d.DOUBLE.UNSIGNED,allowNull:!1,defaultValue:0},[p.FOREIGN_KEY.CATEGORY]:{type:d.UUID,allowNull:!1,references:{model:ie,key:"id"}}},{tableName:M.PRODUCT.TABLE,timestamps:!0,paranoid:!0});G.belongsTo(ie,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:O.CATEGORY.MODEL});ie.hasMany(G,{foreignKey:p.FOREIGN_KEY.CATEGORY,as:O.PRODUCT.MODEL});G.addHook("afterDestroy",async t=>{await Promise.all([or.destroy({force:!1,where:{productId:t.dataValues.id}}),sr.destroy({force:!1,where:{productId:t.dataValues.id}}),nr.destroy({force:!1,where:{productId:t.dataValues.id}}),ar.destroy({force:!1,where:{productId:t.dataValues.id}}),wt.destroy({force:!1,where:{productId:t.dataValues.id}}),tt.destroy({force:!1,where:{productId:t.dataValues.id}}),Pt.update({status:"canceled",canceledAt:new Date},{where:{status:["wait","process"]},fields:["status","canceledAt"]})])});var or=sequelize.define(O.PRODUCT.INFO,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},info:{type:d.STRING(L.PRODUCT.INFO),allowNull:!1},infoAr:{type:d.STRING(L.PRODUCT.INFO),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.INFO,timestamps:!0,paranoid:!0});G.hasMany(or,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.INFO});var sr=sequelize.define(O.PRODUCT.IMAGE,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},image:{type:d.STRING(L.IMAGE),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.IMAGE,createdAt:!0,updatedAt:!1,paranoid:!0});G.hasMany(sr,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.IMAGE});var wt=sequelize.define(O.PRODUCT.RATING,{[p.FOREIGN_KEY.USER]:{primaryKey:!0,type:d.UUID,allowNull:!1,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{primaryKey:!0,type:d.UUID,allowNull:!1,references:{model:G,key:"id"}},rate:{type:d.ENUM(...C.RATING_STARS),allowNull:!1},comment:{type:d.STRING(L.PRODUCT.COMMENT),allowNull:!0}},{tableName:M.PRODUCT.RATING,timestamps:!0,paranoid:!0});G.hasMany(wt,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.RATING});Y.hasMany(wt,{foreignKey:p.FOREIGN_KEY.USER,as:O.PRODUCT.RATING});var ar=sequelize.define(O.PRODUCT.SIZE,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},size:{type:d.STRING(L.PRODUCT.SIZE),validate:{is:/\b((xs|s|m|l|xl)|([2-9](xs|xl)))\b/i},allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.SIZE,createdAt:!0,updatedAt:!1,paranoid:!0});G.hasMany(ar,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.SIZE});var nr=sequelize.define(O.PRODUCT.COLOR,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},color:{type:d.STRING(L.PRODUCT.COLOR),allowNull:!1},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.COLOR,createdAt:!0,updatedAt:!1,paranoid:!0});G.hasMany(nr,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.COLOR});var ir=sequelize.define(O.PRODUCT.VIEWER,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,allowNull:!1,primaryKey:!0},ip:{type:d.STRING(32),allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!0,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.VIEWER,createdAt:!0,updatedAt:!1});G.hasMany(ir,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.VIEWER});Y.hasMany(ir,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.VIEWER});var et=sequelize.define(O.TAG,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.UUID,defaultValue:d.UUIDV4},tag:{type:d.STRING(L.TAG),unique:!0,allowNull:!1},[p.FOREIGN_KEY.STORE]:{type:d.UUID,allowNull:!1,references:{model:Q,key:"id"}}},{tableName:M.TAG,createdAt:!0,updatedAt:!1});Q.hasMany(et,{foreignKey:p.FOREIGN_KEY.STORE,as:O.TAG});et.addHook("afterDestroy",async t=>{await Promise.all([tt.destroy({force:!1,where:{tagId:t.dataValues.id}})])});var tt=sequelize.define(O.PRODUCT.TAG,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},[p.FOREIGN_KEY.TAG]:{type:d.UUID,allowNull:!1,references:{model:et,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}}},{tableName:M.PRODUCT.TAG,createdAt:!0,updatedAt:!1,paranoid:!0});G.hasMany(tt,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.PRODUCT.TAG});et.hasMany(tt,{foreignKey:p.FOREIGN_KEY.TAG,as:O.PRODUCT.TAG});var Pt=sequelize.define(O.ORDER,{[p.PRIMARY_KEY.ID]:{primaryKey:!0,type:d.BIGINT.UNSIGNED,autoIncrement:!0},quantity:{type:d.SMALLINT.UNSIGNED,allowNull:!1},totalPrice:{type:d.DOUBLE.UNSIGNED,allowNull:!1},status:{type:d.ENUM(...C.ORDER_STATUS),defaultValue:C.ORDER_STATUS[0],allowNull:!1},[p.FOREIGN_KEY.USER]:{type:d.UUID,allowNull:!1,references:{model:Y,key:"id"}},[p.FOREIGN_KEY.PRODUCT]:{type:d.UUID,allowNull:!1,references:{model:G,key:"id"}},processedAt:{type:d.DATE,allowNull:!0},doneAt:{type:d.DATE,allowNull:!0},canceledAt:{type:d.DATE,allowNull:!0}},{tableName:M.ORDER,timestamps:!0});G.hasMany(Pt,{foreignKey:p.FOREIGN_KEY.PRODUCT,as:O.ORDER});Y.hasMany(Pt,{foreignKey:p.FOREIGN_KEY.USER,as:O.ORDER});var ja=sequelize.define(O.RESPONSE_TIME,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,primaryKey:!0},date:{type:d.INTEGER.UNSIGNED,allowNull:!1},time:{type:d.FLOAT.UNSIGNED,allowNull:!1},method:{type:d.STRING(10),allowNull:!1},path:{type:d.STRING(255),allowNull:!1},statusCode:{type:d.SMALLINT.UNSIGNED,allowNull:!1}},{tableName:M.RESPONSE_TIME,timestamps:!1,paranoid:!1}),za=sequelize.define(O.SERVER_ERROR,{[p.PRIMARY_KEY.ID]:{type:d.BIGINT.UNSIGNED,autoIncrement:!0,primaryKey:!0},message:{type:d.STRING(255),allowNull:!1},stack:{type:d.TEXT,allowNull:!0},statusCode:{type:d.SMALLINT.UNSIGNED,allowNull:!1},isOperational:{type:d.BOOLEAN,allowNull:!1},handler:{type:d.ENUM(...A.ERROR.HANDLERS),allowNull:!1}},{tableName:M.SERVER_ERROR,timestamps:!0});var dr={};B(dr,{tableIndex:()=>$a});import{QueryTypes as Ha}from"sequelize";var{isUUID:Qa}=E.validators;async function $a(t,e){let s=Qa.parse(e);return(await sequelize.query(`
      SELECT row_number FROM (
        SELECT ROW_NUMBER() OVER() AS row_number, id FROM "${t}"
      )
      WHERE id=$id
      LIMIT 1
    `,{type:Ha.SELECT,plain:!0,raw:!0,bind:{id:s}}))?.row_number??0}var lr={};B(lr,{order:()=>Wa,orders:()=>Za});import{QueryTypes as Lo}from"sequelize";var{LENGTH:Ja}=N,{ORDER_STATUS:wu}=C,{isUUID:_o}=E.validators;async function Wa(t){let e=_o.parse(t);return sequelize.query("",{type:Lo.SELECT,raw:!1,bind:{parsedId:e}})}async function Za(t,e="all",s=0){let r=_o.parse(t);return sequelize.query(`
    SELECT
      "Order"."quantity" AS "order.quantity",
      "Order"."totalPrice" AS "order.price",
      "Order"."status" AS "order.status",
      "Product"."title" AS "product.title",
      "Product"."titleAr" AS "product.titleAr",
      "Product"."price" AS "product.price",
      "Product"."discount" AS "product.discount",
      "Product"."description" AS "product.description",
      "Product"."descriptionAr" AS "product.descriptionAr",
      "ProductImage"."image" AS "product.image"
    FROM "Order"
    INNER JOIN "Product" ON "Product"."id" = "Order"."productId"
    INNER JOIN "ProductImage" ON "ProductImage"."productId" = "Product"."id"
    INNER JOIN "User" ON "User"."id" = "Order"."userId"
    WHERE "User"."id" = $id ${e!=="all"?'AND "Order"."status" = $filter':""}
    LIMIT $limit OFFSET $offset
  `,{type:Lo.SELECT,raw:!0,bind:{id:r,filter:e==="all"?"":e,limit:Ja.LIMIT,offset:s}})}var ur={};B(ur,{withProductsCount:()=>tn});import{QueryTypes as Xa}from"sequelize";var{isUUID:en}=E.validators;async function tn(t,e=!0){let s=en.parse(t);return sequelize.query(`
    SELECT "Category"."id", "name", "nameAr", "image", COUNT("Product"."id") AS "count"
    FROM "Category"
    INNER JOIN "Product" ON "Product"."categoryId" = "Category"."id"
    WHERE "Category"."sellerId" = $storeId
    GROUP BY "Category"."id"
    ORDER BY "count" ${e?"DESC":"ASC"}
  `,{type:Xa.SELECT,raw:!0,bind:{sellerId:s}})}var Fo={user:lr,category:ur};var m={db:cr,fn:dr,query:Fo};var{toString:sn}=E.validators,$=class t extends Error{constructor(e,s,r,o,a){super(s),this.statusCode=e,this.statusText=rn(this.statusCode),this.handler=r,this.isOperational=o,this.rollback=a,Object.setPrototypeOf(this,new.target.prototype),Error.captureStackTrace(this)}static async handleError(e){let s=e instanceof Error?e:new Error(sn.parse(e)),r={message:s.message,stack:(s.stack??"").replaceAll(`
`,"<br/>"),statusCode:on.INTERNAL_SERVER_ERROR,isOperational:!1,handler:"server",rollback:null};s instanceof t&&(r.statusCode=s.statusCode,r.handler=s.handler,r.isOperational=s.isOperational,r.rollback=s.rollback);try{let{Mail:o,file:{FileUploader:a}}=K,{ServerError:n}=m.db,i=r.rollback?.files??[];await Promise.all([new o(k.MAIL.USER,`New error - ${r.isOperational?"Catch":"Urgent"} - Status: ${r.statusCode}`,o.errorTemplate(r)).send(),a.remove(...i),n.create(r,{fields:["message","stack","statusCode","isOperational","handler"]})])}catch{IS_PRODUCTION,process.exit(1)}}static checkOperational(e){return e instanceof t?e.isOperational:!1}},c=class{static controller(e,s="",r=null){return new $(e,s,"controller",!0,r)}static middleware(e,s="",r=null){return new $(e,s,"middleware",!0,r)}static socket(e,s="",r=null){return new $(e,s,"socket",!0,r)}static passport(e,s="",r=null){return new $(e,s,"passport",!0,r)}static server(e,s="",r=null){return new $(e,s,"server",!1,r)}};import{StatusCodes as cn}from"http-status-codes";var{isUUID:Vo}=E.validators,Mo=32,vo=16,qo="aes-256-cbc",Bo={token(t){if(!Vo.parse(t))throw c.server(cn.INTERNAL_SERVER_ERROR,"Invalid id type (uuid) to create Access Token");let e=`${t}`,s=Go(Mo),r=Go(vo),o=an(qo,s,r),a=o.update(e,"utf8","base64")+o.final("base64"),n=r.toString("hex"),i=s.toString("hex");return{token:a,iv:n.substring(3),key:i.substring(3),code:i.substring(0,3)+n.substring(0,3)}},verify(t,e,s,r){let o=Buffer.from(t,"base64"),a=r.substring(0,3),n=r.substring(3),i=Buffer.from(a+e,"hex"),u=Buffer.from(n+s,"hex");if(u.length!==vo||i.length!==Mo)return{valid:!1,id:""};let y=nn(qo,i,u),g=Buffer.concat([y.update(o),y.final()]).toString();return g===void 0?{valid:!1,id:""}:Vo.parse(g)?{valid:!0,id:g}:{valid:!1,id:""}}};import{hashSync as dn,genSaltSync as ln,compareSync as un}from"bcrypt";var Ko={hash:t=>dn(t,ln(12)),compare:(t,e)=>un(t,e)};import Yo from"csrf";var ko={generate(){let t=new Yo,e=t.secretSync();return{token:t.create(e),secret:e}},verify:(t,e)=>new Yo().verify(t,e)};import jo from"jsonwebtoken";var zo={sign:(t,e=N.TIME.MONTH)=>jo.sign({data:JSON.stringify(t)},k.JWT.SECRET,{expiresIn:e}),verify(t){let e=null;try{if(e=jo.verify(t,k.JWT.SECRET),e===null)throw new Error;if(typeof e!="object")throw new Error;if(!("data"in e))throw new Error;if(typeof e.data!="string")throw new Error;e=JSON.parse(e.data)}catch{e=null}return e}};var pr={};B(pr,{getHeader:()=>En,handleAsync:()=>fn,nowInSecond:()=>Rn});import{MulterError as pn}from"multer";import{ZodError as mn}from"zod";import{StatusCodes as Ho}from"http-status-codes";function fn(t){return async(e,s,r)=>{let o=await sequelize.transaction();try{await t(e,s,r,o),await o.commit()}catch(a){await Promise.all([$.handleError(a),o.rollback()]);let n=Ho.BAD_REQUEST,i="";if(a instanceof $)n=a.statusCode,i=a.message;else if(a instanceof mn)i=a.flatten().formErrors.join(";");else if(a instanceof pn)n=Ho.FORBIDDEN,i=a.message;else return r(a);s.status(n).json({success:!1,message:i})}}}function Rn(t=0){return Math.floor((Date.now()+t)/N.TIME.SECOND)}function En(t,e){return t[e.toLowerCase()]??""}var f={access:Bo,bcrypt:Ko,csrf:ko,jwt:zo,fn:pr};import Qo from"multer";var mr=Qo({storage:Qo.memoryStorage()});mr.none();import yn from"tmp-promise";var $o={async initTmpDir(){global.tmp=await yn.dir({unsafeCleanup:!0})}};import In from"connect-mongo";import{rateLimit as Tn}from"express-rate-limit";import On from"rate-limit-mongo";var{URI:Jo}=k,{COLLECTIONS:Wo}=A.CACHE,{TIME:gn}=N,Zo={initLimiter(){return Tn({store:new On({uri:Jo.MONGO,collectionName:Wo.RATE_LIMIT,user:"",password:"",expireTimeMs:15*60*1e3,errorHandler:void 0}),limit:1e3,windowMs:gn.MINUTE})},initSession(){return In.create({mongoUrl:Jo.MONGO,collectionName:Wo.SESSION})}};import Xo from"swagger-ui-express";import An from"swagger-jsdoc";import Sn from"node:path";var{PACKAGE:es}=N,Nn=Sn.join(__root,"ts/**/*.ts"),wn={failOnErrors:!0,definition:{openapi:"3.1.0",info:{title:"Marketplace API",version:es.VERSION,description:"This is a swagger documentation for marketplace, this is not for testing api, if you want to test it use for eg: postman",license:{name:"MIT",url:"https://spdx.org/licenses/MIT.html"},contact:{name:"",url:"",email:""}},servers:[{url:`http://localhost:3000/v${es.VERSION}`}]},apis:[Nn]},ts={init(){let t=An(wn),e=Xo.setup(t,{explorer:!0});return{json:t,serve:Xo.serve,ui:e}}};var fr={};B(fr,{cookieOptions:()=>Pn});var Pn={maxAge:9e5,sameSite:IS_PRODUCTION?"none":"strict",httpOnly:IS_PRODUCTION,secure:IS_PRODUCTION,path:"/"};var D={upload:mr,db:Hr,tmp:$o,app:Zo,swagger:ts,options:fr};import{Router as id}from"express";import{Router as Kc}from"express";import{Router as Ci}from"express";var rs={};import{StatusCodes as ce}from"http-status-codes";var{StoreId:hn,CategoryId:os,ProductId:ss,OrderId:Un}=E.id,as={async checkStore(t,e,s,r){let{storeId:o}=hn.parse(t.params),{Store:a}=m.db,n=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(ce.NOT_FOUND,"Store not found");return e.locals={...e.locals,store:n},s()},async checkCategory(t,e,s,r){let{categoryId:o}=os.parse(t.params),{store:a}=e.locals,{Category:n}=m.db,i=await n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o,storeId:a.dataValues.id},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(ce.NOT_FOUND,"Category not found");return e.locals={...e.locals,category:i},s()},async checkProduct(t,e,s,r){let{productId:o}=ss.parse(t.params),{category:a}=e.locals,{Product:n}=m.db,i=await n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:o,categoryId:a.dataValues.id},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(ce.NOT_FOUND,"Product not found");return e.locals={...e.locals,product:i},s()},async isSeller(t,e,s,r){let{user:o}=t;if(o===void 0)throw c.middleware(ce.UNAUTHORIZED,"Unauthorized user");let{Store:a}=m.db,n=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(ce.NOT_FOUND,"Store not found, you can become seller");return e.locals={...e.locals,store:n},s()},async isCategoryOwner(t,e,s,r){let{categoryId:o}=os.parse(t.params),{store:a}=e.locals,{Category:n}=m.db,i=await n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{storeId:a.dataValues.id,id:o},plain:!0,limit:1,transaction:r});if(i===null)throw c.middleware(ce.NOT_FOUND,"Category not found");return e.locals={...e.locals,category:i},s()},async isProductOwner(t,e,s,r){let{productId:o}=ss.parse(t.params),{store:a}=e.locals,{Category:n}=m.db,i=await n.findAll({attributes:["id"],where:{storeId:a.dataValues.id},transaction:r});if(i.length===0)throw c.middleware(ce.FORBIDDEN,"This store don't have any categories");let u=i.map(g=>g.dataValues.id),{Product:y}=m.db,I=await y.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:u,id:o},limit:1,plain:!0,transaction:r});if(I===null)throw c.middleware(ce.NOT_FOUND,"Product not found");return e.locals={...e.locals,product:I},s()},async isOrderOwner(t,e,s,r){let{orderId:o}=Un.parse(t.params),a=e.locals.store,{Order:n,Product:i,Category:u}=m.db,y=await n.findOne({where:{id:o},limit:1,plain:!0,transaction:r,include:{attributes:[],model:i,required:!0,include:[{attributes:[],model:u,required:!0,where:{storeId:a.dataValues.id}}]}});if(y===null)throw c.middleware(ce.NOT_FOUND,"Order not found");return e.locals={...e.locals,order:y},s()}};var ns={async isAdmin(t,e,s){return s()}};var is={user:rs,store:as,admin:ns};import{StatusCodes as Me}from"http-status-codes";var{COOKIE:Cn}=A,cs={async access(t,e,s,r){let o=`${t.cookies[Cn.TOKEN]??""}`;if(o.length===0)throw c.middleware(Me.BAD_REQUEST,"Access token not send");let a=t.session.access?.key??"";if(a.length===0)throw c.server(Me.FORBIDDEN,"Invalid access key");let n=t.session.access?.iv??"";if(n.length===0)throw c.server(Me.FORBIDDEN,"Invalid access iv");let{Body:i}=E.req.security.access.Email.Middleware,{code:u,password:y,confirmPassword:I}=i.parse(t.body);if(!Object.is(y,I))throw c.controller(Me.CONFLICT,"Passwords not equal");let{access:g}=f,S=g.verify(o,a,n,u);if(!S.valid)throw c.middleware(Me.UNAUTHORIZED,"Invalid access token");t.session.access={key:"",iv:""};let{User:x}=m.db,q=await x.findOne({attributes:["id","emailVerified"],where:{id:S.id},plain:!0,limit:1,transaction:r});if(q===null)throw c.middleware(Me.NOT_FOUND,"User not found");return delete t.body.code,delete t.body.confirmPassword,t.user=q,s()}};var Rr={};B(Rr,{checkOrder:()=>Ln,isAuthenticated:()=>bn,isSeller:()=>_n,notAuthenticated:()=>xn});import{StatusCodes as ht}from"http-status-codes";var{OrderId:Dn}=E.id;async function bn(t,e,s){if(!t.isAuthenticated())throw c.middleware(ht.UNAUTHORIZED,"Unauthenticated user");return s()}async function xn(t,e,s){if(t.isAuthenticated())throw c.middleware(ht.NOT_ACCEPTABLE,"User already authenticated");return s()}async function Ln(t,e,s,r){let o=t.user,{orderId:a}=Dn.parse(t.params),{Order:n}=m.db,i=await n.findOne({attributes:{exclude:["createdAt","updatedAt"]},where:{id:a,userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(i===null)throw c.middleware(ht.NOT_FOUND,"Order not found");return e.locals={...e.locals,order:i},s()}async function _n(t,e,s,r){let{user:o}=t,{Store:a}=m.db,n=await a.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},limit:1,plain:!0,transaction:r});if(n===null)throw c.middleware(ht.NOT_FOUND,"Seller not found");return e.locals={...e.locals,store:n},s()}var _={api:is,security:cs,fn:Rr};import{StatusCodes as J}from"http-status-codes";import{serialize as ps}from"cookie";import{StatusCodes as Mn}from"http-status-codes";import de from"passport";import{Strategy as Fn}from"passport-local";import{StatusCodes as ds}from"http-status-codes";var ls=new Fn({usernameField:"email",passwordField:"password"},(t,e,s)=>{let{User:r}=m.db;r.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{email:t},limit:1}).then(o=>{if(o===null)return s(c.passport(ds.NOT_FOUND,"User not found"));let{compare:a}=f.bcrypt;return a(e,o.dataValues.password)?s(null,o):s(c.passport(ds.UNAUTHORIZED,"Invalid password"))}).catch(s)});import{Strategy as Gn}from"passport-http-bearer";import{StatusCodes as Er}from"http-status-codes";var us=new Gn((t,e)=>{let{verify:s}=f.jwt,r=s(t);if(r===null)return e(c.passport(Er.BAD_REQUEST,"Invalid token"));let{isUUID:o}=E.validators,a=o.safeParse(r);if(!a.success)return e(c.passport(Er.BAD_REQUEST,a.error.message));let{User:n}=m.db;n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:a.data},limit:1,plain:!0}).then(i=>i===null?e(c.passport(Er.NOT_FOUND,"User not found")):e(null,i)).catch(e)});var{isUUID:Vn}=E.validators;de.serializeUser((t,e)=>e(null,t.dataValues.id));de.deserializeUser((t,e)=>{let s=Vn.safeParse(t);if(!s.success)return e(null,!1);let{User:r}=m.db;r.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{id:s.data},limit:1}).then(o=>o===null?e(null,!1):e(null,o)).catch(e)});de.use(ls);de.use(us);async function yr(t,e,s,r){return new Promise((o,a)=>{de.authenticate(t,(n,i,u)=>{let{toBoolean:y}=E.validators;if(y.parse(n))return a(n);if(!y.parse(i))return a(c.passport(Mn.BAD_REQUEST,u?.message??"Invalid info"));e.logIn(i,I=>y.parse(I)?a(I):o(i))})(e,s,r)})}var{COOKIE:ms}=A,{SignUp:vn,VerifyEmail:qn,ForgotPassword:Bn}=E.req.api.auth,fs={async signUp(t,e,s,r){let{Body:o}=vn,{username:a,email:n,password:i,theme:u,locale:y}=o.parse(t.body),{User:I,UserSetting:g}=m.db;if(await I.findOne({attributes:["email"],where:{email:n},limit:1,plain:!0,transaction:r})!==null)throw c.controller(J.BAD_REQUEST,"Email already exist");let x=t.file;if(x===void 0||x.buffer.length===0)throw c.controller(J.BAD_REQUEST,"Please, provide an image");let{FileConverter:q,FileUploader:w}=K.file,b=await new q(x.buffer).convert();if(b.length===0)throw c.controller(J.UNSUPPORTED_MEDIA_TYPE,"Unsupported image format");let fe=await new w(...b).upload();if(fe.length===0)throw c.server(J.INTERNAL_SERVER_ERROR,"Can't upload your image");let{hash:xe}=f.bcrypt,ke=await I.create({username:a,email:n,password:xe(i),image:fe[0]},{fields:["username","email","password","image"],transaction:r});await g.create({userId:ke.dataValues.id,theme:u,locale:y,forceTheme:!1,disableAnimations:!1},{fields:["userId","theme","locale","forceTheme","disableAnimations"],transaction:r}),e.status(J.CREATED).json({success:!0})},async signIn(t,e,s,r){let o=await yr("local",t,e,s),{sign:a}=f.jwt,{UserSetting:n,Store:i}=m.db,[u,y]=await Promise.all([n.findOne({attributes:{exclude:["userId"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]),{options:I}=D;e.status(J.OK).setHeader("Set-Cookie",ps(ms.AUTHORIZATION,a(o.dataValues.id),I.cookieOptions)).json({success:!0,data:{user:o.dataValues,setting:u.dataValues,store:y?.dataValues??null}})},async signOut(t,e){t.logOut(s=>{let{toBoolean:r}=E.validators;if(r.parse(s))throw s;t.session.csrf={secret:""},t.session.access={key:"",iv:""},e.status(J.OK).json({success:!0})})},async me(t,e,s,r){let o=await yr("bearer",t,e,s),{sign:a}=f.jwt,{UserSetting:n,Store:i}=m.db,[u,y]=await Promise.all([n.findOne({attributes:{exclude:["userId"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),i.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]),{options:I}=D;e.status(J.OK).setHeader("Set-Cookie",ps(ms.AUTHORIZATION,a(o.dataValues.id),I.cookieOptions)).json({success:!0,data:{user:o.dataValues,setting:u.dataValues,store:y?.dataValues??null}})},async verifyEmail(t,e,s,r){let{Query:o}=qn,{token:a}=o.parse(t.query),{verify:n}=f.jwt,i=n(a)??"";if(i.length===0)throw c.controller(J.BAD_REQUEST,"Invalid token");let{isUUID:u}=E.validators,y=u.parse(i),{User:I}=m.db,[g,S]=await I.update({emailVerified:new Date},{fields:["emailVerified"],where:{id:y},limit:1,returning:!0,transaction:r});if(S.length===0)throw c.controller(J.NOT_FOUND,"User not found");e.status(J.OK).json({success:!0})},async forgotPassword(t,e,s,r){let o=t.user,{Body:a}=Bn,{password:n}=a.parse(t.body),{hash:i}=f.bcrypt;await o.update({password:i(n),emailVerified:o.dataValues.emailVerified===null?new Date:o.dataValues.emailVerified},{fields:["password","emailVerified"],transaction:r}),e.status(J.OK).json({success:!0})}};import{StatusCodes as W}from"http-status-codes";import{StatusCodes as ve}from"http-status-codes";var Ir={};B(Ir,{categories:()=>zn,orders:()=>kn,products:()=>jn,stores:()=>Yn,users:()=>Kn});import{QueryTypes as rt}from"sequelize";async function Kn(t){return sequelize.query(`
  SELECT COUNT("id") AS "users", date_trunc('day', "createdAt")::date AS "createdAt" FROM "User"
  GROUP BY date_trunc('day', "createdAt")::date
  ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:rt.SELECT,raw:!0,transaction:t})}async function Yn(t){return sequelize.query(`
  SELECT COUNT("id") AS "stores", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Store"
  GROUP BY date_trunc('day', "createdAt")::date
  ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:rt.SELECT,raw:!0,transaction:t})}async function kn(t){return sequelize.query(`
  SELECT COUNT("id") AS "orders", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Order"
  GROUP BY date_trunc('day', "createdAt")::date
  ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:rt.SELECT,raw:!0,transaction:t})}async function jn(t){return sequelize.query(`
    SELECT COUNT("id") AS "products", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Product"
    GROUP BY date_trunc('day', "createdAt")::date
    ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:rt.SELECT,raw:!0,transaction:t})}async function zn(t){return sequelize.query(`
    SELECT COUNT("id") AS "categories", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Category"
    GROUP BY date_trunc('day', "createdAt")::date
    ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:rt.SELECT,raw:!0,transaction:t})}var Rs={stats:Ir};var Or={};B(Or,{categories:()=>Hn,orders:()=>$n,products:()=>Qn});import{QueryTypes as Tr}from"sequelize";async function Hn(t,e){return sequelize.query(`
  SELECT COUNT("id") AS "categories", date_trunc('day', "createdAt")::date AS "createdAt" FROM "Category"
  WHERE "storeId" = $storeId
  GROUP BY date_trunc('day', "createdAt")::date
  ORDER BY date_trunc('day', "createdAt")::date DESC
  `,{type:Tr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function Qn(t,e){return sequelize.query(`
    SELECT COUNT("P"."id") AS "products", date_trunc('day', "P"."createdAt")::date AS "createdAt" FROM "Product" "P"
    INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId" AND "C"."storeId"  = $storeId
    GROUP BY date_trunc('day', "P"."createdAt")::date
    ORDER BY date_trunc('day', "P"."createdAt")::date DESC
  `,{type:Tr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function $n(t,e){return sequelize.query("",{type:Tr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}var gr={};B(gr,{all:()=>Jn,order:()=>Wn});import{QueryTypes as Es}from"sequelize";async function Jn(t,e){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity", "O"."totalPrice" AS "order.totalPrice", "O"."quantity" AS "order.quantity", "O"."status" AS "order.status",
  "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description",
  "P"."descriptionAr" AS "product.descriptionAr", ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", "C"."storeId" AS "product.storeId"
  FROM "Order" "O"
  INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
  INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
  INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
  WHERE "C"."storeId" = $storeId
  GROUP BY "O"."id", "P"."id", "C"."storeId"
  ORDER BY "O"."createdAt" DESC
  `,{type:Es.SELECT,raw:!0,nest:!0,bind:{storeId:t},transaction:e})}async function Wn(t,e,s){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity", "O"."totalPrice" AS "order.totalPrice", "O"."quantity" AS "order.quantity", "O"."status" AS "order.status",
  "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description",
  "P"."descriptionAr" AS "product.descriptionAr", ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", "C"."storeId" AS "product.storeId"
  FROM "Order" "O"
  INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
  INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
  INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
  WHERE "C"."storeId" = $storeId
  GROUP BY "O"."id", "P"."id", "C"."storeId"
  LIMIT 1
  `,{type:Es.SELECT,raw:!0,nest:!0,plain:!0,bind:{storeId:t,orderId:e},transaction:s})}var ys={stats:Or,orders:gr};var Sr={};B(Sr,{all:()=>Zn,one:()=>Xn,orders:()=>ti,viewers:()=>ei});import{QueryTypes as Ar}from"sequelize";async function Zn(t,e){return sequelize.query(`
    SELECT "P"."id", "P"."title", "P"."titleAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "images", COUNT("PV"."id") as "views", COUNT("O"."id") AS "orders"
    FROM "Product" "P"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    INNER JOIN "Category" "C" ON "C"."id" = "P"."categoryId"
    LEFT JOIN "ProductViewer" "PV" ON "PV"."productId" = "P"."id"
    LEFT JOIN "Order" "O" ON "O"."productId" = "P"."id"
    WHERE "P"."deletedAt" IS NULL AND "PI"."deletedAt" IS NULL AND "C"."deletedAt" IS NULL AND
    "C"."storeId" = $storeId
    GROUP BY "P"."id"
    ORDER BY "P"."createdAt" DESC
  `,{type:Ar.SELECT,bind:{storeId:t},raw:!0,transaction:e})}async function Xn(t,e){return sequelize.query(`SELECT "P"."id" AS "product.id", "P"."title" AS "product.title", "P"."titleAr" AS "product.titleAr",
    "P"."description" AS "product.description", "P"."descriptionAr" AS "product.descriptionAr",
    "P"."quality" AS "product.quality", "P"."stock" AS "product.stock", "P"."model" AS "product.model",
    "P"."price" AS "product.price", "P"."discount" AS "product.discount",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images", ARRAY_AGG(DISTINCT "PIn"."info") AS "product.infos", ARRAY_AGG(DISTINCT "PIn"."infoAr") AS "product.infosAr",
    ARRAY_AGG(DISTINCT "PC"."color") AS "product.colors", ARRAY_AGG(DISTINCT "PS"."size") AS "product.sizes", ARRAY_AGG(DISTINCT "T"."tag") AS "product.tags",
    "C"."id" AS "category.id", "C"."name" AS "category.name", "C"."nameAr" AS "category.nameAr", "C"."image" AS "category.image"
    FROM "Product" AS "P"
    INNER JOIN "Category" AS "C" ON "C"."id" = "P"."categoryId"
    INNER JOIN "ProductImage" AS "PI" ON "PI"."productId" = "P"."id"
    LEFT JOIN "ProductTag" AS "PT" ON "PT"."productId" = "P"."id"
    LEFT JOIN "ProductColor" AS "PC" ON "PC"."productId" = "P"."id"
    LEFT JOIN "ProductSize" AS "PS" ON "PS"."productId" = "P"."id"
    LEFT JOIN "ProductInfo" AS "PIn" ON "PIn"."productId" = "P"."id"
    LEFT JOIN "Tag" AS "T" ON "T"."id" = "PT"."tagId"
    WHERE "P"."id" = $id AND "P"."deletedAt" IS NULL AND "C"."deletedAt" IS NULL
    AND "PI"."deletedAt" IS NULL AND "PT"."deletedAt" IS NULL AND "PC"."deletedAt" IS NULL  AND "PS"."deletedAt" IS NULL
    AND "PIn"."deletedAt" IS NULL
    GROUP BY "P"."id", "C"."id"
    LIMIT 1`,{type:Ar.SELECT,bind:{id:t},raw:!0,nest:!0,plain:!0,transaction:e})}async function ei(t,e){return sequelize.query(`SELECT "U"."id", "U"."username", "U"."image", COUNT("U"."id") AS "views"
    FROM "User" AS "U"
    INNER JOIN "ProductViewer" AS "PV" ON "PV"."userId" = "U"."id"
    WHERE "PV"."productId" = $productId AND "U"."deletedAt" IS NULL
    GROUP BY "U"."id"`,{type:Ar.SELECT,bind:{productId:t},raw:!0,transaction:e})}async function ti(){}var wr={};B(wr,{all:()=>ri,one:()=>oi,products:()=>si});import{QueryTypes as Nr}from"sequelize";async function ri(t,e){return sequelize.query(`
    SELECT "C"."id", "C"."name", "C"."nameAr", "C"."image",
    COUNT("P"."id") AS "products", COUNT("CV"."id") AS "views"
    FROM "Category" "C"
    LEFT JOIN "CategoryViewer" "CV" ON "CV"."categoryId" = "C"."id"
    LEFT JOIN "Product" "P" ON "P"."categoryId" = "C"."id" AND "P"."deletedAt" IS NULL
    WHERE "C"."storeId" = $storeId AND "C"."deletedAt" IS NULL
    GROUP BY "C"."id"
    ORDER BY "C"."createdAt" DESC
    `,{type:Nr.SELECT,raw:!0,bind:{storeId:t},transaction:e})}async function oi(t,e){return sequelize.query(`
    SELECT "C"."id", "C"."name", "C"."nameAr", "C"."image",
    COUNT("P"."id") AS "products", COUNT("CV"."id") AS "views"
    FROM "Category" "C"
    LEFT JOIN "CategoryViewer" "CV" ON "CV"."categoryId" = "C"."id"
    LEFT JOIN "Product" "P" ON "P"."categoryId" = "C"."id" AND "P"."deletedAt" IS NULL
    WHERE "C"."id" = $id AND "C"."deletedAt" IS NULL
    GROUP BY "C"."id"
    LIMIT 1
    `,{type:Nr.SELECT,raw:!0,plain:!0,bind:{id:t},transaction:e})}async function si(t,e){return sequelize.query(`
    SELECT "P"."id", "P"."title", "P"."titleAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "images", COUNT("PV"."id") as "views", COUNT("O"."id") AS "orders"
    FROM "Product" "P"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    LEFT JOIN "ProductViewer" "PV" ON "PV"."productId" = "P"."id"
    LEFT JOIN "Order" "O" ON "O"."productId" = "P"."id"
    WHERE "P"."deletedAt" IS NULL AND "PI"."deletedAt" IS NULL AND "P"."categoryId" = $categoryId
    GROUP BY "P"."id"
    ORDER BY "P"."createdAt" DESC
    `,{type:Nr.SELECT,raw:!0,bind:{categoryId:t},transaction:e})}var hr={};B(hr,{user:()=>Pr});var Pr={};B(Pr,{all:()=>ai,one:()=>ni});import{QueryTypes as Is}from"sequelize";async function ai(t,e){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity",
    "O"."totalPrice" AS "order.totalPrice", "O"."status" AS "order.status",
    "P"."id" AS "product.id", "P"."title" AS "product.title",
    "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description", 
    "P"."descriptionAr" AS "product.descriptionAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images"
    FROM "Order" "O"
    INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    WHERE "O"."userId" = $userId
    GROUP BY "O"."id", "P"."id"
    ORDER BY "O"."createdAt" DESC
  `,{type:Is.SELECT,raw:!0,nest:!0,bind:{userId:t},transaction:e})}async function ni(t,e,s){return sequelize.query(`
    SELECT "O"."id" AS "order.id", "O"."quantity" AS "order.quantity",
    "O"."totalPrice" AS "order.totalPrice", "O"."status" AS "order.status",
    "P"."id" AS "product.id", "P"."title" AS "product.title",
    "P"."titleAr" AS "product.titleAr", "P"."description" AS "product.description", 
    "P"."descriptionAr" AS "product.descriptionAr",
    ARRAY_AGG(DISTINCT "PI"."image") AS "product.images"
    FROM "Order" "O"
    INNER JOIN "Product" "P" ON "P"."id" = "O"."productId"
    INNER JOIN "ProductImage" "PI" ON "PI"."productId" = "P"."id"
    WHERE "O"."id" = $id AND "O"."userId" = $userId
    GROUP BY "O"."id", "P"."id"
    LIMIT 1
  `,{type:Is.SELECT,raw:!0,plain:!0,nest:!0,bind:{id:t,userId:e},transaction:s})}var F={store:ys,category:wr,product:Sr,order:hr,admin:Rs};var{Create:ii,Update:ci}=E.req.api.user.orders,Ts={async all(t,e,s,r){let o=t.user,{all:a}=F.order.user,n=await a(o.dataValues.id,r);e.status(ve.OK).json({success:!0,data:{orders:n}})},async order(t,e,s,r){let o=t.user,a=e.locals.order,{one:n}=F.order.user,i=await n(a.dataValues.id,o.dataValues.id,r);e.status(ve.OK).json({success:!0,data:{order:i}})},async create(t,e,s,r){let{Body:o}=ii,{orders:a}=o.parse(t.body),n=t.user,{Order:i}=m.db;await i.bulkCreate(a.map(u=>({userId:n.dataValues.id,productId:u.productId,quantity:u.quantity,totalPrice:u.totalPrice})),{fields:["userId","productId","quantity","totalPrice"],transaction:r}),e.status(ve.CREATED).json({success:!0})},async patch(t,e,s,r){let o=e.locals.order;if(o.dataValues.status!==ze[0])throw c.controller(ve.FORBIDDEN,"Your order is on processing");let{Query:a}=ci,{quantity:n}=a.parse(t.query);await o.update({quantity:n},{fields:["quantity"],transaction:r}),e.status(ve.OK).json({success:!0,data:{order:o.dataValues}})},async remove(t,e,s,r){await e.locals.order.update({status:ze[3],canceledAt:new Date},{fields:["status","canceledAt"],transaction:r}),e.status(ve.OK).json({success:!0})}};var{Setting:di,BecomeSeller:li,Update:ui}=E.req.api.user,Os={async profile(t,e,s,r){let{user:o}=t,{UserSetting:a,Store:n}=m.db,[i,u]=await Promise.all([a.findOne({attributes:["theme","locale","forceTheme","disableAnimations"],where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r}),n.findOne({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{userId:o.dataValues.id},plain:!0,limit:1,transaction:r})]);e.status(W.OK).json({success:!0,data:{user:o.dataValues,setting:i.dataValues,store:u?.dataValues??null}})},async setting(t,e,s,r){let{Body:o}=di,a=t.user,{theme:n,locale:i,disableAnimations:u,forceTheme:y}=o.parse(t.body),{UserSetting:I}=m.db,[g,S]=await I.update({theme:n,locale:i,disableAnimations:u,forceTheme:y},{where:{userId:a.dataValues.id},fields:["theme","locale","forceTheme","disableAnimations"],returning:!0,transaction:r,limit:1});e.status(W.OK).json({success:!0,data:{setting:S[0].dataValues}})},async becomeSeller(t,e,s,r){let{Body:o}=li,{name:a}=o.parse(t.body),{Store:n}=m.db;if(await n.findOne({attributes:["name"],where:{name:a},paranoid:!1,plain:!0,limit:1,transaction:r})!==null)throw c.controller(W.BAD_REQUEST,"Store name already exists");let{user:u}=t;if(await n.findOne({attributes:["userId"],where:{userId:u.dataValues.id},paranoid:!1,plain:!0,limit:1,transaction:r})!==null)throw c.controller(W.BAD_REQUEST,"You have a store already");let I=t.file;if(I===void 0||I.buffer.length===0)throw c.controller(W.BAD_REQUEST,"Please, provide a logo for your store");let{FileConverter:g,FileUploader:S}=K.file,x=await new g(I.buffer).convert();if(x.length===0)throw c.controller(W.UNSUPPORTED_MEDIA_TYPE,"Invalid image format");let q=await new S(...x).upload();if(q.length===0)throw c.server(W.INTERNAL_SERVER_ERROR,"Can't upload your image");let{StoreSetting:w}=m.db,b=await n.create({name:a,image:q[0],userId:u.dataValues.id},{fields:["name","image","userId"],transaction:r}),fe=await w.create({storeId:b.dataValues.id},{fields:["storeId"],transaction:r});e.status(W.CREATED).json({success:!0,data:{store:b.dataValues,setting:fe.dataValues}})},async update(t,e,s,r){let{user:o}=t,{Body:a}=ui,{username:n}=a.parse(t.body),i=t.file,u="";if(i!==void 0&&i.buffer.length>0){let{FileConverter:y,FileUploader:I}=K.file,g=await new y(i.buffer).convert();if(g.length===0)throw c.controller(W.UNSUPPORTED_MEDIA_TYPE,"Please, provide a valid image");let S=await new I(...g).upload();if(S.length===0)throw c.server(W.INTERNAL_SERVER_ERROR,"Can't upload your image");await I.remove(o.dataValues.image),u=S[0]}await o.update({username:n,image:u||o.dataValues.image},{fields:["username","image"],transaction:r}),e.status(W.OK).json({success:!0,data:{user:o.dataValues}})},async remove(t,e,s,r){await t.user.destroy({force:!1,transaction:r}),e.status(W.OK).json({success:!0})},orders:Ts};import{Op as Ut}from"sequelize";import{StatusCodes as he}from"http-status-codes";var{Search:pi,Home:mi}=E.req.api.store,{DB:V}=A,gs={async search(t,e,s,r){let{Query:o}=pi,{s:a,limit:n}=o.parse(t.query),{Store:i,Category:u,Product:y,ProductImage:I}=m.db,g=a.split(/\s+/).map(w=>w.trim()).filter(w=>w.length>0).map(w=>({[Ut.iLike]:`%${w}%`})),[S,x,q]=await Promise.all([y.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{[Ut.or]:[...g.map(w=>({title:w})),...g.map(w=>({titleAr:w})),...g.map(w=>({description:w})),...g.map(w=>({descriptionAr:w}))]},include:[{as:V.MODELS.PRODUCT.IMAGE,attributes:["image"],model:I,required:!0,limit:1},{as:V.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:u,required:!0}],order:[["createdAt","DESC"]],limit:n,transaction:r}),u.findAll({attributes:["id","name","nameAr","image","storeId"],where:{[Ut.or]:[...g.map(w=>({nameAr:w})),...g.map(w=>({name:w}))]},order:[["createdAt","DESC"]],raw:!0,limit:n,transaction:r}),i.findAll({attributes:["id","image","name"],where:{[Ut.or]:g.map(w=>({name:w}))},order:[["createdAt","DESC"]],raw:!0,limit:n,transaction:r})]);e.status(he.OK).json({success:!0,data:{stores:q,categories:x,products:S.map(w=>{let{dataValues:b}=w;return b.image=b[V.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete b[V.MODELS.PRODUCT.IMAGE],b.storeId=b[V.MODELS.CATEGORY.MODEL].dataValues.storeId,delete b[V.MODELS.CATEGORY.MODEL],b})}})},async all(t,e,s,r){let{Store:o}=m.db,a=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},raw:!0,order:[["createdAt","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{stores:a}})},async categories(t,e,s,r){let{Category:o}=m.db,a=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},raw:!0,order:[["createdAr","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{categories:a}})},async products(t,e,s,r){let{Product:o,ProductImage:a}=m.db,n=await o.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},include:{as:V.MODELS.PRODUCT.IMAGE,attributes:["image"],model:a,required:!0,limit:1},order:[["createdAt","DESC"]],transaction:r});e.status(he.OK).json({success:!0,data:{products:n.map(i=>{let{dataValues:u}=i;return u.image=u[V.MODELS.PRODUCT.IMAGE][0].image,delete u[V.MODELS.PRODUCT.IMAGE],u})}})},async store(t,e,s,r){let{Params:o}=mi,{storeId:a}=o.parse(t.params),{user:n}=t,{StoreViewer:i}=m.db;await i.create({ip:t.clientIp,userId:n?.dataValues.id,storeId:a},{fields:["ip","userId","storeId"],transaction:r});let u=e.locals.store,{Category:y,Product:I,ProductImage:g}=m.db,S=await y.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},order:[["createdAt","DESC"]],where:{storeId:u.dataValues.id},transaction:r}),x=S.map(w=>w.dataValues.id),q=await I.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:x},order:[["createdAt","DESC"]],transaction:r,include:[{as:V.MODELS.PRODUCT.IMAGE,attributes:["image"],model:g,required:!0,limit:1},{as:V.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:y,required:!0}]});e.status(he.OK).json({success:!0,data:{store:u.dataValues,categories:S.map(w=>w.dataValues),products:q.map(w=>{let{dataValues:b}=w;return b.image=b[V.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete b[V.MODELS.PRODUCT.IMAGE],b.storeId=b[V.MODELS.CATEGORY.MODEL].dataValues.storeId,delete b[V.MODELS.CATEGORY.MODEL],b})}})},async category(t,e,s,r){let o=e.locals.category,{user:a}=t,{CategoryViewer:n,Product:i,ProductImage:u,Category:y}=m.db;await n.create({ip:t.clientIp,userId:a?.dataValues.id,categoryId:o.dataValues.id},{fields:["ip","userId","categoryId"],transaction:r});let I=await i.findAll({attributes:{exclude:["createdAt","updatedAt","deletedAt"]},where:{categoryId:o.dataValues.id},order:[["createdAt","DESC"]],transaction:r,include:[{as:V.MODELS.PRODUCT.IMAGE,attributes:["image"],model:u,required:!0,limit:1},{as:V.MODELS.CATEGORY.MODEL,attributes:["storeId"],model:y,required:!0}]});e.status(he.OK).json({success:!0,data:{category:o.dataValues,products:I.map(g=>{let{dataValues:S}=g;return S.image=S[V.MODELS.PRODUCT.IMAGE][0].dataValues.image,delete S[V.MODELS.PRODUCT.IMAGE],S.storeId=S[V.MODELS.CATEGORY.MODEL].dataValues.storeId,delete S[V.MODELS.CATEGORY.MODEL],S})}})},async product(t,e,s,r){let o=e.locals.product,{user:a}=t,{ProductViewer:n}=m.db;await n.create({ip:t.clientIp,userId:a?.dataValues.id,productId:o.dataValues.id},{fields:["ip","userId","productId"],transaction:r});let i=await F.product.one(o.dataValues.id,r);e.status(he.OK).json({success:!0,data:{product:i}})}};import{Op as Ti}from"sequelize";import{StatusCodes as Be}from"http-status-codes";import{StatusCodes as re}from"http-status-codes";var{Create:fi,Update:Ri}=E.req.api.dashboard.store.categories,{category:Ur}=F,As={async all(t,e,s,r){let o=e.locals.store,a=await Ur.all(o.dataValues.id,r);e.status(re.OK).json({success:!0,data:{categories:a}})},async category(t,e,s,r){let o=e.locals.category,[a,n]=await Promise.all([Ur.products(o.dataValues.id,r),Ur.one(o.dataValues.id,r)]);e.status(re.OK).json({success:!0,data:{category:n,products:a}})},async create(t,e,s,r){let{Body:o}=fi,{name:a,nameAr:n}=o.parse(t.body),i=t.file;if(i===void 0||i.buffer.length===0)throw c.controller(re.BAD_REQUEST,"Please, provide a valid image");let{FileConverter:u,FileUploader:y}=K.file,I=await new u(i.buffer).convert();if(I.length===0)throw c.controller(re.UNSUPPORTED_MEDIA_TYPE,"Invalid image");let g=await new y(...I).upload();if(g.length===0)throw c.controller(re.INTERNAL_SERVER_ERROR,"Can't save image");let{store:S}=e.locals,{Category:x}=m.db,q=await x.create({image:g[0],name:a,nameAr:n,storeId:S.dataValues.id},{fields:["image","name","nameAr","storeId"],returning:!0,transaction:r});e.status(re.CREATED).json({success:!0,data:{category:q.dataValues}})},async update(t,e,s,r){let{Body:o}=Ri,{name:a,nameAr:n}=o.parse(t.body),{category:i}=e.locals,u=t.file,y=i.dataValues.image;if(u!==void 0&&u.buffer.length>0){let{FileConverter:I,FileUploader:g}=K.file,S=await new I(u.buffer).convert();if(S.length===0)throw c.controller(re.UNSUPPORTED_MEDIA_TYPE,"Please, provide a valid image");let x=await new g(...S).upload();if(x.length===0)throw c.controller(re.INTERNAL_SERVER_ERROR,"Can't save image");y=x[0]}await i.update({name:a,nameAr:n,image:y},{fields:["name","nameAr","image"],transaction:r}),e.status(re.OK).json({success:!0,data:{category:i.dataValues}})},async remove(t,e,s,r){await e.locals.category.destroy({force:!1,transaction:r}),e.status(re.OK).json({success:!0})}};import{StatusCodes as v}from"http-status-codes";var{product:Ss}=F,{Create:Ei,Update:yi}=E.req.api.dashboard.store.products,Ns={async all(t,e,s,r){let o=e.locals.store,a=await Ss.all(o.dataValues.id,r);e.status(v.OK).json({success:!0,data:{products:a}})},async product(t,e,s,r){let o=e.locals.product,a=await Ss.one(o.dataValues.id,r);e.status(v.OK).json({success:!0,data:{...a}})},async create(t,e,s,r){let{Body:o}=Ei,{title:a,titleAr:n,description:i,descriptionAr:u,quality:y,stock:I,price:g,discount:S,categoryId:x,infos:q,tags:w,sizes:b,colors:fe}=o.parse(t.body),xe=t.files;if(xe===void 0)throw c.controller(v.BAD_REQUEST,"Please, provide images");let{FileConverter:ke,FileUploader:Ft}=K.file,{models:ut=[],images:je=[]}=xe;if(je.length===0)throw c.controller(v.BAD_REQUEST,"Please provide at least one image");let Le=await new ke(...ut.map(T=>T.buffer),...je.map(T=>T.buffer)).convert();if(Le.length===0)throw c.controller(v.UNSUPPORTED_MEDIA_TYPE,"Invalid provided files");let z=await new Ft(...Le).upload();if(z.length===0)throw c.server(v.INTERNAL_SERVER_ERROR,"Can't save your files");let{Product:pt,ProductColor:mt,ProductImage:ft,ProductSize:Rt,ProductInfo:Et,ProductTag:Gt,Tag:H}=m.db,X=await pt.create({title:a,titleAr:n,description:i,descriptionAr:u,quality:y,stock:I,price:g,discount:S,categoryId:x,model:z.find(T=>T.endsWith(".glb"))},{fields:["title","titleAr","description","descriptionAr","quality","stock","price","discount","categoryId","model"],returning:!0,transaction:r}).catch(T=>{throw c.server(v.INTERNAL_SERVER_ERROR,T?.message??"Can't create product",{files:z})}),_e=q.split(",").map(T=>T.trim()).filter(T=>T.length>0);if(_e.length%2!==0)throw c.controller(v.BAD_REQUEST,"Please provide both the english and arabic version in infos");let Vt=b.split(",").map(T=>T.trim()).filter(T=>T.length>0),Mt=w.split(",").map(T=>T.trim()).filter(T=>T.length>0),vt=fe.split(",").map(T=>T.trim()).filter(T=>T.length>0),{store:qt}=e.locals,yt=await Promise.all(Mt.map(T=>H.findOrCreate({attributes:["id"],where:{tag:T},fields:["tag","storeId"],defaults:{tag:T,storeId:qt.dataValues.id},transaction:r}))).catch(T=>{throw c.server(v.INTERNAL_SERVER_ERROR,T?.message??"Can't find or create tag",{files:z})}),It=[];for(let T=0;T<_e.length;T+=2){let Bt=_e[T],ta=_e[T+1];It.push({info:Bt,infoAr:ta,productId:X.dataValues.id})}let R=z.filter(T=>T.endsWith(".webp"));await Promise.all([ft.bulkCreate(R.map(T=>({image:T,productId:X.dataValues.id})),{fields:["image","productId"],transaction:r}),Et.bulkCreate(It,{fields:["info","infoAr","productId"],transaction:r}),mt.bulkCreate(vt.map(T=>({color:T,productId:X.dataValues.id})),{fields:["color","productId"],transaction:r}),Rt.bulkCreate(Vt.map(T=>({size:T,productId:X.dataValues.id})),{fields:["size","productId"],transaction:r}),Gt.bulkCreate(yt.map(([T])=>({tagId:T.dataValues.id,productId:X.dataValues.id})),{fields:["tagId","productId"],transaction:r})]).catch(T=>{throw c.server(v.INTERNAL_SERVER_ERROR,T?.message??"Can't complete product promises",{files:z})}),e.status(v.CREATED).json({success:!0})},async update(t,e,s,r){let{Body:o}=yi,{title:a,titleAr:n,description:i,descriptionAr:u,quality:y,stock:I,price:g,discount:S,categoryId:x,deletedImages:q,infos:w,tags:b,sizes:fe,colors:xe}=o.parse(t.body),{FileConverter:ke,FileUploader:Ft}=K.file,{models:ut=[],images:je=[]}=t.files,Le=await new ke(...ut.map(R=>R.buffer),...je.map(R=>R.buffer)).convert();if(Le.length===0&&(ut.length>0||je.length>0))throw c.controller(v.UNSUPPORTED_MEDIA_TYPE,"Invalid provided files");let z=await new Ft(...Le).upload();if(z.length===0&&Le.length>0)throw c.server(v.INTERNAL_SERVER_ERROR,"Can't save your files");let{ProductColor:pt,ProductImage:mt,ProductSize:ft,ProductInfo:Rt,ProductTag:Et,Tag:Gt}=m.db,H=e.locals.product;await H.update({title:a,titleAr:n,description:i,descriptionAr:u,quality:y,stock:I,price:g,discount:S,categoryId:x,model:z.find(R=>R.endsWith(".glb"))??H.dataValues.model},{fields:["title","titleAr","description","descriptionAr","quality","stock","price","discount","categoryId","model"],transaction:r}).catch(R=>{throw c.server(v.INTERNAL_SERVER_ERROR,R?.message??"Can't update product",{files:z})}),await Promise.all([Rt.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),pt.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),ft.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),Et.destroy({force:!1,where:{productId:H.dataValues.id},transaction:r}),mt.destroy({force:!1,where:{productId:H.dataValues.id,id:q.split(",").map(R=>R.trim()).filter(R=>R.length>0)},transaction:r})]).catch(R=>{throw c.server(v.INTERNAL_SERVER_ERROR,R?.message??"Can't complete delete product promise",{files:z})});let X=w.split(",").map(R=>R.trim()).filter(R=>R.length>0);if(X.length%2!==0)throw c.controller(v.BAD_REQUEST,"Please provide both the english and arabic version in infos");let _e=fe.split(",").map(R=>R.trim()).filter(R=>R.length>0),Vt=b.split(",").map(R=>R.trim()).filter(R=>R.length>0),Mt=xe.split(",").map(R=>R.trim()).filter(R=>R.length>0),vt=e.locals.store,qt=await Promise.all(Vt.map(R=>Gt.findOrCreate({attributes:["id"],where:{tag:R},fields:["tag","storeId"],defaults:{tag:R,storeId:vt.dataValues.id},transaction:r}))).catch(R=>{throw c.server(v.INTERNAL_SERVER_ERROR,R?.message??"Can't find or create tag",{files:z})}),yt=[];for(let R=0;R<X.length;R+=2){let T=X[R],Bt=X[R+1];yt.push({info:T,infoAr:Bt,productId:H.dataValues.id})}let It=z.filter(R=>R.endsWith(".webp"));await Promise.all([mt.bulkCreate(It.map(R=>({image:R,productId:H.dataValues.id})),{fields:["image","productId"],transaction:r}),Rt.bulkCreate(yt,{fields:["info","infoAr","productId"],transaction:r}),pt.bulkCreate(Mt.map(R=>({color:R,productId:H.dataValues.id})),{fields:["color","productId"],transaction:r}),ft.bulkCreate(_e.map(R=>({size:R,productId:H.dataValues.id})),{fields:["size","productId"],transaction:r}),Et.bulkCreate(qt.map(([R])=>({tagId:R.dataValues.id,productId:H.dataValues.id})),{fields:["tagId","productId"],transaction:r})]).catch(R=>{throw c.server(v.INTERNAL_SERVER_ERROR,R?.message??"Can't complete product promises",{files:z})}),e.status(v.OK).json({success:!0})},async remove(t,e,s,r){await e.locals.product.destroy({force:!1,transaction:r}),e.status(v.OK).json({success:!0})}};import{StatusCodes as Cr}from"http-status-codes";var ws={async products(t,e,s,r){let o=e.locals.store,{stats:a}=F.store,n=await a.products(o.dataValues.id,r);e.status(Cr.OK).json({success:!0,data:{products:n}})},async categories(t,e,s,r){let o=e.locals.store,{stats:a}=F.store,n=await a.categories(o.dataValues.id,r);e.status(Cr.OK).json({success:!0,data:{categories:n}})},async orders(t,e,s,r){let o=e.locals.store,{stats:a}=F.store,n=await a.orders(o.dataValues.id,r);e.status(Cr.OK).json({success:!0,data:{orders:n}})}};import{StatusCodes as qe}from"http-status-codes";var{Patch:Ii}=E.req.api.dashboard.store.orders,Ps={async all(t,e,s,r){let o=e.locals.store,{all:a}=F.store.orders,n=await a(o.dataValues.id,r);e.status(qe.OK).json({success:!0,data:{orders:n}})},async order(t,e,s,r){let o=e.locals.store,a=e.locals.order,{orders:n}=F.store,i=await n.order(o.dataValues.id,a.dataValues.id,r);e.status(qe.OK).json({success:!0,data:{order:i}})},async patch(t,e,s,r){let{Query:o}=Ii,{status:a}=o.parse(t.query),n=e.locals.order;if(n.dataValues.canceledAt!==null)throw c.controller(qe.FORBIDDEN,"Order already canceled");if(n.dataValues.doneAt!==null)throw c.controller(qe.FORBIDDEN,"Order already delivered");if(a==="wait")throw c.controller(qe.FORBIDDEN,`Can't set status to "wait"`);await n.update({status:a,processedAt:a==="process"?new Date:n.dataValues.processedAt,doneAt:a==="done"?new Date:n.dataValues.doneAt,canceledAt:a==="canceled"?new Date:n.dataValues.canceledAt},{fields:["status"],transaction:r}),e.status(qe.OK).json({success:!0})}};var{Update:Oi}=E.req.api.dashboard.store,hs={async profile(t,e){let{store:s}=e.locals,{Category:r,Product:o}=m.db,a=await r.findAll({attributes:["id"],where:{storeId:s.dataValues.id}}),n=await o.count({attributes:["categoryId"],where:{[Ti.or]:{categoryId:a.map(i=>i.dataValues.id)}},group:"categoryId"});e.status(Be.OK).json({success:!0,data:{store:s.dataValues,count:{categories:a.length,products:n}}})},async update(t,e,s,r){let{Body:o}=Oi,{name:a}=o.parse(t.body),{store:n}=e.locals;if(n===void 0)throw c.server(Be.INTERNAL_SERVER_ERROR,"Unprovided local store (seller:update)");let i=n.dataValues.image,u=t.file;if(u!==void 0&&u.buffer.length>0){let{FileConverter:y,FileUploader:I}=K.file,g=await new y(u.buffer).convert();if(g.length===0)throw c.controller(Be.UNSUPPORTED_MEDIA_TYPE,"Invalid image format");let S=await new I(...g).upload();if(S.length===0)throw c.server(Be.INTERNAL_SERVER_ERROR,"Can't upload your image");i=S[0]}await n.update({name:a,image:i},{fields:["name","image"],transaction:r}),e.status(Be.OK).json({success:!0,data:{store:n.dataValues}})},async remove(t,e,s,r){await e.locals.store.destroy({force:!1,transaction:r}),e.status(Be.OK).json({success:!0})},categories:As,products:Ns,orders:Ps,stats:ws};import{StatusCodes as ot}from"http-status-codes";var Us={async users(t,e,s,r){let{stats:o}=F.admin,a=await o.users(r);e.status(ot.OK).json({success:!0,data:{users:a}})},async stores(t,e,s,r){let{stats:o}=F.admin,a=await o.stores(r);e.status(ot.OK).json({success:!0,data:{stores:a}})},async orders(t,e,s,r){let{stats:o}=F.admin,a=await o.orders(r);e.status(ot.OK).json({success:!0,data:{orders:a}})},async products(t,e,s,r){let{stats:o}=F.admin,a=await o.products(r);e.status(ot.OK).json({success:!0,data:{products:a}})},async categories(t,e,s,r){let{stats:o}=F.admin,a=await o.categories(r);e.status(ot.OK).json({success:!0,data:{categories:a}})}};var Cs={stats:Us};var Ds={store:hs,admin:Cs};var bs={auth:fs,user:Os,stores:gs,dashboard:Ds};import{StatusCodes as xs}from"http-status-codes";var{COOKIE:gi}=A,{Email:Ai}=E.req.security.access,Ls={async email(t,e,s,r){let{Body:o}=Ai,{User:a}=m.db,{email:n}=o.parse(t.body),i=await a.findOne({attributes:["id"],where:{email:n},limit:1,transaction:r});if(i===null)throw c.controller(xs.NOT_FOUND,"user not found");let{access:u}=f,{token:y,code:I,key:g,iv:S}=u.token(i.dataValues.id);t.session.access={key:g,iv:S};let{cookieOptions:x}=D.options;e.cookie(gi.TOKEN,y,x);let{Mail:q}=K;await new q(n,"access code",`Code: ${I}`).send(),e.status(xs.CREATED).json({success:!0})}};import{StatusCodes as _s}from"http-status-codes";var{Email:Si}=E.req.security.validate.user,Fs={async email(t,e,s,r){let{Body:o}=Si,{email:a}=o.parse(t.body),{User:n}=m.db;if(await n.findOne({attributes:["email"],where:{email:a},limit:1,plain:!0,paranoid:!1,transaction:r})!==null)throw c.controller(_s.CONFLICT,"Email already exists");e.status(_s.OK).json({success:!0})}};import{StatusCodes as Oe}from"http-status-codes";var{Name:Ni,Category:wi,Product:Pi}=E.req.security.validate.store,Gs={async name(t,e,s,r){let{Body:o}=Ni,{name:a}=o.parse(t.body),{Store:n}=m.db;if(await n.findOne({attributes:["name"],where:{name:a},limit:1,plain:!0,paranoid:!1,transaction:r})!==null)throw c.controller(Oe.CONFLICT,"Store name already exists");e.status(Oe.OK).json({success:!0})},async category(t,e,s,r){let{Body:o}=wi,{name:a,nameAr:n}=o.parse(t.body),i=e.locals.store,{Category:u}=m.db,[y,I]=await Promise.all([u.findOne({attributes:["name"],where:{name:a,storeId:i.dataValues.id},limit:1,plain:!0,paranoid:!1,transaction:r}),u.findOne({attributes:["nameAr"],where:{nameAr:n,storeId:i.dataValues.id},limit:1,plain:!0,paranoid:!1,transaction:r})]);if(y!==null)throw c.controller(Oe.CONFLICT,"Category name already exists");if(I!==null)throw c.controller(Oe.CONFLICT,"Category arabic name already exists");e.status(Oe.OK).json({success:!0})},async product(t,e,s,r){let{Body:o}=Pi,{title:a,titleAr:n}=o.parse(t.body),{Product:i}=m.db,[u,y]=await Promise.all([i.findOne({attributes:["title"],where:{title:a},limit:1,plain:!0,paranoid:!1,transaction:r}),i.findOne({attributes:["titleAr"],where:{titleAr:n},limit:1,plain:!0,paranoid:!1,transaction:r})]);if(u!==null)throw c.controller(Oe.CONFLICT,"Product name already exists");if(y!==null)throw c.controller(Oe.CONFLICT,"Product arabic name already exists");e.status(Oe.OK).json({success:!0})}};import{StatusCodes as st}from"http-status-codes";var{COOKIE:hi}=A,{Token:Ui}=E.req.security.validate.access,Vs={async token(t,e){let s=`${t.cookies?.[hi.TOKEN]??""}`;if(s.length===0)throw c.controller(st.BAD_REQUEST,"Empty access token");let r=t.session.access?.key??"";if(r.length===0)throw c.server(st.FORBIDDEN,"Invalid access key");let o=t.session.access?.iv??"";if(o.length===0)throw c.server(st.FORBIDDEN,"Invalid access iv");let{Body:a}=Ui,{code:n}=a.parse(t.body),{access:i}=f;if(!i.verify(s,r,o,n).valid)throw c.controller(st.FORBIDDEN,"Invalid access token");e.status(st.OK).json({success:!0})}};var Ms={access:Vs,user:Fs,store:Gs};var vs={access:Ls,validate:Ms};var U={api:bs,security:vs};var{upload:Dr}=D,{handleAsync:j}=f.fn,{UPLOAD:Di}=A,{fn:{isAuthenticated:bi,notAuthenticated:Ct},security:{access:xi}}=_,{signUp:Li,signIn:_i,signOut:Fi,me:Gi,verifyEmail:Vi,forgotPassword:Mi}=U.api.auth,ge=Ci();ge.post("/sign-up",j(Ct),j(Dr.single(Di.IMAGE)),j(Li));ge.post("/sign-in",j(Ct),j(Dr.none()),j(_i));ge.post("/sign-out",j(bi),j(Fi));ge.post("/me",j(Ct),j(Gi));ge.put("/verify-email",j(Vi));ge.put("/forgot-password",j(Ct),j(Dr.none()),j(xi),j(Mi));import{Router as zi}from"express";import{Router as vi}from"express";var{upload:qi}=D,{PARAMS:br}=A.REQUEST,{checkOrder:xr}=_.fn,{handleAsync:le}=f.fn,{all:Bi,order:Ki,create:Yi,patch:ki,remove:ji}=U.api.user.orders,Ue=vi();Ue.get("/",le(Bi));Ue.get(`/:${br.ID.ORDER}`,le(xr),le(Ki));Ue.post("/",le(qi.none()),le(Yi));Ue.patch(`/:${br.ID.ORDER}`,le(xr),le(ki));Ue.delete(`/:${br.ID.ORDER}`,le(xr),le(ji));var{IMAGE:qs}=A.UPLOAD,{upload:Lr}=D,{handleAsync:Ae}=f.fn,{profile:Hi,setting:Qi,becomeSeller:$i,update:Ji,remove:Wi}=U.api.user,Se=zi();Se.get("/",Ae(Hi));Se.patch("/setting",Ae(Lr.none()),Ae(Qi));Se.post("/become-seller",Ae(Lr.single(qs)),Ae($i));Se.put("/",Ae(Lr.single(qs)),Ae(Ji));Se.delete("/",Ae(Wi));Se.use("/orders",Ue);import{Router as Zi}from"express";var{PARAMS:Ke}=A.REQUEST,{handleAsync:Z}=f.fn,{checkStore:_r,checkCategory:Bs,checkProduct:Xi}=_.api.store,{search:ec,all:tc,store:rc,category:oc,product:sc}=U.api.stores,ue=Zi();ue.get("/search",Z(ec));ue.get("/",Z(tc));ue.get("/categories");ue.get("/products");ue.get(`/:${Ke.ID.STORE}`,Z(_r),Z(rc));ue.get(`/:${Ke.ID.STORE}/:${Ke.ID.CATEGORY}`,Z(_r),Z(Bs),Z(oc));ue.get(`/:${Ke.ID.STORE}/:${Ke.ID.CATEGORY}/:${Ke.ID.PRODUCT}`,Z(_r),Z(Bs),Z(Xi),Z(sc));import{Router as vc}from"express";import{Router as Pc}from"express";import{Router as ac}from"express";var at=ac(),{products:nc,categories:ic,orders:cc}=U.api.dashboard.store.stats,{handleAsync:Fr}=f.fn;at.get("/products",Fr(nc));at.get("/categories",Fr(ic));at.get("/orders",Fr(cc));import{Router as dc}from"express";var{upload:Ks}=D,{handleAsync:oe}=f.fn,{REQUEST:{PARAMS:Gr},UPLOAD:{IMAGE:Ys}}=A,{isCategoryOwner:Vr}=_.api.store,{all:lc,category:uc,create:pc,update:mc,remove:fc}=U.api.dashboard.store.categories,Ce=dc();Ce.get("/",oe(lc));Ce.get(`/:${Gr.ID.CATEGORY}`,oe(Vr),oe(uc));Ce.post("/",oe(Ks.single(Ys)),oe(pc));Ce.put(`/:${Gr.ID.CATEGORY}`,oe(Vr),oe(Ks.single(Ys)),oe(mc));Ce.delete(`/:${Gr.ID.CATEGORY}`,oe(Vr),oe(fc));import{Router as Rc}from"express";var{REQUEST:Mr}=A,{upload:Ec}=D,{handleAsync:pe}=f.fn,{isProductOwner:vr}=_.api.store,{all:yc,product:Ic,create:Tc,update:Oc,remove:gc}=U.api.dashboard.store.products,De=Rc();De.get("/",pe(yc));De.get(`/:${Mr.PARAMS.ID.PRODUCT}`,pe(vr),pe(Ic));De.post("/",pe(Ec.fields([{name:"models",maxCount:1},{name:"images"}])),pe(Tc));De.put(`/:${Mr.PARAMS.ID.PRODUCT}`,pe(vr),pe(Oc));De.delete(`/:${Mr.PARAMS.ID.PRODUCT}`,pe(vr),pe(gc));import{Router as Ac}from"express";var{REQUEST:ks}=A,it=Ac(),{all:Sc,order:Nc,patch:wc}=U.api.dashboard.store.orders,{isOrderOwner:js}=_.api.store,{handleAsync:nt}=f.fn;it.get("/",nt(Sc));it.get(`/:${ks.PARAMS.ID.ORDER}`,nt(js),nt(Nc));it.patch(`/:${ks.PARAMS.ID.ORDER}`,nt(js),nt(wc));var{upload:hc}=D,{IMAGE:Uc}=A.UPLOAD,{handleAsync:Dt}=f.fn,{profile:Cc,update:Dc,remove:bc}=U.api.dashboard.store,me=Pc();me.get("/",Dt(Cc));me.put("/",Dt(hc.single(Uc)),Dt(Dc));me.delete("/",Dt(bc));me.use("/stats",at);me.use("/categories",Ce);me.use("/products",De);me.use("/orders",it);import{Router as Mc}from"express";import{Router as xc}from"express";var be=xc(),{users:Lc,stores:_c,orders:Fc,products:Gc,categories:Vc}=U.api.dashboard.admin.stats,{handleAsync:ct}=f.fn;be.get("/users",ct(Lc));be.get("/stores",ct(_c));be.get("/orders",ct(Fc));be.get("/products",ct(Gc));be.get("/categories",ct(Vc));var qr=Mc();qr.use("/stats",be);var{handleAsync:zs}=f.fn,{api:{store:{isSeller:qc},admin:{isAdmin:Bc}}}=_,bt=vc();bt.use("/store",zs(qc),me);bt.use("/admin",zs(Bc),qr);var{isAuthenticated:Hs}=_.fn,{handleAsync:Qs}=f.fn,Ye=Kc();Ye.use("/auth",ge);Ye.use("/user",Qs(Hs),Se);Ye.use("/stores",ue);Ye.use("/dashboard",Qs(Hs),bt);import{Router as nd}from"express";import{Router as Yc}from"express";var{upload:kc}=D,{handleAsync:$s}=f.fn,{email:jc}=U.security.access,Br=Yc();Br.post("/email",$s(kc.none()),$s(jc));import{Router as od}from"express";import{Router as zc}from"express";var{upload:Hc}=D,{handleAsync:Kr}=f.fn,{notAuthenticated:Qc}=_.fn,{email:$c}=U.security.validate.user,Yr=zc();Yr.post("/email",Kr(Qc),Kr(Hc.none()),Kr($c));import{Router as Jc}from"express";var{upload:kr}=D,{handleAsync:Ne}=f.fn,{isSeller:Js}=_.api.store,{name:Wc,category:Zc,product:Xc}=U.security.validate.store,dt=Jc();dt.post("/name",Ne(kr.none()),Ne(Wc));dt.post("/category",Ne(Js),Ne(kr.none()),Ne(Zc));dt.post("/product",Ne(Js),Ne(kr.none()),Ne(Xc));import{Router as ed}from"express";var jr=ed(),{token:td}=U.security.validate.access,{handleAsync:Ws}=f.fn,{upload:rd}=D;jr.post("/token",Ws(rd.none()),Ws(td));var lt=od(),{handleAsync:sd}=f.fn,{isAuthenticated:ad}=_.fn;lt.use("/access",jr);lt.use("/user",Yr);lt.use("/store",sd(ad),dt);var xt=nd();xt.use("/validate",lt);xt.use("/access",Br);var Lt=id();Lt.use("/api",Ye);Lt.use("/security",xt);var P=_t();P.set("env",k.NODE.ENV);P.set("trust proxy",1);P.disable("x-powered-by");P.disable("view cache");P.enable("json escape");P.enable("etag");var{TIME:Od,PACKAGE:gd}=N,{COOKIE:Ad,HTTP:zr}=A;if(!IS_PRODUCTION){let t=(await import("errorhandler")).default;P.use(t({log:!0}))}var{tmp:Sd,app:{initLimiter:Nd,initSession:wd},swagger:Pd,options:hd}=D;await Sd.initTmpDir();var Xs=Pd.init();P.use(pd(Od.MINUTE*5));P.use(Ed(async(t,e,s)=>{let{RESPONSE_TIME:r}=zr.HEADERS;if(e.setHeader(r,s),IS_PRODUCTION)return;let{method:o,originalUrl:a}=t,{statusCode:n}=e,{ResponseTime:i}=m.db,{nowInSecond:u}=f.fn;await i.create({date:u(),time:s,method:o,path:a,statusCode:n},{fields:["date","time","method","path","statusCode"]})}));P.use(Rd({credentials:!0,origin:(t,e)=>e(null,t)}));P.use(Nd());P.use(Zs({level:9,filter(t,e){let{getHeader:s}=f.fn,{NO_COMPRESSION:r}=zr.HEADERS,o=s(t.headers,r),{toBoolean:a}=E.validators;return a.parse(o)?!1:Zs.filter(t,e)}}));P.use(md(zr.HEADERS.METHOD_OVERRIDE));P.use(ld(IS_PRODUCTION?"combined":"dev"));P.use(_t.urlencoded({extended:!0}));P.use(_t.json({limit:"10mb"}));P.use(fd(k.COOKIE.PARSER));P.use(Id(k.COOKIE.SECRET));P.use(ud());P.use(cd());P.use(dd({store:wd(),name:Ad.SESSION,secret:k.SESSION.SECRET,resave:!1,saveUninitialized:!1,proxy:!0,cookie:hd.cookieOptions}));P.use(de.initialize());P.use(de.session());P.use(yd.mw());P.use(`/v${gd.VERSION}`,Lt);P.use(_t.static(Td.join(__root,A.GLOBAL.PUBLIC),{etag:!0}));P.use("/docs",Xs.serve,Xs.ui);P.all("*",async(t,e)=>e.status(ea.NOT_FOUND).json({success:!1}));P.use(async(t,e,s,r)=>{await $.handleError(t),s.status(ea.INTERNAL_SERVER_ERROR).json({success:!1,message:"Server error"})});process.on("unhandledRejection",t=>{throw t});process.on("uncaughtException",async t=>{await Promise.all([$.handleError(t),sequelize.close()]),process.exit(1)});var II=P;export{II as default};
